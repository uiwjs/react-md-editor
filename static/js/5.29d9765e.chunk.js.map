{"version":3,"file":"static/js/5.29d9765e.chunk.js","mappings":"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","sources":["../../node_modules/dagre-d3-es/src/graphlib/json.js","../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-line.js","../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js","../../node_modules/lodash-es/clone.js","../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-rect.js","../../node_modules/khroma/dist/methods/channel.js","../../node_modules/dagre-d3-es/src/dagre-js/arrows.js","../../node_modules/dagre-d3-es/src/dagre-js/label/add-label.js","../../node_modules/dagre-d3-es/src/dagre-js/label/add-svg-label.js","../../node_modules/dagre-d3-es/src/dagre-js/label/add-text-label.js","../../node_modules/dagre-d3-es/src/dagre-js/create-clusters.js","../../node_modules/dagre-d3-es/src/dagre-js/create-edge-labels.js","../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-node.js","../../node_modules/dagre-d3-es/src/dagre-js/create-edge-paths.js","../../node_modules/dagre-d3-es/src/dagre-js/create-nodes.js","../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-ellipse.js","../../node_modules/dagre-d3-es/src/dagre-js/shapes.js","../../node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-circle.js","../../node_modules/dagre-d3-es/src/dagre-js/render.js","../../node_modules/dagre-d3-es/src/dagre-js/position-nodes.js","../../node_modules/dagre-d3-es/src/dagre-js/position-edge-labels.js","../../node_modules/dagre-d3-es/src/dagre-js/position-clusters.js","../../node_modules/dagre-d3-es/src/dagre-js/label/add-html-label.js","../../node_modules/dagre-d3-es/src/dagre-js/util.js"],"sourcesContent":["import * as _ from 'lodash-es';\nimport { Graph } from './graph.js';\n\nexport { write, read };\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound(),\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g),\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function (v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function (e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function (entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n","export { intersectLine };\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n","import { intersectLine } from './intersect-line.js';\n\nexport { intersectPolygon };\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","export { intersectRect };\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n","/* IMPORT */\nimport _ from '../utils/index.js';\nimport Color from '../color/index.js';\n/* MAIN */\nconst channel = (color, channel) => {\n    return _.lang.round(Color.parse(color)[channel]);\n};\n/* EXPORT */\nexport default channel;\n","import * as util from './util.js';\n\nexport { arrows, setArrows };\n\nvar arrows = {\n  normal,\n  vee,\n  undirected,\n};\n\nfunction setArrows(value) {\n  arrows = value;\n}\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 5 L 10 5')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n","import { addHtmlLabel } from './add-html-label.js';\nimport { addSVGLabel } from './add-svg-label.js';\nimport { addTextLabel } from './add-text-label.js';\n\nexport { addLabel };\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append('g');\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === 'svg') {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch (location) {\n    case 'top':\n      y = -node.height / 2;\n      break;\n    case 'bottom':\n      y = node.height / 2 - labelBBox.height;\n      break;\n    default:\n      y = -labelBBox.height / 2;\n  }\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n\n  return labelSvg;\n}\n","import * as util from '../util.js';\n\nexport { addSVGLabel };\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n","import * as util from '../util.js';\n\nexport { addTextLabel };\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append('tspan')\n      .attr('xml:space', 'preserve')\n      .attr('dy', '1em')\n      .attr('x', '1')\n      .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n","import * as d3 from 'd3';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createClusters, setCreateClusters };\n\nvar createClusters = function (selection, g) {\n  var clusters = g.nodes().filter(function (v) {\n    return util.isSubgraph(g, v);\n  });\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\n    return v;\n  });\n\n  util.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n\n  var enterSelection = svgClusters\n    .enter()\n    .append('g')\n    .attr('class', 'cluster')\n    .attr('id', function (v) {\n      var node = g.node(v);\n      return node.id;\n    })\n    .style('opacity', 0)\n    .each(function (v) {\n      var node = g.node(v);\n      var thisGroup = d3.select(this);\n      d3.select(this).append('rect');\n      var labelGroup = thisGroup.append('g').attr('class', 'label');\n      addLabel(labelGroup, node, node.clusterLabelPos);\n    });\n\n  svgClusters = svgClusters.merge(enterSelection);\n\n  svgClusters = util.applyTransition(svgClusters, g).style('opacity', 1);\n\n  svgClusters.selectAll('rect').each(function (c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  return svgClusters;\n};\n\nfunction setCreateClusters(value) {\n  createClusters = value;\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createEdgeLabels, setCreateEdgeLabels };\n\nlet createEdgeLabels = function (selection, g) {\n  var svgEdgeLabels = selection\n    .selectAll('g.edgeLabel')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n\n  svgEdgeLabels = selection.selectAll('g.edgeLabel');\n\n  svgEdgeLabels.each(function (e) {\n    var root = d3.select(this);\n    root.select('.label').remove();\n    var edge = g.edge(e);\n    var label = addLabel(root, g.edge(e), 0).classed('label', true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr('id', edge.labelId);\n    }\n    if (!_.has(edge, 'width')) {\n      edge.width = bbox.width;\n    }\n    if (!_.has(edge, 'height')) {\n      edge.height = bbox.height;\n    }\n  });\n\n  var exitSelection;\n\n  if (svgEdgeLabels.exit) {\n    exitSelection = svgEdgeLabels.exit();\n  } else {\n    exitSelection = svgEdgeLabels.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgEdgeLabels;\n};\n\nfunction setCreateEdgeLabels(value) {\n  createEdgeLabels = value;\n}\n","export { intersectNode };\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { intersectNode } from './intersect/intersect-node.js';\nimport * as util from './util.js';\n\nexport { createEdgePaths, setCreateEdgePaths };\n\nvar createEdgePaths = function (selection, g, arrows) {\n  var previousPaths = selection\n    .selectAll('g.edgePath')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  var newPaths = enter(previousPaths, g);\n  exit(previousPaths, g);\n\n  var svgPaths = previousPaths.merge !== undefined ? previousPaths.merge(newPaths) : previousPaths;\n  util.applyTransition(svgPaths, g).style('opacity', 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function (e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    util.applyClass(\n      domEdge,\n      edge['class'],\n      (domEdge.classed('update') ? 'update ' : '') + 'edgePath'\n    );\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _.uniqueId('arrowhead');\n\n    var domEdge = d3\n      .select(this)\n      .attr('marker-end', function () {\n        return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n      })\n      .style('fill', 'none');\n\n    util.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    util.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n};\n\nfunction setCreateEdgePaths(value) {\n  createEdgePaths = value;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split('#')[0];\n  return baseUrl + '#' + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  // @ts-expect-error\n  var line = (d3.line || d3.svg.line)()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    });\n\n  (line.curve || line.interpolate)(edge.curve);\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement\n    .getScreenCTM()\n    .inverse()\n    .multiply(elem.getScreenCTM())\n    .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter\n    .append('path')\n    .attr('class', 'path')\n    .attr('d', function (e) {\n      var edge = g.edge(e);\n      var sourceElem = g.node(e.v).elem;\n      var points = _.range(edge.points.length).map(function () {\n        return getCoords(sourceElem);\n      });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append('defs');\n  return svgPathsEnter;\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createNodes, setCreateNodes };\n\nvar createNodes = function (selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function (v) {\n    return !util.isSubgraph(g, v);\n  });\n  var svgNodes = selection\n    .selectAll('g.node')\n    .data(simpleNodes, function (v) {\n      return v;\n    })\n    .classed('update', true);\n\n  svgNodes.exit().remove();\n\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n\n  svgNodes = selection.selectAll('g.node');\n\n  svgNodes.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    util.applyClass(\n      thisGroup,\n      node['class'],\n      (thisGroup.classed('update') ? 'update ' : '') + 'node'\n    );\n\n    thisGroup.select('g.label').remove();\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    var labelDom = addLabel(labelGroup, node);\n    var shape = shapes[node.shape];\n    var bbox = _.pick(labelDom.node().getBBox(), 'width', 'height');\n\n    node.elem = this;\n\n    if (node.id) {\n      thisGroup.attr('id', node.id);\n    }\n    if (node.labelId) {\n      labelGroup.attr('id', node.labelId);\n    }\n\n    if (_.has(node, 'width')) {\n      bbox.width = node.width;\n    }\n    if (_.has(node, 'height')) {\n      bbox.height = node.height;\n    }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\n      'transform',\n      'translate(' +\n        (node.paddingLeft - node.paddingRight) / 2 +\n        ',' +\n        (node.paddingTop - node.paddingBottom) / 2 +\n        ')'\n    );\n\n    var root = d3.select(this);\n    root.select('.label-container').remove();\n    var shapeSvg = shape(root, bbox, node).classed('label-container', true);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  var exitSelection;\n\n  if (svgNodes.exit) {\n    exitSelection = svgNodes.exit();\n  } else {\n    exitSelection = svgNodes.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgNodes;\n};\n\nfunction setCreateNodes(value) {\n  createNodes = value;\n}\n","export { intersectEllipse };\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n","import { intersectCircle } from './intersect/intersect-circle.js';\nimport { intersectEllipse } from './intersect/intersect-ellipse.js';\nimport { intersectPolygon } from './intersect/intersect-polygon.js';\nimport { intersectRect } from './intersect/intersect-rect.js';\n\nexport { shapes, setShapes };\n\nvar shapes = {\n  rect,\n  ellipse,\n  circle,\n  diamond,\n};\n\nfunction setShapes(value) {\n  shapes = value;\n}\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('width', bbox.width)\n    .attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent\n    .insert('ellipse', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('rx', rx)\n    .attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent\n    .insert('circle', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2;\n  var h = (bbox.height * Math.SQRT2) / 2;\n  var points = [\n    { x: 0, y: -h },\n    { x: -w, y: 0 },\n    { x: 0, y: h },\n    { x: w, y: 0 },\n  ];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (p) {\n        return p.x + ',' + p.y;\n      })\n      .join(' ')\n  );\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n","import { intersectEllipse } from './intersect-ellipse.js';\n\nexport { intersectCircle };\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { layout } from '../dagre/index.js';\nimport { arrows, setArrows } from './arrows.js';\nimport { createClusters, setCreateClusters } from './create-clusters.js';\nimport { createEdgeLabels, setCreateEdgeLabels } from './create-edge-labels.js';\nimport { createEdgePaths, setCreateEdgePaths } from './create-edge-paths.js';\nimport { createNodes, setCreateNodes } from './create-nodes.js';\nimport { positionClusters } from './position-clusters.js';\nimport { positionEdgeLabels } from './position-edge-labels.js';\nimport { positionNodes } from './position-nodes.js';\nimport { shapes, setShapes } from './shapes.js';\n\nexport { render };\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var fn = function (svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) return createNodes;\n    setCreateNodes(value);\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) return createClusters;\n    setCreateClusters(value);\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) return createEdgeLabels;\n    setCreateEdgeLabels(value);\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) return createEdgePaths;\n    setCreateEdgePaths(value);\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) return shapes;\n    setShapes(value);\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) return arrows;\n    setArrows(value);\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  curve: d3.curveLinear,\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX,\n      });\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY,\n      });\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding,\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionNodes };\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { positionEdgeLabels };\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionClusters };\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n\n  util\n    .applyTransition(created.selectAll('rect'), g)\n    .attr('width', function (v) {\n      return g.node(v).width;\n    })\n    .attr('height', function (v) {\n      return g.node(v).height;\n    })\n    .attr('x', function (v) {\n      var node = g.node(v);\n      return -node.width / 2;\n    })\n    .attr('y', function (v) {\n      var node = g.node(v);\n      return -node.height / 2;\n    });\n}\n","import * as util from '../util.js';\n\nexport { addHtmlLabel };\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n\n  var client = div.node().getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n","import * as _ from 'lodash-es';\n\n// Public utility functions\nexport { isSubgraph, edgeToId, applyStyle, applyClass, applyTransition };\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n"],"names":["write","g","json","options","directed","isDirected","multigraph","isMultigraph","compound","isCompound","nodes","writeNodes","edges","writeEdges","_","graph","value","v","nodeValue","node","parent","e","edgeValue","edge","w","name","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","y","x","sameSign","Math","abs","intersectPolygon","polyPoints","point","x1","y1","intersections","minX","Number","POSITIVE_INFINITY","minY","forEach","entry","min","left","width","top","height","i","length","intersect","push","sort","p","q","pdx","pdy","distp","sqrt","qdx","qdy","distq","console","log","baseClone","intersectRect","sx","sy","dx","dy","h","channel","color","lang","round","Color","parse","arrows","normal","id","type","path","append","attr","style","util","vee","undirected","addLabel","root","location","label","labelSvg","labelType","domNode","appendChild","labelStyle","addSVGLabel","addHtmlLabel","lines","text","ch","newText","escaped","processEscapeSequences","split","addTextLabel","labelBBox","getBBox","createClusters","selection","clusters","filter","svgClusters","selectAll","data","exit","remove","enterSelection","enter","each","thisGroup","d3","this","clusterLabelPos","merge","c","domCluster","createEdgeLabels","exitSelection","svgEdgeLabels","classed","select","bbox","labelId","intersectNode","createEdgePaths","previousPaths","newPaths","svgPaths","svgPathsEnter","sourceElem","elem","createLine","points","map","matrix","ownerSVGElement","getScreenCTM","inverse","multiply","translate","f","getCoords","svgPathExit","undefined","domEdge","arrowheadId","url","href","fragmentId","tail","head","slice","unshift","calcPoints","arrowhead","line","d","curve","interpolate","createNodes","shapes","simpleNodes","svgNodes","labelGroup","labelDom","shape","paddingLeft","paddingRight","paddingTop","paddingBottom","shapeSvg","shapeBBox","intersectEllipse","rx","ry","cx","cy","px","py","det","rect","insert","ellipse","circle","r","max","intersectCircle","diamond","SQRT2","join","render","fn","svg","children","paddingX","paddingY","padding","NODE_DEFAULT_ATTRS","k","_prevWidth","_prevHeight","EDGE_DEFAULT_ATTRS","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","layout","positionNodes","positionEdgeLabels","created","positionClusters","postProcessGraph","arguments","setCreateNodes","setCreateClusters","setCreateEdgeLabels","setCreateEdgePaths","setShapes","setArrows","empty","fo","div","html","client","getBoundingClientRect","isSubgraph","edgeToId","escapeId","ID_DELIM","str","String","replace","applyStyle","dom","styleFn","applyClass","classFn","otherClasses","applyTransition","transition"],"sourceRoot":""}