{"version":3,"file":"static/js/parse5-vendor.cace22f0.js","mappings":"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","sources":["../../node_modules/parse5/dist/common/unicode.js","../../node_modules/parse5/dist/common/error-codes.js","../../node_modules/parse5/dist/tokenizer/preprocessor.js","../../node_modules/parse5/dist/common/token.js","../../node_modules/parse5/dist/common/html.js","../../node_modules/parse5/dist/tokenizer/index.js","../../node_modules/parse5/dist/parser/open-element-stack.js","../../node_modules/parse5/dist/parser/formatting-element-list.js","../../node_modules/parse5/dist/tree-adapters/default.js","../../node_modules/parse5/dist/common/doctype.js","../../node_modules/parse5/dist/common/foreign-content.js","../../node_modules/parse5/dist/parser/index.js","../../node_modules/parse5/dist/serializer/index.js","../../node_modules/parse5/dist/index.js"],"sourcesContent":["const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/decode';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        if (this.current && this.currentTagId !== undefined) {\n            this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n        }\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(Math.max(targetIdx, 0));\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== undefined &&\n            this.currentTagId !== exclusionId &&\n            IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex !== -1) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx === -1) {\n            this.entries.length = 0;\n        }\n        else {\n            this.entries.splice(0, markerIdx + 1);\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || (current && this.treeAdapter.getNamespaceURI(current) === NS.HTML);\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode =\n            !isHTML && current !== undefined && tid !== undefined && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent !== null && parent !== void 0 ? parent : this.document, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                currentTagId !== undefined &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex === -1 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return (this.fosterParentingEnabled &&\n            this.openElements.currentTagId !== undefined &&\n            this._isElementCausesFosterParenting(this.openElements.currentTagId));\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(Math.max(idx, 0));\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (p.openElements.currentTagId !== undefined && NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (p.openElements.currentTagId !== undefined && TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        p.openElements.currentTagId !== undefined &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/escape';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\nexport * as html from './common/html.js';\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n"],"names":["UNDEFINED_CODE_POINTS","Set","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","has","ERR","Preprocessor","constructor","handler","this","html","pos","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","line","lastErrOffset","col","Number","offset","getError","code","cpOffset","startCol","startOffset","startLine","endLine","endCol","endOffset","_err","onParseError","_addGap","push","_processSurrogate","length","nextCp","charCodeAt","isSurrogatePair","$","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","substring","write","chunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","pattern","caseSensitive","i","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","pop","TokenType","getTokenAttr","token","attrName","attrs","name","value","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","Map","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SEARCH","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","tagName","_a","get","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","NUMBERED_HEADERS","UNESCAPED_TEXT","hasUnescapedText","tn","scriptingEnabled","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiAlphaNumeric","DIGIT_0","DIGIT_9","isAsciiDigit","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","options","paused","inLoop","inForeignNode","lastStartTagName","active","state","returnState","entityStartPos","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","entityDecoder","EntityDecoder","htmlDecodeTree","consumed","_flushCodePointConsumedAsCharacterReference","missingSemicolonAfterCharacterReference","absenceOfDigitsInNumericCharacterReference","validateNumericCharacterReference","error","NULL","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","getErrorForNumericCharacterReference","undefined","arguments","_b","call","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","Error","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","type","START_TAG","tagID","selfClosing","ackSelfClosing","location","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","data","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","publicId","systemId","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","Object","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","String","fromCodePoint","_emitChars","_startCharacterReference","CHARACTER_REFERENCE","startEntity","_isCharacterReferenceInAttribute","DecodingMode","Attribute","Legacy","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","_stateCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","LESS_THAN_SIGN","AMPERSAND","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","EQUALS_SIGN","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","fromCharCode","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","end","SEMICOLON","unknownNamedCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENTS_HTML","SCOPING_ELEMENTS_HTML_LIST","SCOPING_ELEMENTS_HTML_BUTTON","SCOPING_ELEMENTS_MATHML","SCOPING_ELEMENTS_SVG","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","current","document","items","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","element","lastIndexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","replace","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","Math","max","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","namespace","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInDynamicScope","htmlScope","hasInScope","hasInListItemScope","hasInButtonScope","hasNumberedHeaderInScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","entry","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","map","neAttr","validCandidates","candidate","every","cAttr","insertMarker","unshift","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","indexOf","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","find","getElementEntry","defaultTreeAdapter","createDocument","nodeName","mode","NO_QUIRKS","childNodes","createDocumentFragment","createElement","namespaceURI","parentNode","createCommentNode","createTextNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","content","setDocumentType","doctypeNode","node","setDocumentMode","getDocumentMode","detachNode","insertText","text","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","prototype","hasOwnProperty","setNodeSourceCodeLocation","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","_objectSpread","VALID_DOCTYPE_NAME","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","prefix","MIME_TYPES","SVG_ATTRS_ADJUSTMENT_MAP","toLowerCase","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","ns","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parse","parser","getFragmentParser","opts","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","fragment","_adoptNodes","beforeToken","loc","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","parent","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","donor","child","closingToken","ctLoc","endLoc","endTag","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent","_reconstructActiveFormattingElements","listLength","endIndex","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","id","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","doctype","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","_ref","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","substr","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","rawTextStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","parseFragment"],"sourceRoot":""}