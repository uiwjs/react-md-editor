{"version":3,"file":"static/js/refractor-prismjs-vendor.91ced1ea.js","mappings":"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AET,CAEEZ,QAAS,iBACTC,YAAY,EACZW,MAAO,aAGX,cAAe,CACbZ,QAAS,0BACTC,YAAY,GAiBdiB,OAAQ,CACNlB,QAAS,qBACTU,QAAQ,EACRC,OAAQ8mC,IAGR1L,EAAS,SAAUxG,GACrB,OAAQA,EAAM,IAAIzG,QAAQ,4BAA6B,OACzD,EACI8Y,EAAmB,SAAUC,GAC/B,OAAO,IAAIxnC,OAAO,aAAewnC,EAAIvR,IAAIyF,GAAQzM,KAAK,KAAO,aAC/D,EACIwY,EAAW,CACb,iBAAkB,CAChB,KACA,QACA,QACA,OACA,UACA,MACA,WACA,kBACA,MACA,OACA,YACA,aACA,OACA,WACA,OACA,OACA,QACA,WACA,OACA,QACA,OACA,MACA,IACA,IACA,QACA,QACA,QACA,OACA,kBACA,MACA,SACA,MACA,QACA,OACA,QACA,SACA,OACA,UACA,UACA,OACA,UACA,MACA,gBACA,WACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,UACA,YACA,OACA,QACA,OACA,SACA,gBACA,SACA,QACA,YACA,WACA,oBACA,kBACA,OACA,YACA,MACA,QACA,MACA,QACA,MACA,iBACA,WAEF,uBAAwB,CAEtB,UACA,YACA,YACA,KACA,SACA,MACA,IACA,WACA,KACA,SACA,QACA,SACA,YACA,aACA,WACA,SACA,UACA,gBACA,oBACA,YACA,UACA,mBACA,KACA,WAEA,IACA,KACA,MAEF,oBAAqB,CACnB,aACA,WACA,SACA,mBACA,SACA,aACA,aACA,YACA,mBACA,kBACA,WACA,aACA,OACA,WACA,UACA,aACA,YACA,WACA,OACA,OACA,MACA,WACA,UACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,oBACA,aACA,cACA,OACA,SACA,gBACA,oBACA,gCACA,iCACA,YACA,UACA,WACA,SACA,aACA,aACA,UACA,SACA,OACA,eACA,eACA,QACA,OACA,SACA,YACA,UACA,QACA,WACA,cACA,WACA,QACA,YACA,aACA,aACA,qBACA,SACA,SACA,WACA,eACA,UACA,aACA,OACA,UACA,QACA,SACA,SACA,OACA,aACA,WACA,YACA,MACA,aACA,UACA,aACA,SACA,cACA,YACA,OACA,YACA,SACA,YACA,iBACA,UACA,eACA,UACA,gBACA,eACA,YACA,mBACA,UACA,SACA,WACA,OACA,aACA,oBACA,YACA,UACA,UACA,YACA,WACA,WACA,aACA,OACA,cACA,iBACA,QACA,UACA,YACA,gBACA,cACA,oBACA,MACA,UACA,OACA,SACA,OACA,sBACA,aACA,aACA,mBACA,UACA,cACA,SACA,aACA,WACA,kBACA,OACA,OACA,QACA,QACA,QACA,YACA,SACA,eACA,eACA,WACA,WACA,MACA,aACA,YACA,WACA,QACA,oBACA,eACA,OACA,cACA,QACA,UACA,UACA,OACA,cACA,SACA,OACA,gBACA,YACA,eAEF,eAAgB,CACd,UACA,kBACA,MACA,cACA,iBACA,aACA,UACA,eACA,UACA,WACA,cACA,MACA,IACA,IACA,cACA,IACA,MACA,IACA,KACA,SACA,cACA,wBACA,OACA,IACA,OACA,IACA,WACA,SACA,cACA,KACA,QACA,aACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,WACA,KACA,iBACA,KACA,MACA,UACA,aACA,KACA,KACA,MACA,QACA,WACA,SACA,KACA,UACA,UACA,MACA,SACA,KACA,SACA,QACA,OACA,WACA,aACA,UACA,WACA,OACA,YACA,cACA,QACA,MACA,iBACA,YACA,yBACA,aACA,QACA,aACA,QACA,UACA,MACA,SACA,wBACA,MACA,OACA,KACA,OACA,WACA,QACA,YACA,cAIJhkC,OAAOkB,KAAK8iC,GAAU3V,SAAQ,SAAUpL,GACtCwgB,EAAOxgB,GAAG/mB,QAAU4nC,EAAiBE,EAAS/gB,GAChD,IAgOAwgB,EAAOI,YAAY3nC,QAAU4nC,EA/NX,CAEhB,MACA,QACA,OACA,MACA,OACA,QACA,QACA,OACA,QACA,UACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,SACA,KACA,UACA,YACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,QACA,UACA,KACA,QACA,OACA,SACA,aACA,aACA,WACA,QACA,UACA,OACA,KACA,OACA,SACA,QACA,OACA,SACA,MACA,OACA,SACA,MACA,WACA,YAEA,iBACA,kBACA,SACA,YACA,QACA,YACA,YACA,WACA,cACA,UACA,YACA,gBACA,mBACA,SACA,MACA,UACA,cACA,aACA,SACA,cACA,OACA,eACA,YACA,UACA,eACA,eACA,aACA,kBACA,QACA,aACA,SACA,eACA,YACA,eACA,WACA,SACA,WACA,aACA,OACA,YACA,gBACA,eACA,OACA,UACA,UACA,YACA,gBACA,iBACA,kBACA,gBACA,UACA,OACA,YACA,cACA,UACA,cACA,aACA,OACA,aACA,iBACA,aACA,OACA,eACA,cACA,WACA,gBACA,YACA,UACA,QACA,aACA,QACA,OACA,aACA,UACA,aACA,aACA,QACA,OACA,YACA,iBACA,YAEA,UACA,eACA,cACA,iBACA,YACA,oBACA,kBACA,QACA,iBACA,eACA,gBAEA,kBACA,cACA,gBACA,gBACA,kBACA,cAEA,OACA,UACA,YACA,YACA,UACA,eACA,iBACA,aACA,OACA,SACA,cACA,qBACA,SACA,mBAEA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAEA,gBACA,cACA,iBACA,cACA,eACA,aACA,cACA,WACA,iBACA,oBACA,cACA,qBACA,WACA,eACA,mBACA,oBACA,iBACA,UACA,iBACA,iBACA,cACA,SACA,gBACA,eACA,eACA,aACA,aACA,UACA,oBACA,eACA,YACA,cACA,wBACA,oBAIFloC,EAAMG,UAAU0nC,OAASA,CAC1B,CA95BA,CA85BE7nC,EACL,CCh6Be,SAASqoC,GAAOroC,IAC5B,SAAWA,GAMVA,EAAMG,UAAiB,MAAI,CACzB+B,QAAS,CACP5B,QAAS,aAEXkB,OAAQ,CACNlB,QAAS,UACTU,QAAQ,GAEV,iBAAkB,CAChBV,QAAS,mBACTY,MAAO,UAET,iBAAkB,CAChBZ,QAAS,OACTY,MAAO,aAETR,OAAQ,MACRG,SAAU,sCACVsB,YAAa,QACbY,SAAU,QACV,eAAgB,CACdzC,QAAS,eACTY,MAAO,QAGZ,CA/BA,CA+BElB,EACL,CChCe,SAASsoC,GAAuBtoC,GAC7CA,EAAMC,SAASC,EAAAA,GACfF,EAAMG,UAAU,4BAA8BH,EAAMG,UAAUC,OAC5D,QACA,CACE8B,QAAS,SACT1B,QACE,oEACFK,SAAU,kDAGPb,EAAMG,UAAU,4BAA4B,cACnDH,EAAMG,UAAUW,aAAa,2BAA4B,UAAW,CAClE0oB,KAAM,CACJlpB,QACE,gGACFC,YAAY,EACZS,QAAQ,EACRC,OAAQ,CACN8B,SAAU,CACRzC,QAAS,yDACTW,OAAQ,CACNJ,SAAU,IACVL,QAAS,OACT2B,YAAa,aAGjBA,YAAa,OAGjBkO,OAAQ,CAEN/P,QAAS,kDACTC,YAAY,EACZW,MAAO,UACPD,OAAQ,CACNkB,YAAa,OAIrB,CCxCe,SAASomC,GAAKvoC,GAC3BA,EAAMC,SAAS+7B,EAAAA,GACd,SAAWh8B,GACVA,EAAMG,UAAUooC,KAAOvoC,EAAMG,UAAUC,OAAO,aAAc,CAAC,GAC7DJ,EAAMG,UAAUW,aAAa,OAAQ,UAAW,CAC9CkY,KAAM,CACJ,CACE1Y,QACE,gFACFY,MAAO,iBAIblB,EAAMG,UAAUooC,KAAK,qBAAqBjoC,QACxC,8KACKN,EAAMG,UAAUooC,KAAgB,UACvCvoC,EAAMG,UAAUW,aAAa,OAAQ,WAAY,CAC/C,mBAAoB,CAClBR,QAAS,YACTY,MAAO,iBAGN4uB,MAAMC,QAAQ/vB,EAAMG,UAAUooC,KAAK/nC,WACtCR,EAAMG,UAAUooC,KAAK/nC,QAAU,CAACR,EAAMG,UAAUooC,KAAK/nC,UAEvDR,EAAMG,UAAUooC,KAAK/nC,QAAQ0wB,QAC3B,CACE5wB,QAAS,kDACTC,YAAY,GAEd,CACED,QACE,wGACFC,YAAY,GAGjB,CAlCA,CAkCEP,EACL,CCtCe,SAASwoC,GAAQxoC,GAC9BA,EAAMG,UAAUqoC,QAAU,CACxB,gBAAiB,CACfloC,QAAS,0BACTY,MAAO,UAETM,OAAQ,CACNlB,QACE,gGACFW,OAAQ,CACNiB,QAAS,CACP5B,QAAS,wBACTC,YAAY,KAIlB2B,QAAS,CACP5B,QAAS,MACTU,QAAQ,GAEV2D,QAAS,+BACTjE,OAAQ,yDACRF,QAAS,CAEP,oEAEA,gIAEA,4VAEA,+JAEFK,SAAU,CACR,qDACA,CAEEP,QAAS,sBACTC,YAAY,IAGhB4B,YAAa,qBAEjB,CCzCe,SAASsmC,GAAIzoC,GAC1BA,EAAMC,SAAS4C,GAAAA,GACd,SAAW7C,GAOV,IAHA,IAAI0oC,EACF,iGACG9nC,OACI+xB,EAAI,EAAGA,EAAI,EAAGA,IACrB+V,EAAWA,EAAStZ,QAAQ,WAAW,WACrC,OAAOsZ,CACT,IAEFA,EAAWA,EAAStZ,QAAQ,UAAW,UAAUxuB,QACjD,IAAI6nC,EAAM,CACRvmC,QAAS,kBACTV,OAAQ,CACN,CAEElB,QAAS,iCACTU,QAAQ,GAEV,CACEV,QAASK,OACP,+DAA+DC,OAAOwuB,QACpE,WACA,WACE,OAAOsZ,CACT,KAGJ1nC,QAAQ,EACRC,OAAQ,CACNK,cAAe,CACbhB,QAASK,OACP,oDAAoDC,OAAOwuB,QACzD,WACA,WACE,OAAOsZ,CACT,KAGJnoC,YAAY,EACZU,OAAQ,CACN,4BAA6B,CAC3BX,QAAS,YACTY,MAAO,eAETK,KAAM,UAMhBf,QAAS,aACTmE,QAAS,qBACT,mBAAoB,CAClBrE,QAAS,uBACTC,YAAY,EACZW,MAAO,YAETT,SAAU,iBACVC,OAAQ,oBACRG,SACE,4EACFsB,YAAa,iBAEfsmC,EAAIjnC,OAAO,GAAGP,OAAOK,cAAcL,OAAOM,KAAOknC,EACjDzoC,EAAMG,UAAUsoC,IAAM,CACpB,cAAe,CAEbnoC,QAAS,eACTY,MAAO,WAET,gBAAiB,CACfZ,QAAS,cACTW,OAAQ,CACNq8B,UAAW,CACTh9B,QAAS,uBACTC,YAAY,EACZW,MAAO,WAETiB,YAAa,cACbyK,QAAS,CACPtM,QAAS,eACTY,MAAO,MACPD,OAAQwnC,KAId,oBAAqB,CACnBnoC,QAAS,kBACTW,OAAQ,CACNkB,YAAa,YACbyK,QAAS,CACPtM,QAAS,eACTY,MAAO,MACPD,OAAQwnC,MAKhBzoC,EAAMoD,MAAMC,IAAI,mBAAmB,SAAUC,GAE3C,IAAIhD,EAAUK,OACZ,mEAAmEC,OAAOwuB,QACxE,WACA,WACE,OAAOsZ,CACT,IAEF,MAEF1oC,EAAMG,UAAU,qBAAqBsD,kBACnCH,EACA,MACAhD,EAEJ,IACAN,EAAMoD,MAAMC,IAAI,kBAAkB,SAAUC,GAC1CtD,EAAMG,UAAU,qBAAqBuD,qBAAqBJ,EAAK,MACjE,GACD,CAzHA,CAyHEtD,EACL,CC5He,SAAS2oC,GAAI3oC,GAC1BA,EAAMC,SAASC,EAAAA,GACfF,EAAMG,UAAUyoC,kBAAoB5oC,EAAMG,UAAUwoC,IAClD3oC,EAAMG,UAAUC,OAAO,QAAS,CAC9BI,QACE,8GACFE,OACE,wEACFG,SACE,+FACFO,SACE,s5LACF2B,SACE,4rDAER,CChBe,SAAS8lC,GAAI7oC,GAI1BA,EAAMG,UAAU0oC,IAAM,CACpBC,MAAO,CACLxoC,QAAS,sCACTU,QAAQ,EACRC,OAAQ,CACN4nC,IAAK,CACHvoC,QAAS,0CACTC,YAAY,EACZU,OAAQ,MAEVkB,YAAa,UAGjBD,QAAS,CACP5B,QAAS,MACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QACE,sFACFC,YAAY,EACZS,QAAQ,EACRC,OAAQ,CACN8nC,aAAc,CACZzoC,QAAS,YACTC,YAAY,EACZW,MAAO,iBAIbV,QACE,wMACFmE,QAAS,qBACTlE,SAAU,wBACVC,OAAQ,CACNJ,QACE,uFACFC,YAAY,GAEdwoC,aAAc,CACZzoC,QAAS,YACTC,YAAY,EACZW,MAAO,eAETL,SAAU,kCACVsB,YAAa,iBAEfnC,EAAMG,UAAU0oC,IAAIC,MAAM7nC,OAAO4nC,IAAI5nC,OAASjB,EAAMG,UAAU0oC,GAChE,CCpDe,SAASG,GAAMhpC,GAC5BA,EAAMG,UAAU6oC,MAAQ,CACtB9mC,QAAS,kBACTV,OAAQ,CACNlB,QAAS,iBACTU,QAAQ,GAEVR,QAAS,wBACTyC,SAAU,UACVgmC,SAAU,CACR3oC,QAAS,UACTC,YAAY,EACZW,MAAO,UAGTiB,YAAa,OAEjB,CCjBe,SAAS+mC,GAASlpC,GAC/BA,EAAMG,UAAU+oC,SAAW,CACzBhnC,QAAS,MACTV,OAAQ,CACNlB,QACE,6EACFU,QAAQ,GAEV,aAAc,CAMZV,QACE,6IACFC,YAAY,GAEdC,QACE,4QACFC,SAAU,2BACVsC,SAAU,QACVrC,OAAQ,CACN,4FACA,0BAEFU,SAAU,qBACVuD,QAAS,qBACT9D,SAAU,2CACVsB,YAAa,gBAEjB,CC/Be,SAASgnC,GAAOnpC,GAC7BA,EAAMG,UAAUgpC,OAAS,CACvB,aAAc,CAEZ7oC,QACE,mFACFC,YAAY,EACZU,OAAQ,CACNkgC,QAAS,CACP7gC,QAAS,yDACTY,MAAO,cAIb+1B,OAAQ,CAEN32B,QACE,gFACFC,YAAY,EACZW,MAAO,OAETkhC,MAAO,CACL9hC,QAAS,gBACTC,YAAY,EACZW,MAAO,UAETigC,QAAS,CACP7gC,QAAS,uDACTY,MAAO,YAGb,CC/Be,SAASkoC,GAAQppC,GAC9BA,EAAMG,UAAUipC,QAAU,CACxBlnC,QAAS,CACP,CACE5B,QAAS,OACTU,QAAQ,EACRE,MAAO,sBAET,CACEZ,QAAS,QACTU,QAAQ,EACRE,MAAO,qBAET,CACEZ,QAAS,OACTU,QAAQ,EACRE,MAAO,qBAET,CACEZ,QAAS,OACTU,QAAQ,EACRE,MAAO,gBAET,CACEZ,QAAS,QACTU,QAAQ,EACRE,MAAO,mCAET,CACEZ,QAAS,MACTU,QAAQ,IAGZQ,OAAQ,CACNlB,QAAS,6BACTC,YAAY,EACZS,QAAQ,GAEVR,QAAS,mCACTE,OAAQ,UACRyB,YAAa,UAEfnC,EAAMG,UAAUkpC,GAAKrpC,EAAMG,UAAUipC,OACvC,CC3Ce,SAASE,GAAQtpC,IAC7B,SAAWA,GACV,IAAIupC,EAAW,uCAAuC3oC,OACtDZ,EAAMG,UAAUmpC,QAAU,CACxBE,SAAU,CACRlpC,QAAS,sBACTY,MAAO,UAETgB,QAAS,CACP5B,QAAS,gBACTC,YAAY,GAEdmB,IAAK,CACHpB,QAAS,iBACTC,YAAY,GAEdkpC,QAAS,CACPnpC,QACE,6vEACFC,YAAY,EACZU,OAAQ,CACN8hC,UAAW,CACTziC,QAAS,cACTC,YAAY,GAEdC,QAAS,eAGbkpC,SAAU,CACRppC,QACE,89NACFC,YAAY,EACZU,OAAQ,CACN8hC,UAAW,CACTziC,QAAS,cACTC,YAAY,GAEdC,QAAS,eAGb,aAAc,CAEZF,QAASK,OAAO,IAAM4oC,EAAW,OAASA,EAAW,MACrDhpC,YAAY,EACZU,OAAQ,CACN0oC,QAAS,CACPrpC,QAAS,UACTY,MAAO,YAET0oC,GAAI,CACFtpC,QAAS,iBACTY,MAAO,UAETiB,YAAa,OAGjB,aAAc,CACZ7B,QAASK,OAAO4oC,GAChBtoC,OAAQ,CACN4oC,GAAI,CACFvpC,QAAS,iBACTY,MAAO,YAETiB,YAAa,OAGjBm1B,OAAQ,CACNh3B,QACE,mtKACFC,YAAY,GAEdiB,OAAQ,CACNlB,QAAS,8CACTW,OAAQ,CACN0oC,QAAS,CACPrpC,QAAS,UACTY,MAAO,cAIbyoC,QAAS,CACPrpC,QAAS,UACTY,MAAO,YAGZ,CApFA,CAoFElB,EACL,CCtFe,SAAS8pC,GAAI9pC,GAC1BA,EAAMG,UAAU2pC,IAAM,CAUpB5nC,QAAS,QAIT6nC,QAAS,gBACT7H,SAAU,SAIV1gC,OAAQ,kCAMR86B,QAAS,CACPh8B,QAAS,iBACTW,OAAQ,CAONE,UAAW,aAgBf6oC,MAAO,YAWP,cAAe,mBAEnB,CC/De,SAASC,GAAKjqC,GAC3BA,EAAMC,SAAS4gC,EAAAA,GACf7gC,EAAMG,UAAU8pC,KAAOjqC,EAAMG,UAAUC,OAAO,IAAK,CACjDI,QACE,+gCAEN,CCPe,SAAS0pC,GAAGlqC,GAGzBA,EAAMG,UAAU+pC,GAAK,CACnBhoC,QAAS,CACP5B,QAAS,MACTU,QAAQ,GAEV,iBAAkB,CAChBV,QAAS,kCACTC,YAAY,EACZS,QAAQ,EACRC,OAAQ,CACNK,cAAe,CACbhB,QACE,0EACFC,YAAY,EACZU,OAAQ,CACNP,OAAQ,kBACRqC,SAAU,UACV,4BAA6B,CAC3BzC,QAAS,YACTY,MAAO,eAEToB,WAAY,CACVhC,QAAS,UACTW,OAAQ,QAIdO,OAAQ,YAGZhB,QAAS,kBACTmE,QAAS,qBACT,mBAAoB,CAElBrE,QACE,mFACFY,MAAO,WAETT,SAAU,wBACVW,SACE,kLACFV,OAAQ,YACRG,SAAU,qBACVsB,YAAa,eAEfnC,EAAMG,UAAU+pC,GAAG,kBAAkBjpC,OAAsB,cAAEA,OAC/C,WACZA,OAASjB,EAAMG,UAAU+pC,GAC3BlqC,EAAMG,UAAUgqC,IAAMnqC,EAAMG,UAAU+pC,EACxC,CCpDe,SAASE,GAAapqC,GACnCA,EAAMG,UAAU,iBAAmB,CACjC+B,QAAS,CACP5B,QAAS,+BACTC,YAAY,EACZS,QAAQ,GAEVw6B,WAAY,CACVl7B,QAAS,cACTU,QAAQ,GAEV,mBAAoB,CAClBV,QAAS,SACTY,MAAO,aAET04B,QAAS,CACPt5B,QAAS,oBACTC,YAAY,EACZW,MAAO,WAETT,SAAU,0BACVC,OAAQ,qCACRG,SAAU,yDACVsB,YAAa,YAEfnC,EAAMG,UAAc,GAAIH,EAAMG,UAAU,gBAC1C,CrB5BA6mC,GAAMllC,YAAc,QACpBklC,GAAMjlC,QAAU,GCDhBmlC,GAAIplC,YAAc,MAClBolC,GAAInlC,QAAU,GCHdolC,GAAOrlC,YAAc,SACrBqlC,GAAOplC,QAAU,GCDjBqlC,GAAatlC,YAAc,gBAC3BslC,GAAarlC,QAAU,CAAC,MAAO,QCA/B4lC,GAAO7lC,YAAc,SACrB6lC,GAAO5lC,QAAU,GCFjB8lC,GAAO/lC,YAAc,SACrB+lC,GAAO9lC,QAAU,GCDjBsmC,GAAOvmC,YAAc,QACrBumC,GAAOtmC,QAAU,GCAjBumC,GAAuBxmC,YAAc,2BACrCwmC,GAAuBvmC,QAAU,GCDjCwmC,GAAKzmC,YAAc,OACnBymC,GAAKxmC,QAAU,GCFfymC,GAAQ1mC,YAAc,UACtB0mC,GAAQzmC,QAAU,GCAlB0mC,GAAI3mC,YAAc,MAClB2mC,GAAI1mC,QAAU,GCDd4mC,GAAI7mC,YAAc,MAClB6mC,GAAI5mC,QAAU,CAAC,qBCFf8mC,GAAI/mC,YAAc,MAClB+mC,GAAI9mC,QAAU,GCDdinC,GAAMlnC,YAAc,QACpBknC,GAAMjnC,QAAU,GCDhBmnC,GAASpnC,YAAc,WACvBonC,GAASnnC,QAAU,GCDnBonC,GAAOrnC,YAAc,SACrBqnC,GAAOpnC,QAAU,GCDjBqnC,GAAQtnC,YAAc,UACtBsnC,GAAQrnC,QAAU,CAAC,MCDnBunC,GAAQxnC,YAAc,UACtBwnC,GAAQvnC,QAAU,GCDlB+nC,GAAIhoC,YAAc,MAClBgoC,GAAI/nC,QAAU,GCAdkoC,GAAKnoC,YAAc,OACnBmoC,GAAKloC,QAAU,GCFfmoC,GAAGpoC,YAAc,KACjBooC,GAAGnoC,QAAU,CAAC,OCDdqoC,GAAatoC,YAAc,gBAC3BsoC,GAAaroC,QAAU,CAAC,M,gBCGT,SAASsoC,GAASrqC,GAG/BA,EAAMG,UAAU,UAAYH,EAAMG,UAAU,aAAe,CACzD+B,QAAS,CACP5B,QAAS,SACTU,QAAQ,GAEVqb,QAAS,CACP/b,QAAS,+DACTC,YAAY,EACZW,MAAO,UAET,aAAc,CACZZ,QAAS,mCACTC,YAAY,EACZW,MAAO,UAETV,QAAS,CACPF,QAAS,4DACTC,YAAY,GAEdM,SAAU,KACVsB,YAAa,WAEjB,CCxBe,SAASmoC,GAAOtqC,GAC7BA,EAAMC,SAASC,EAAAA,GACd,SAAWF,GACV,IAAIsB,EAAgB,CAClBhB,QAAS,+CACTC,YAAY,EACZU,OAAQ,CACN,4BAA6B,CAC3BX,QAAS,aACTY,MAAO,eAEToB,WAAY,CACVhC,QAAS,UACTW,OAAQ,QAIdjB,EAAMG,UAAUmqC,OAAStqC,EAAMG,UAAUC,OAAO,QAAS,CACvDoB,OAAQ,CACNlB,QAAS,mDACTU,QAAQ,GAEVR,QACE,mIACFE,OACE,6FACFG,SAAU,CACRP,QACE,oJACFC,YAAY,GAEd4B,YAAa,sBAEfnC,EAAMG,UAAUW,aAAa,SAAU,SAAU,CAC/CmgC,QAAS,CACP3gC,QAAS,OACTY,MAAO,UACPF,QAAQ,GAEV,uBAAwB,CACtBV,QACE,8GACFU,QAAQ,EACRC,OAAQ,CACNK,cAAeA,EACfE,OAAQ,cAIdxB,EAAMG,UAAUW,aAAa,SAAU,cAAe,CACpD,cAAe,0DAEjBd,EAAMG,UAAUW,aAAa,SAAU,WAAY,CACjD0B,WAAY,CACVlC,QAAS,eACTC,YAAY,EACZW,MAAO,iBAGXI,EAAcL,OAAOqB,WAAWrB,OAASjB,EAAMG,UAAUmqC,MAC1D,CA1DA,CA0DEtqC,EACL,CC9De,SAASuqC,GAAQvqC,GAC9BA,EAAMG,UAAUoqC,QAAU,CACxBroC,QAAS,MACTsoC,YAAa,CACXlqC,QACE,mEACFU,QAAQ,EACRE,MAAO,SACPD,OAAQ,CACN,oBAAqB,CACnBX,QAAS,kCACTC,YAAY,EACZU,OAAQjB,EAAMG,UAAUu6B,YAI9Bl5B,OAAQ,CACNlB,QAAS,iDACTU,QAAQ,GAEVN,OAAQ,2CACRiE,QAAS,qBACT5B,SAAU,eACVu6B,UAAW,CACTh9B,QAAS,cACTY,MAAO,YAET,YAAa,CACXZ,QAAS,iEACTU,QAAQ,GAEV,aAAc,CACZV,QAAS,oBACTY,MAAO,cAETupC,OAAQ,sCACRrpC,SAAU,qBACV,aAAc,CACZd,QACE,kFACFC,YAAY,GAEdmqC,SAAU,CACRpqC,QAAS,+CACTC,YAAY,EACZW,MAAO,YAET,sBAAuB,CACrBZ,QAAS,8BACTC,YAAY,EACZW,MAAO,YAET,mBAAoB,CAClBZ,QAAS,2BACTC,YAAY,EACZW,MAAO,YAETV,QACE,uIACFK,SAAU,eACV,iBAAkB,eAClB2a,OAAQ,eACRrZ,YAAa,iBACbc,SAAU,OAEZjD,EAAMoD,MAAMC,IAAI,kBAAkB,SAA8BC,GAC9D,GAAqB,YAAjBA,EAAIsM,SA6FR,IAnFA,IAAI+6B,EAAcrnC,EAAIwwB,OAAOjO,QAAO,SAAUwN,GAC5C,MACmB,kBAAVA,GACQ,YAAfA,EAAMra,MACS,WAAfqa,EAAMra,IAEV,IACI4xB,EAAe,EA4EZA,EAAeD,EAAYxmC,QAAU,CAC1C,IAAI0mC,EAAaF,EAAYC,KAG7B,GAAwB,YAApBC,EAAW7xB,MAA6C,aAAvB6xB,EAAWj+B,QAAwB,CAEtE,IAAIk+B,EAAiB,GACrB,GACEC,EAAY,CAAC,sBAAuB,iBACZ,MAAxBC,EAAS,GAAGp+B,QACZ,CAGAg+B,GAAgB,EAEhB,IAAIK,EAAgBC,EAAmB,OAAQ,QAC/C,IAAuB,IAAnBD,EACF,SAIF,KAAOL,EAAeK,EAAeL,IAAgB,CACnD,IAAIvS,EAAI2S,EAAS,GACF,aAAX3S,EAAErf,OACJmyB,EAAS9S,EAAG,kBACZyS,EAAe7a,KAAKoI,EAAEzrB,SAE1B,CACAg+B,EAAeK,EAAgB,CACjC,CACA,GACEF,EAAY,CAAC,cAAe,oBACJ,MAAxBC,EAAS,GAAGp+B,UAEZg+B,IAEAO,EAASH,EAAS,GAAI,qBAClBF,EAAe3mC,OAAS,GAAG,CAC7B,IAAIinC,EAAcF,EAAmB,OAAQ,QAC7C,IAAqB,IAAjBE,EACF,SAIF,IAAK,IAAIzY,EAAIiY,EAAcjY,EAAIyY,EAAazY,IAAK,CAC/C,IAAI0Y,EAAWV,EAAYhY,GAEP,aAAlB0Y,EAASryB,MACT8xB,EAAe3S,QAAQkT,EAASz+B,UAAY,GAE5Cu+B,EAASE,EAAU,iBAEvB,CACF,CAEJ,CACF,CA5HA,SAASL,EAAShiB,GAChB,OAAO2hB,EAAYC,EAAe5hB,EACpC,CASA,SAAS+hB,EAAYxlC,EAAOyjB,GAC1BA,EAASA,GAAU,EACnB,IAAK,IAAI2J,EAAI,EAAGA,EAAIptB,EAAMpB,OAAQwuB,IAAK,CACrC,IAAIU,EAAQ2X,EAASrY,EAAI3J,GACzB,IAAKqK,GAASA,EAAMra,OAASzT,EAAMotB,GACjC,OAAO,CAEX,CACA,OAAO,CACT,CAaA,SAASuY,EAAmB50B,EAAMg1B,GAEhC,IADA,IAAIC,EAAc,EACT5Y,EAAIiY,EAAcjY,EAAIgY,EAAYxmC,OAAQwuB,IAAK,CACtD,IAAIU,EAAQsX,EAAYhY,GACpB/lB,EAAUymB,EAAMzmB,QACpB,GAAmB,gBAAfymB,EAAMra,MAA6C,kBAAZpM,EACzC,GAAI0J,EAAK/S,KAAKqJ,GACZ2+B,SACK,GAAID,EAAM/nC,KAAKqJ,IAEA,MADpB2+B,EAEE,OAAO5Y,CAIf,CACA,OAAQ,CACV,CASA,SAASwY,EAAS9X,EAAOnyB,GACvB,IAAIa,EAAUsxB,EAAMnyB,MACfa,EAEO+tB,MAAMC,QAAQhuB,KACxBsxB,EAAMnyB,MAAQa,EAAU,CAACA,IAFzBsxB,EAAMnyB,MAAQa,EAAU,GAI1BA,EAAQkuB,KAAK/uB,EACf,CA0DF,GACF,CCxNe,SAASsqC,GAAOxrC,GAC7BA,EAAMC,SAASC,EAAAA,GACd,SAAWF,GACV,IAAIsB,EAAgB,CAClBhB,QAAS,+CACTC,YAAY,EACZU,OAAQ,CACN,4BAA6B,CAC3BX,QAAS,aACTY,MAAO,eAEToB,WAAY,CACVhC,QAAS,UACTW,OAAQ,QAIdjB,EAAMG,UAAUqrC,OAASxrC,EAAMG,UAAUC,OAAO,QAAS,CACvDoB,OAAQ,CAENlB,QAAS,mDACTU,QAAQ,GAEVR,QACE,6WACFE,OACE,6FACFG,SAAU,CACRP,QACE,oJACFC,YAAY,GAEd4B,YAAa,sBAEfnC,EAAMG,UAAUW,aAAa,SAAU,SAAU,CAC/CmgC,QAAS,CACP3gC,QAAS,OACTY,MAAO,UACPF,QAAQ,GAEV,uBAAwB,CAGtBV,QACE,8GACFU,QAAQ,EACRC,OAAQ,CACNK,cAAeA,EACfE,OAAQ,cAIdxB,EAAMG,UAAUW,aAAa,SAAU,cAAe,CACpD,cAAe,0DAEjBd,EAAMG,UAAUW,aAAa,SAAU,WAAY,CACjD0B,WAAY,CACVlC,QAAS,eACTC,YAAY,EACZW,MAAO,iBAGXI,EAAcL,OAAOqB,WAAWrB,OAASjB,EAAMG,UAAUqrC,MAC1D,CA7DA,CA6DExrC,EACL,CHrEAqqC,GAASvoC,YAAc,YACvBuoC,GAAStoC,QAAU,CAAC,UCApBuoC,GAAOxoC,YAAc,SACrBwoC,GAAOvoC,QAAU,GCFjBwoC,GAAQzoC,YAAc,UACtByoC,GAAQxoC,QAAU,GCAlBypC,GAAO1pC,YAAc,SACrB0pC,GAAOzpC,QAAU,G,4BCGF,SAAS0pC,GAAQzrC,GAC9BA,EAAMC,SAAS43B,EAAAA,GACd,SAAW73B,GAGV,IAAI0rC,EAAgB,yCAAyC9qC,OAGzD+qC,EAAmB,uBAAuB/qC,OAK9C,SAASgrC,EAAahrC,EAAQ80B,GAC5B,OAAO/0B,OACLC,EACGwuB,QAAQ,UAAU,WACjB,MAAO,MAAQsc,EAAgB,GACjC,IACCtc,QAAQ,UAAU,WACjB,MAAO,MAAQuc,EAAmB,GACpC,IACFjW,GAAS,GAEb,CACA,IAAImW,EAAiB,CACnB3R,IAAK,CACH55B,QAAS,aACTW,OAAQ,CACNM,KAAMvB,EAAMG,UAAU+5B,MAG1B,WAAY,CACV55B,QAAS,mBACTC,YAAY,EACZW,MAAO,cAETyO,KAAM,CACJrP,QAAS,qBACTC,YAAY,EACZW,MAAO,cAGTiB,YAAa,gBAEXspC,EAAWzrC,EAAMG,UAAUsrC,QAAUzrC,EAAMG,UAAUC,OAAO,SAAU,CACxE0rC,OAAQ,CACNxrC,QAAS,2CACTC,YAAY,EACZU,OAAQ,CAEN,YAAa,CACXX,QAASsrC,EAAa,oCAAoChrC,QAC1DK,OAAQ,CACN8qC,SAAU,CACRzrC,QAASsrC,EACP,0CAA0ChrC,QAE5CL,YAAY,EACZU,OAAQ4qC,GAEVnqC,IAAK,YACLS,YAAa,QAKjB0N,KAAM,CACJvP,QAASsrC,EAAa,sBAAsBhrC,OAAQ,KACpDK,OAAQ,CACN8qC,SAAU,CACRzrC,QAASsrC,EAAa,iBAAiBhrC,QACvCL,YAAY,EACZU,OAAQ4qC,GAEV1pC,YAAa,WAIjBk8B,MAAO,CAGL/9B,QAASsrC,EACP,qIACGhrC,OACH,KAEFK,OAAQ,CACN8qC,SAAU,CAGRzrC,QAASsrC,EACP,8DACGhrC,QAELL,YAAY,EACZU,OAAQ4qC,GAEV1pC,YAAa,WAGjBw8B,OAAQ,CAENr+B,QAASsrC,EACP,qEACGhrC,QAELL,YAAY,EACZU,OAAQ,CAIN49B,KAAM,CAEJv+B,QAASsrC,EAAa,4BAA4BhrC,QAClDL,YAAY,GAGdq+B,OAAQ,CAENt+B,QAASsrC,EAAa,0BAA0BhrC,QAChDL,YAAY,GAGdiM,KAAM,CAEJlM,QAASsrC,EAAa,2BAA2BhrC,QACjDL,YAAY,EACZW,MAAO,UAGTsC,KAAM,CAEJlD,QAASsrC,EAAa,qBAAqBhrC,QAC3CL,YAAY,EACZW,MAAO,WAGTghC,SAAU,CAER5hC,QAASsrC,EAAa,uBAAuBhrC,QAC7CL,YAAY,GAGdwpC,QAAS,CAEPzpC,QAASsrC,EAAa,qBAAqBhrC,QAC3CL,YAAY,GAGd4X,KAAM,CAEJ7X,QAASsrC,EAAa,qBAAqBhrC,QAC3CL,YAAY,GAEdwrC,SAAU,CACRzrC,QAASsrC,EACP,oCAAoChrC,QAEtCL,YAAY,EACZU,OAAQ4qC,GAEV1pC,YAAa,kBAIjB,WAAY,CACV7B,QAAS,mBACTW,OAAQ,CACNO,OAAQ,CACNlB,QAAS,oBACTC,YAAY,GAEdi3B,IAAK,CACHl3B,QAAS,YACTC,YAAY,GAEd4B,YAAa,WAKjB4Y,KAAM,CAEJza,QAASsrC,EACP,uCAAuChrC,QAEzCK,OAAQ,CACNib,KAAM,CAEJ5b,QAASsrC,EAAa,uBAAuBhrC,QAC7CL,YAAY,GAEdwrC,SAAU,CACRzrC,QAASsrC,EAAa,aAAahrC,QACnCL,YAAY,EACZU,OAAQ4qC,GAEVrU,IAAK,CACHl3B,QAAS,QACTC,YAAY,GAEd4B,YAAa,SAKjB6pC,MAAO,CACL1rC,QAASsrC,EACP,uFACGhrC,QAELK,OAAQ,CACNL,OAAQ,CACNN,QAASsrC,EACP,kEACGhrC,QAELL,YAAY,EACZW,MAAO,OAET6qC,SAAU,CACRzrC,QAASsrC,EAAa,6BAA6BhrC,QACnDL,YAAY,EACZU,OAAQ4qC,GAEVrU,IAAK,CACHl3B,QAAS,QACTC,YAAY,GAEd4B,YAAa,SAIjB8pC,SAAU,CACR3rC,QAAS,YACTY,MAAO,UACPD,OAAQ,CACNkB,YAAa,UAIjB+pC,QAAS,CACP5rC,QAAS,sBACTW,OAAQ,CACNiB,QAAS,CACP5B,QAAS,mBACTC,YAAY,GAEd4B,YAAa,SAIjBwD,KAAM,CACJrF,QAAS,mBACTY,MAAO,UACPD,OAAQ,CACNkB,YAAa,aAMnBgqC,EAAeV,EAAgB,OAAExqC,OACjCmrC,EAAiB,CACnBzN,OAAQwN,EAAqB,OAC7BpxB,KAAMoxB,EAAmB,KACzBH,MAAOG,EAAoB,MAC3BF,SAAUE,EAAuB,SACjCD,QAASC,EAAsB,QAC/BxmC,KAAMwmC,EAAmB,MAI3BV,EAAQ/pC,IAAIpB,QACV,qGAGF,IAAI+rC,EAAqBF,EAAqB,OAAElrC,OAChDorC,EAAyB,KAAEprC,OAASmrC,EACpCC,EAA2B,OAAEprC,OAASmrC,EACtCC,EAA6B,SAAEprC,OAASmrC,EACxCC,EAA4B,QAAEprC,OAASmrC,EACvCC,EAAyB,KAAEprC,OAASmrC,EAGpC,IAAIE,EAAoBH,EAAoB,MAAElrC,OAC9CqrC,EAA0B,OAAIF,EAAuB,OACrDE,EAAwB,KAAIF,EAAqB,KACjDE,EAAyB,MAAIF,EAAsB,MACnDE,EAA4B,SAAIF,EAAyB,SACzDE,EAA2B,QAAIF,EAAwB,QACvDE,EAAwB,KAAIF,EAAqB,IAClD,CAnSA,CAmSEpsC,EACL,CCtSe,SAASusC,GAAKvsC,GAC3BA,EAAMC,SAASgkC,GAAAA,GAQd,SAAWjkC,GACVA,EAAMG,UAAUosC,KAAO,CAGrB,oBAAqB,CACnBjsC,QACE,gEACFC,YAAY,EACZW,MAAO,WAET,iBAAkB,CAChB,CACEZ,QACE,6GACFC,YAAY,EACZU,OAAQjB,EAAMG,UAAU26B,MAE1B,CACEx6B,QACE,sFACFC,YAAY,EACZU,OAAQjB,EAAMG,UAAU26B,OAI5BjV,OAAQ,CACNvlB,QACE,iFACFC,YAAY,EACZU,OAAQ,CACN,cAAe,CACbX,QAAS,WACTY,MAAO,YAIbO,OAAQ,CACNnB,QAAS,4BACTC,YAAY,EACZU,OAAQjB,EAAMG,UAAUsB,QAE1Bo3B,QAAS,CACPv4B,QAAS,oCACTC,YAAY,GAEdmB,IAAK,CAEHpB,QACE,sGACFC,YAAY,EACZU,OAAQ,CACNuF,WAAY,CACV,CAGElG,QAAS,mCACTC,YAAY,EACZU,OAAQjB,EAAMG,UAAU26B,MAE1B,CACEx6B,QAAS,YACTW,OAAQ,CACN,aAAc,CACZX,QAAS,0CACTC,YAAY,GAEd,YAAa,4BACb4B,YAAa,WAGjB,CACE7B,QAAS,aACTW,OAAQjB,EAAMG,UAAU26B,OAG5B34B,YAAa,SAGjBqB,KAAM,CACJlD,QAAS,0CACTC,YAAY,EACZU,OAAQjB,EAAMG,UAAU26B,MAG1Bx5B,cAAe,CACbhB,QAAS,aACTW,OAAQ,CACN6B,UAAW,CACTxC,QAAS,WACTY,MAAO,eAET45B,KAAM,CACJx6B,QAAS,UACTW,OAAQjB,EAAMG,UAAU26B,QAI9B34B,YAAa,CACX7B,QAAS,kCACTC,YAAY,IAsBhB,IAnBA,IAIIisC,EAAU,CACZ,MACA,CACE3mB,OAAQ,SACRjW,SAAU,gBAEZ,MACA,aACA,OACA,WACA,OACA,OACA,WAEE68B,EAAc,CAAC,EACV9Z,EAAI,EAAGoM,EAAIyN,EAAQroC,OAAQwuB,EAAIoM,EAAGpM,IAAK,CAC9C,IAAI9M,EAAS2mB,EAAQ7Z,GACrB9M,EACoB,kBAAXA,EACH,CACEA,OAAQA,EACRjW,SAAUiW,GAEZA,EACF7lB,EAAMG,UAAU0lB,EAAOjW,YACzB68B,EAAY,UAAY5mB,EAAOA,QAAU,CACvCvlB,QAASK,OA7Bb,uGA8BqByuB,QAAQ,mBAAmB,WACxC,OAAOvJ,EAAOA,MAChB,KAEFtlB,YAAY,EACZU,OAAQ,CACN,cAAe,CACbX,QAAS,WACTY,MAAO,UAETgb,KAAM,CACJ5b,QAAS,UACTY,MAAO,CAAC2kB,EAAOjW,SAAU,YAAciW,EAAOjW,UAC9C3O,OAAQjB,EAAMG,UAAU0lB,EAAOjW,aAKzC,CACA5P,EAAMG,UAAUW,aAAa,OAAQ,SAAU2rC,EAChD,CAzJA,CAyJEzsC,EACL,CCnKe,SAAS0sC,GAAW1sC,GACjCA,EAAMC,SAAS4C,GAAAA,GACd,SAAW7C,GACVA,EAAMG,UAAUusC,WAAa,CAC3BxqC,QAAS,oBACTY,UAAW,CACTxC,QAAS,oBACTY,MAAO,eAETM,OAAQ,mCACRd,OAAQ,iEACRiE,QAAS,qBACTgoC,MAAO,CACLrsC,QAAS,+CACTC,YAAY,EACZW,MAAO,WAETo6B,SAAU,CACRh7B,QAAS,aACTW,OAAQ,CACNkB,YAAa,QACbY,SAAU,YAGdZ,YAAa,qCACbY,SAAU,wCAEZ/C,EAAMoD,MAAMC,IAAI,mBAAmB,SAAUC,GAE3CtD,EAAMG,UAAU,qBAAqBsD,kBACnCH,EACA,aAHsB,yCAM1B,IACAtD,EAAMoD,MAAMC,IAAI,kBAAkB,SAAUC,GAC1CtD,EAAMG,UAAU,qBAAqBuD,qBACnCJ,EACA,aAEJ,IACAtD,EAAMG,UAAUysC,IAAM5sC,EAAMG,UAAUusC,WACtC1sC,EAAMG,UAAU0sC,SAAW7sC,EAAMG,UAAUusC,UAC5C,CAzCA,CAyCE1sC,EACL,CC7Ce,SAAS8sC,GAAQ9sC,GAC9BA,EAAMG,UAAU2sC,QAAU,CACxB5qC,QAAS,CACP5B,QACE,4FACFC,YAAY,GAEdgC,KAAM,CACJjC,QACE,sMACFY,MAAO,UAETM,OAAQ,CACNlB,QAAS,+BACTU,QAAQ,GAEVR,QACE,wHACF,mBAAoB,CAIlBF,QACE,sIACFC,YAAY,EACZU,OAAQ,CACNT,QAAS,qCACT2B,YAAa,OAIjBs3B,QACE,yoDAEF/4B,OAAQ,4DACRG,SAAU,CACR,CAEEP,QAAS,mCACTU,QAAQ,GAEV,CAEEV,QAAS,eACTC,YAAY,GASd,gFAGFwmC,UAAW,CACTzmC,QAAS,mCACTW,OAAQ,CACNkB,YAAa,OAGjBf,SAAU,CACRd,QAAS,kCACTW,OAAQ,CACNkB,YAAa,OAGjBA,YAAa,iBAEfnC,EAAMG,UAAU4sC,GAAK/sC,EAAMG,UAAU2sC,OACvC,CCtEe,SAASE,GAAKhtC,GAC3BA,EAAMC,SAASC,EAAAA,GACfF,EAAMG,UAAU6sC,KAAOhtC,EAAMG,UAAUC,OAAO,QAAS,CACrDoB,OAAQ,CAENlB,QAAS,yBACTU,QAAQ,GAEV,aAAc,CACZ,CACEV,QACE,mFACFC,YAAY,GAGd,cAGFC,QACE,gUACFC,SAAU,CACRH,QAAS,wCACTU,QAAQ,GAEVH,SAAU,oEAEZb,EAAMG,UAAUW,aAAa,OAAQ,SAAU,CAC7C,uBAAwB,CACtBR,QAAS,yBACTU,QAAQ,EACRC,OAAQ,CACNK,cAAe,CACbhB,QAAS,gCACTC,YAAY,EACZU,OAAQ,CACN,4BAA6B,CAC3BX,QAAS,aACTY,MAAO,eAEToB,WAAY,CACVhC,QAAS,UACTW,OAAQjB,EAAMG,UAAU6sC,QAI9BxrC,OAAQ,cAIdxB,EAAMG,UAAUW,aAAa,OAAQ,aAAc,CACjDC,MAAO,CACLT,QAAS,kCACTU,QAAQ,EACRC,OAAQ,CACN,cAAe,YACf,eAAgB,CACdX,QAAS,uBACTC,YAAY,EACZW,MAAO,iBACPD,OAAQjB,EAAMG,UAAUY,OAE1B,kBAAmB,eAIzBf,EAAMG,UAAUW,aAAa,OAAQ,UAAW,CAC9C8mC,aAAc,CACZtnC,QAAS,8BACTY,MAAO,YAETy/B,SAAU,CACRrgC,QAAS,YACTY,MAAO,UAET+rC,YAAa,CACX3sC,QAAS,mBACTY,MAAO,cAGb,CChFe,SAASgsC,GAAIltC,GAC1BA,EAAMG,UAAU+sC,IAAM,CACpBhrC,QAAS,sCACTirC,QAAS,CACP7sC,QAAS,gCACTU,QAAQ,EACRE,MAAO,UAETV,QAAS,CACP,CACEF,QACE,sEACFW,OAAQ,CACN+X,KAAM,CACJ1Y,QAAS,iDACTC,YAAY,EACZW,MAAO,cAIb,CACEZ,QACE,wGACFW,OAAQ,CACN+X,KAAM,CACJ1Y,QACE,gGACFC,YAAY,EACZW,MAAO,cAIb,mBAEF+B,SAAU,CAAC,wBAAyB,qCACpCzB,OAAQ,CACNlB,QACE,gGACFU,QAAQ,EACRC,OAAQ,CACNK,cAAe,CACbhB,QAAS,mDACTC,YAAY,EACZU,OAAQ,CACN+X,KAAM,CACJ1Y,QACE,sEACFC,YAAY,EACZW,MAAO,YAETV,QAAS,2DACTC,SAAU,YACVe,OAAQ,CACNlB,QAAS,yBACTU,QAAQ,GAEVN,OAAQ,gDACRyB,YAAa,2CAKrBzB,OAAQ,gDACRiE,QAAS,sBACTxC,YAAa,YAEjB,CCjEe,SAASirC,GAAKptC,GAC3BA,EAAMC,SAAS4gC,EAAAA,GACf7gC,EAAMG,UAAUitC,KAAOptC,EAAMG,UAAUC,OAAO,IAAK,CAKjD,aAAc,CACZJ,EAAMG,UAAU05B,EAAE,cAClB,wgBAEFr5B,QAAS,CAEP,gyBAEA,gHAGFE,OACE,gFACFiE,QAAS,sBAEb,CCvBe,SAAS0oC,GAAKrtC,GAC3BA,EAAMG,UAAUktC,KAAO,CACrBnrC,QAAS,CACP5B,QAAS,OACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QAAS,sCACTU,QAAQ,GAEVI,SAAU,qBACV,aAAc,+BACdX,SAAU,kDACVD,QACE,+NAEN,CChBe,SAAS8sC,GAAKttC,GAO3BA,EAAMG,UAAUmtC,KAAO,CACrBhQ,UAAW,CACTh9B,QACE,8FACFY,MAAO,YAETL,SAAU,IACVsB,YAAa,IAEjB,CChBe,SAASorC,GAAKvtC,GAO3BA,EAAMG,UAAUotC,KAAO,CACrBjQ,UAAW,CACTh9B,QAAS,uDACTY,MAAO,YAETL,SAAU,IACVsB,YAAa,IAEjB,CTlBAspC,GAAQ3pC,YAAc,UACtB2pC,GAAQ1pC,QAAU,GCDlBwqC,GAAKzqC,YAAc,OACnByqC,GAAKxqC,QAAU,GCDf2qC,GAAW5qC,YAAc,aACzB4qC,GAAW3qC,QAAU,CAAC,MAAO,YCF7B+qC,GAAQhrC,YAAc,UACtBgrC,GAAQ/qC,QAAU,CAAC,MCAnBirC,GAAKlrC,YAAc,OACnBkrC,GAAKjrC,QAAU,GCFfmrC,GAAIprC,YAAc,MAClBorC,GAAInrC,QAAU,GCAdqrC,GAAKtrC,YAAc,OACnBsrC,GAAKrrC,QAAU,GCFfsrC,GAAKvrC,YAAc,OACnBurC,GAAKtrC,QAAU,GCDfurC,GAAKxrC,YAAc,OACnBwrC,GAAKvrC,QAAU,GCDfwrC,GAAKzrC,YAAc,OACnByrC,GAAKxrC,QAAU,G,gBCGA,SAASyrC,GAAIxtC,GAG1BA,EAAMG,UAAUqtC,IAAM,CACpB1xB,OAAQ,CACNxb,QAAS,wBACTU,QAAQ,EACRC,OAAQ,CACN,mBAAoB,OAGxBypC,SAAU,CACRpqC,QAAS,6BACTW,OAAQ,CACN,qBAAsB,OAG1BwsC,MAAO,CACLntC,QAAS,8BACTW,OAAQ,CACN,kBAAmB,CACjBX,QAAS,MACTU,QAAQ,GAEV,iBAAkB,OAClB0sC,KAAM,CACJptC,QAAS,eACTW,OAAQ,CACN6E,IAAK,SACLvB,MAAO,CACLjE,QAAS,cACTC,YAAY,OAMtBotC,UAAW,CACTrtC,QAASK,OACP,QAAQC,OAEN,+BAA+BA,OAE9B,MAEC,kEACGA,OACH,IAEA,wBAAwBA,OACxB,IAEF,YAAYA,OACd,KAEFK,OAAQ,CACN,sBAAuB,QACvB,oBAAqB,CACnBX,QAAS,2BACTW,OAAQ,CACN,sBAAuB,KACvB,YAAa,4BAGjB,eAAgB,CACdX,QAAS,QACTW,OAAQ,CACN,iBAAkB,KAClB2sC,KAAM,SAGV9K,KAAM,CACJxiC,QAAS,UACTW,OAAQ,CACN,aAAc,CACZX,QAAS,gBACTW,OAAQ,CACN,uBAAwB,UACxB,aAAc,YACd,eAAgB,aAGpB,eACE,oEAKVuoB,KAAM,CACJlpB,QAAS,6BACTW,OAAQ,CACN,iBAAkB,QAIxBjB,EAAMG,UAAUq3B,IAAMx3B,EAAMG,UAAUqtC,GACxC,CChGe,SAASK,GAAK7tC,IAC1B,SAAWA,GAKV,SAAS8tC,EAAcp9B,GACrB,OAAO/P,OAAO,QAAU+P,EAAO,yBAA0B,IAC3D,CACA1Q,EAAMG,UAAU0tC,KAAO,CACrB,eAAgB,CACdvtC,QACE,6GACFW,OAAQ,CAENoP,OAAQ,CACN/P,QAAS,YACTY,MAAO,YAGT,iBAAkB,CAChBZ,QAAS,mCACTC,YAAY,EACZW,MAAO,MACPD,OAAQjB,EAAMG,UAAUqtC,KAG1B,eAAgB,CACdltC,QAAS,oBACTC,YAAY,EACZW,MAAO,cAIb,kBAAmB,CACjBZ,QAAS,wBACTW,OAAQ,CAEN,eAAgB,CACdX,QAAS,gBACTY,MAAO,YAGT,cAAe,CACbZ,QAAS,iBACTC,YAAY,EACZW,MAAO,UAGT,gBAAiB,CACfZ,QAAS,UACTC,YAAY,EACZW,MAAO,YAIb6sC,OAAQ,CACNztC,QAAS,sCACTW,OAAQ,CACN,eAAgB,CACd,CACEX,QAASwtC,EAAc,0BAA0BltC,QACjDL,YAAY,EACZW,MAAO,CAAC,MAAO,iBACfD,OAAQjB,EAAMG,UAAUwiC,KAE1B,CACEriC,QAASwtC,EAAc,mCAAmCltC,QAC1DL,YAAY,EACZW,MAAO,CAAC,OAAQ,kBAChBD,OAAQjB,EAAMG,UAAUmtC,MAE1B,CACEhtC,QAASwtC,EAAc,4BAA4BltC,QACnDL,YAAY,EACZW,MAAO,CAAC,OAAQ,kBAChBD,OAAQjB,EAAMG,UAAUotC,MAE1B,CACEjtC,QAASwtC,EAAc,QAAQltC,QAC/BL,YAAY,IAGhB,cAAe,CACbD,QAAS,SACTY,MAAO,WAETiB,YAAa,QAMnB,IA+BI2jC,EA/BAkI,EAAQhuC,EAAMG,UACd8tC,EAAgB,CAClB,yBAA0BD,EAAMjuC,WAChC,mBAAoBiuC,EAAM3T,MAAQ2T,EAAMjuC,WACxC,kBAAmBiuC,EAAM5mC,IACzB,WAAY4mC,EAAM5mC,IAClB,YAAa4mC,EAAMjjC,KACnB,WAAYijC,EAAM9T,IAClB,aAAc8T,EAAMpb,OAIlBsb,EAAc,CAChB,oBAAoB,EACpB,mBAAmB,GASrB,SAASC,EAAiBC,GACxB,IAAIC,EAASD,EAAYhf,QAAQ,YAAa,IAE9C,MAAO,MAAQgf,EAAc,KADT,wBAA0BC,EAAS,gBACJ,GACrD,CAKA,IAAK,IAAID,KAAeH,EACtB,GAAIA,EAAcG,GAAc,CAC9BtI,EAAUA,GAAW,CAAC,EACtB,IAAIxlC,EAAU4tC,EAAYE,GACtBD,EAAiBC,GACjBA,EACJtI,EAAQsI,EAAYhf,QAAQ,MAAO,MAAQ,CACzC9uB,QAASK,OACP,IACE,mBAAmBC,OACnBN,EACA,iDAAiDM,OACjD,IAMA,mBAAmBA,OACrB,KAEFL,YAAY,EACZU,OAAQgtC,EAAcG,GAE1B,CAEEtI,GACF9lC,EAAMG,UAAUW,aAAa,OAAQ,SAAUglC,EAElD,CAzJA,CAyJE9lC,EACL,CC3Je,SAASsuC,GAAUtuC,GAGhCA,EAAMG,UAAUmuC,UAAY,CAC1BpsC,QAAS,2BACTV,OAAQ,CACNlB,QAAS,yCACTU,QAAQ,GAEVN,OAAQ,mEACRF,QACE,mSACFC,SACE,sIACFgC,MAAO,aACP5B,SAAU,wDACVsB,YAAa,cAEjB,CClBe,SAASosC,GAAKvuC,GAC3BA,EAAMG,UAAUouC,KAAO,CACrBrsC,QAAS,MACTV,OAAQ,CACNlB,QAAS,2DACTU,QAAQ,GAEVN,OAAQ,4DACR,kBAAmB,CACjBJ,QACE,kRACFY,MAAO,YAETo8B,UAAW,CACTh9B,QAAS,QACTY,MAAO,WAETV,QACE,mLACFC,SAAU,mCACVI,SACE,8GACFsB,YAAa,eAEjB,CCxBe,SAASqsC,GAAiBxuC,IAItC,SAAWA,GAMV,SAASyuC,EAAO7tC,EAAQwhC,GACtB,OAAIA,GAAS,EACJ,KAAKxhC,OAELA,EAAOwuB,QAAQ,WAAW,WAC/B,OAAOqf,EAAO7tC,EAAQwhC,EAAQ,EAChC,GAEJ,CACA,IAAIsM,EAAgB,6BAChBrS,EAAS,CACX/7B,QAAS,KACTU,QAAQ,EACRE,MAAO,YAELM,EAAS,CACXlB,QAASouC,EACT1tC,QAAQ,EACRC,OAAQ,CACNo7B,OAAQA,IAGRsS,EAAiBF,EACnB,8CAA8C7tC,OAAOwuB,QACnD,UACA,WACE,OAAOsf,EAAc9tC,MACvB,IAEF,GAEEguC,EAAgB,CAClBtuC,QAASK,OAAOguC,GAChB1tC,OAAQ,CACN4tC,QAAS,CACPvuC,QAAS,sBACTC,YAAY,EACZU,OAAQ,MAEV,oBAAqB,CACnBX,QAAS,IACTY,MAAO,iBAIblB,EAAMG,UAAU,sBAAwB,CACtC0/B,SAAU,CACRv/B,QAASK,OAAOguC,GAChB3tC,QAAQ,EACRC,OAAQ,CACN2L,QAAS,CACPtM,QAAS,sBACTC,YAAY,EACZU,OAAQ,CACN,gBAAiB,CACfX,QAAS,oBACTC,YAAY,GAEd,eAAgB,CAEdD,QAAS,0CACTC,YAAY,EACZU,OAAQ,CACNkB,YAAa,KACby5B,MAAO,CACLt7B,QAAS,mDACTC,YAAY,EACZU,OAAQ,CACNJ,SAAU,aACVH,OAAQ,QAGZa,KAAM,OAGV,eAAgB,CAEdjB,QACE,4DACFC,YAAY,EACZU,OAAQ,CACN+nB,OAAQ,iBACR,iBAAkB4lB,EAClB/d,SAAU,CACRvwB,QAAS,mBACTW,OAAQ,CACNT,QAAS,wCAKjB,eAAgB,CAEdF,QAAS,0CACTC,YAAY,EACZU,OAAQ,CACN,iBAAkB2tC,EAClB/d,SAAU,CACRvwB,QAAS,cACTW,OAAQ,CACNT,QAAS,cAKjBA,QAAS,6CACT,WAAY,CACVF,QAAS,qDACTY,MAAO,WAET,eAAgB,CACdZ,QAAS,sBACTC,YAAY,GAEd,YAAa,CACXD,QACE,oEACFC,YAAY,GAEd,iBAAkB,CAChBD,QAASK,OACP,mBAAmBC,OACjB6tC,EAAO,sCAAsC7tC,OAAQ,GACrD,KAEJL,YAAY,EACZW,MAAO,UAETiB,YAAa,MAGjB,qBAAsB,CACpB7B,QAAS,IACTY,MAAO,cAIbm7B,OAAQA,EACR76B,OAAQA,GAEVotC,EAAc3tC,OAAO4tC,QAAQ5tC,OAASjB,EAAMG,UAAU,sBACtDH,EAAMG,UAAU,sBAAsB0/B,SAAS5+B,OAAO2L,QAAQ3L,OAC5D,gBACAA,OAAOM,KAAOvB,EAAMG,UAAU,qBACjC,CAtJA,CAsJEH,EACL,CC1Je,SAAS8uC,GAAM9uC,GAC5BA,EAAMC,SAAS8uC,IACf/uC,EAAMG,UAAU2uC,MAAQ9uC,EAAMG,UAAUC,OAAO,UAAW,CACxD8B,QAAS,CACP5B,QAAS,wCAEXE,QACE,kTACFi5B,aAASlK,IAEXvvB,EAAMG,UAAUW,aAAa,QAAS,UAAW,CAC/C,mBAAoB,CAClBR,QAAS,oDACTC,YAAY,EACZU,OAAQ,CACNkB,YAAa,SAInBnC,EAAMG,UAAU6uC,IAAMhvC,EAAMG,UAAU2uC,KACxC,CCrBe,SAASG,GAAOjvC,IAC5B,SAAWA,GACVA,EAAMG,UAAU8uC,OAAS,CAEvB/sC,QAAS,QACTgtC,MAAO,CACL5uC,QAAS,0BACTY,MAAO,SACPD,OAAQ,CACNJ,SAAU,cACVE,MAAO,CACLT,QAAS,wBACTC,YAAY,GAEd4B,YAAa,QAInBnC,EAAMG,UAAUgvC,UAAYnvC,EAAMG,UAAU8uC,OAC5CjvC,EAAMG,UAAUivC,SAAWpvC,EAAMG,UAAU8uC,OAC3CjvC,EAAMG,UAAUkvC,UAAYrvC,EAAMG,UAAU8uC,MAC7C,CApBA,CAoBEjvC,EACL,CCtBe,SAASsvC,GAAQtvC,GAC9BA,EAAMG,UAAUmvC,QAAU,CACxB9tC,OAAQ,CACNlB,QAAS,UACTW,OAAQ,CACNsuC,aAAc,CACZjvC,QAAS,eACTW,OAAQ,CACN6B,UAAW,CACTxC,QAAS,QACTY,MAAO,mBAOjBgB,QAAS,CACP5B,QAAS,eACTU,QAAQ,GAEV8X,MAAO,CACLxY,QAAS,iEACTY,MAAO,aAETR,OAAQ,CACNJ,QACE,mIACFC,YAAY,GAEdivC,KAAM,CACJlvC,QACE,ovBACFC,YAAY,EACZW,MAAO,YAETV,QAAS,CACPF,QACE,iVACFC,YAAY,GAEd0C,SAAU,CACR3C,QACE,4tBACFC,YAAY,EACZW,MAAO,UAETuuC,SAAU,CACRnvC,QACE,yQACFC,YAAY,EACZW,MAAO,WAET8X,KAAM,CACJ1Y,QACE,kWACFC,YAAY,EACZW,MAAO,YAETiB,YAAa,cAEfnC,EAAMG,UAAUmvC,QAAgB,OAAEruC,OAAqB,aAAEA,OAAOM,KAC9DvB,EAAMG,UAAUmvC,QAElBtvC,EAAMG,UAAUmvC,QAAgB,OAAEruC,OAAqB,aAAEA,OAAOM,KAAK2a,KAAO,CAC1E5b,QAAS,eACTY,MAAO,UAEX,CPxEAssC,GAAI1rC,YAAc,MAClB0rC,GAAIzrC,QAAU,CAAC,OCDf8rC,GAAK/rC,YAAc,OACnB+rC,GAAK9rC,QAAU,GCDfusC,GAAUxsC,YAAc,YACxBwsC,GAAUvsC,QAAU,GCDpBwsC,GAAKzsC,YAAc,OACnBysC,GAAKxsC,QAAU,GCDfysC,GAAiB1sC,YAAc,qBAC/B0sC,GAAiBzsC,QAAU,GCA3B+sC,GAAMhtC,YAAc,QACpBgtC,GAAM/sC,QAAU,CAAC,OCFjBktC,GAAOntC,YAAc,SACrBmtC,GAAOltC,QAAU,CAAC,YAAa,WAAY,aCD3CutC,GAAQxtC,YAAc,UACtBwtC,GAAQvtC,QAAU,G,gBCGH,SAAS2tC,GAAG1vC,GACzBA,EAAMG,UAAUuvC,GAAK,CACnBxtC,QAAS,CACP5B,QAAS,iDACTC,YAAY,EACZS,QAAQ,GAEV,uBAAwB,CACtBV,QAAS,mCACTU,QAAQ,EACRE,MAAO,UAETM,OAAQ,CACNlB,QAAS,wBACTU,QAAQ,GAEVR,QACE,6kBACFi5B,QACE,imBACF90B,QAAS,yBACTjE,OAAQ,yDACRG,SACE,8GACFsB,YAAa,gBAEjB,CC1Be,SAASmzB,GAAEt1B,GACxBA,EAAMG,UAAUm1B,EAAI,CAClBpzB,QAAS,CACP5B,QAAS,WACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QAAS,qBACTU,QAAQ,GAEVR,QACE,mNACFgvC,KAAM,CAGJlvC,QACE,8IACFY,MAAO,WAETR,OACE,4GACFivC,OAAQ,CACNrvC,QAAS,+BACTY,MAAO,WAETL,SAAU,eACV+uC,YAAa,CACXtvC,QAAS,0DACTY,MAAO,YAETiB,YAAa,OAEjB,CDpCAutC,GAAG5tC,YAAc,KACjB4tC,GAAG3tC,QAAU,GCDbuzB,GAAExzB,YAAc,IAChBwzB,GAAEvzB,QAAU,G,4BCGG,SAAS8tC,GAAY7vC,IACjC,SAAWA,GACV,IAAI8vC,EAAe9vC,EAAMG,UAAU0vC,YAAc,CAC/C1uC,UAAW,CACTb,QACE,iEACFC,YAAY,GAEdC,QAAS,CAGPF,QAAS,wDACTC,YAAY,GAEd4B,YAAa,QAkEfiC,OAAOiuB,eAAeyd,EAAa,aAAc,CAC/CvrC,MAdF,SAAoBpE,EAAW4vC,GACJ,kBAAd5vC,IACTA,EAAY,CAACA,IAEfA,EAAUsyB,SAAQ,SAAU9iB,IAhD9B,SAA2BA,EAAM8jB,GAC/B,IAAIuc,EAAY,cACZ7c,EAAUnzB,EAAMG,UAAUwP,GAC9B,GAAKwjB,EAAL,CAGA,IAAIE,EAAQF,EAAQ6c,GACpB,IAAK3c,EAAO,CAEV,IAAIntB,EAAa,CAAC,EAClBA,EAAW8pC,GAAa,CACtB1vC,QAAS,wCACTC,YAAY,EACZW,MAAO,WAGTmyB,GADAF,EAAUnzB,EAAMG,UAAUW,aAAa6O,EAAM,UAAWzJ,IACxC8pC,EAClB,CAOA,GANI3c,aAAiB1yB,SAEnB0yB,EAAQF,EAAQ6c,GAAa,CAC3B1vC,QAAS+yB,IAGTvD,MAAMC,QAAQsD,GAChB,IAAK,IAAIV,EAAI,EAAGoM,EAAI1L,EAAMlvB,OAAQwuB,EAAIoM,EAAGpM,IACnCU,EAAMV,aAAchyB,SACtB0yB,EAAMV,GAAK,CACTryB,QAAS+yB,EAAMV,KAGnBc,EAASJ,EAAMV,SAGjBc,EAASJ,EA7BX,CA+BF,CAaI4c,CAAkBtgC,GAAM,SAAUrP,GAC3BA,EAAQW,SACXX,EAAQW,OAAS,CAAC,GAEpBX,EAAQW,OAAOM,KAAOwuC,CACxB,GACF,GACF,IAIAD,EAAYI,WAAW,CAAC,OAAQ,aAAc,OAAQJ,EACvD,CAnFA,CAmFE9vC,EACL,CCpFe,SAASmwC,GAAMnwC,GAC5BA,EAAMC,SAASmwC,GAAAA,GACfpwC,EAAMG,UAAUgwC,MAAQnwC,EAAMG,UAAUC,OAAO,OAAQ,CACrD,uBAAwB,CACtBE,QAAS,iBACTU,QAAQ,EACRE,MAAO,UAETM,OAAQ,CACNlB,QAAS,kCACTU,QAAQ,GAEVR,QACE,6TACFE,OACE,0EACF+4B,QACE,8FACFuE,OAAQ,kBAEVh+B,EAAMG,UAAUW,aAAa,QAAS,uBAAwB,CAC5D,uBAAwB,CACtBR,QACE,6HACFU,QAAQ,EACRC,OAAQ,CACN4N,GAAI,CACFvO,QAAS,OACTU,QAAQ,EACRE,MAAO,YAETm7B,OAAQ,CACN/7B,QAAS,eACTU,QAAQ,EACRE,MAAO,UAETI,cAAe,CACbhB,QAAS,sCACTU,QAAQ,EACRC,OAAQ,CACNkB,YAAa,aACbG,WAAY,CACVhC,QAAS,UACTW,OAAQjB,EAAMG,UAAUgwC,SAI9B3uC,OAAQ,qBAIPxB,EAAMG,UAAUgwC,MAAM,qBACtBnwC,EAAMG,UAAUgwC,MAAgB,gBAChCnwC,EAAMG,UAAUgwC,MAAgB,QACzC,CCpDe,SAASE,GAAQrwC,GAC9BA,EAAMC,SAASmwC,GAAAA,GACfpwC,EAAMC,SAASqwC,IACftwC,EAAMC,SAAS43B,EAAAA,GACd,SAAW73B,GACV,IAAIuwC,EAAkB,oCAClBC,EAAkB,4BAA4B5vC,OAC9CymC,EACF,0DAA0DzmC,OAAOwuB,QAC/D,UACA,WACE,OAAOohB,CACT,IAEJxwC,EAAMG,UAAUkwC,QAAUrwC,EAAMG,UAAUC,OAAO,cAAe,CAAC,GACjEJ,EAAMG,UAAUW,aAAa,UAAW,UAAW,CACjDumC,UAAW,CACT/mC,QAASK,OACP,gEACGC,OACD,MACAymC,EACA,KAEJ9mC,YAAY,EACZU,OAAQ,CACNR,SAAU,CACRH,QAAS,qBACTC,YAAY,GAEdkwC,MAAO,CACLnwC,QAAS,YACTC,YAAY,GAEdw4B,UAAW,CACTz4B,QAAS,0BACTW,OAAQ,CACNkB,YAAa,OAGjB,aAAc,aACd3B,QAASR,EAAMG,UAAUi6B,KAAK55B,QAC9B2B,YAAa,eAGjB,aAAc,CAEZ7B,QAAS,wBACTC,YAAY,EACZU,OAAQ,CACNkB,YAAa,UAGjB,eAAgB,CACd,CACE7B,QACE,+GACFC,YAAY,EACZU,OAAQ,CACNuC,KAAM,CAEJlD,QAASiwC,EACThwC,YAAY,EACZU,OAAQjB,EAAMG,UAAUi6B,KACxBl5B,MAAO,mBAIb,CACEZ,QACE,8DACFC,YAAY,EACZU,OAAQ,CACNyvC,KAAM,CACJpwC,QAASiwC,EACThwC,YAAY,EACZU,OAAQ,CAENS,IAAK1B,EAAMG,UAAUsB,OAAOC,IAC5Bs3B,OAAQh5B,EAAMG,UAAUsB,OAAOu3B,OAC/Bx1B,KAAM,CAEJlD,QAAS,KACTW,OAAQjB,EAAMG,UAAUi6B,KACxBl5B,MAAO,sBAOnBQ,IAAK1B,EAAMG,UAAUsB,OAAOC,IAC5Bs3B,OAAQh5B,EAAMG,UAAUsB,OAAOu3B,SAEjCh5B,EAAMG,UAAU0vC,YAAYK,WAAW,OAAQlwC,EAAMG,UAAUkwC,QAChE,CA3FA,CA2FErwC,EACL,CCnGe,SAAS2wC,GAAe3wC,GAIrCA,EAAMG,UAAUwwC,eAAiB,CAM/B10B,QAAS,CACP3b,QACE,8FACFC,YAAY,EACZU,OAAQ,CACNT,QAAS,CACPF,QACE,kEACFC,YAAY,GAGdiB,OAAQ,CACNlB,QAAS,gBACTC,YAAY,GAEdqwC,WAAY,CACVtwC,QAAS,yBACTC,YAAY,EACZU,OAAQ,CACN,aAAc,UACd83B,UAAW,eACX52B,YAAa,OAGjB0sC,QAAS,CACPvuC,QAAS,aACTC,YAAY,EACZW,MAAO,UAETiB,YAAa,MAwBjB,cAAe,CACb7B,QAAS,8DACTC,YAAY,EACZU,OAAQ,CACNT,QAAS,CACPF,QAAS,gBACTC,YAAY,GAEdK,OAAQ,CAGN,CACEN,QAAS,yBACTC,YAAY,EACZU,OAAQ,CACNsmC,KAAM,YACNplC,YAAa,IACb,cAAe,CACb7B,QAAS,UACTY,MAAO,YAOb,CACEZ,QAAS,mBACTC,YAAY,EACZU,OAAQ,CACNT,QAAS,wCAIf,aAAc,kCACdC,SAAU,0BACV,eAAgB,CACdH,QAAS,8CACTC,YAAY,EACZW,MAAO,YACPD,OAAQ,CACNkB,YAAa,OAGjB0kC,OAAQ,CACNvmC,QAAS,sDACTC,YAAY,EACZU,OAAQ,CACNob,QAAS,CACP/b,QAAS,aACTC,YAAY,EACZW,MAAO,UAETiB,YAAa,SAGjB42B,UAAW,CACTz4B,QAAS,oBACTW,OAAQ,CACNkB,YAAa,OAGjBA,YAAa,WAKjB0uC,KAAM,CACJvwC,QAAS,yCACTC,YAAY,EACZU,OAAQ,CACNkB,YAAa,QACbzB,OAAQ,MACRF,QAAS,2BAIjB,CC5Ie,SAASswC,GAAK9wC,GAC3BA,EAAMG,UAAU2wC,KAAO,CACrBtvC,OAAQ,oCACR+E,UAAW,CACTjG,QACE,4JACFY,MAAO,WACPX,YAAY,GAEdE,SACE,8JACFC,OAAQ,8BACRG,SAAU,yCACV8D,QAAS,qBACTnE,QAAS,SACT2B,YAAa,cAEjB,CChBe,SAAS4uC,GAAM/wC,GAC5BA,EAAMC,SAASC,EAAAA,GACfF,EAAMG,UAAU4wC,MAAQ/wC,EAAMG,UAAUC,OAAO,QAAS,CACtDoB,OAAQ,CACNlB,QAAS,kCACTC,YAAY,EACZS,QAAQ,GAEV,aAAc,CACZV,QACE,4EACFC,YAAY,GAEdC,QACE,gZACFC,SAAU,6BACVC,OAAQ,+CACRG,SAAU,oDACVsB,YAAa,gBACbs3B,QACE,oGAEJz5B,EAAMG,UAAUW,aAAa,QAAS,UAAW,CAC/CkwC,WAAY,CACV1wC,QACE,8EACFC,YAAY,EACZU,OAAQ,CACNT,QAAS,WACT,aAAc,MACd2B,YAAa,MAGjB8uC,UAAW,CACT3wC,QACE,mEACFC,YAAY,EACZU,OAAQ,CACNkB,YAAa,IACb,aAAc,MACdtB,SAAU,OAGdoC,SAAU,CACR3C,QACE,+HAGR,CCjDe,SAAS4wC,GAAGlxC,IACxB,SAAWA,GACV,IAAIsB,EAAgB,8BAA8BV,OAC9CY,EAASb,OACX,2CAA2CC,OAAOwuB,QAChD,OACA,WACE,OAAO9tB,CACT,KAGA6vC,EAAsB,CACxB7vC,cAAe,CACbhB,QAASK,OAAO,0BAA0BC,OAASU,GACnDf,YAAY,EACZU,OAAQ,CACN2L,QAAS,CACPtM,QAAS,wBACTC,YAAY,EACZU,OAAQ,MAEVkB,YAAa,eAIf+uC,EAAMlxC,EAAMG,UAAU+wC,GAAK,CAC7BhvC,QAAS,MACTe,SAAU,CACR3C,QAASK,OAAOa,EAAOZ,OAAS,gBAAgBA,QAChDL,YAAY,EACZS,QAAQ,EACRC,OAAQkwC,GAEV3vC,OAAQ,CACNlB,QAASkB,EACTjB,YAAY,EACZS,QAAQ,EACRC,OAAQkwC,GAEV1wC,SAAU,CACRH,QAAS,uBACTC,YAAY,GAEdwC,SAAU,UACV,mBAAoB,CAClBzC,QAAS,4BACTY,MAAO,YAETV,QACE,wHACFmE,QAAS,qBACTjE,OAAQ,4CACRG,SAAU,CACR,CACEP,QAAS,OACTY,MAAO,QAET,kEAEF,mBAAoB,CAClBZ,QAAS,wBACTY,MAAO,YAETiB,YAAa,oCACb6jC,IAAK,CACH1lC,QAAS,KACTY,MAAO,cAGXiwC,EAAoB7vC,cAAcL,OAAO2L,QAAQ3L,OAASiwC,CAC3D,CArEA,CAqEElxC,EACL,CCtEe,SAASoxC,GAAYpxC,GAClCA,EAAMC,SAAS+7B,EAAAA,GACd,SAAWh8B,GACV,IAAIqxC,EAAiBrxC,EAAMG,UAAUJ,WAAW,mBAG5CuxC,EAAyBD,EAAe/wC,QAAQM,OAChD2wC,EAAsBF,EAAepwC,OAAsB,cAC3DuwC,EACFD,EAAoBtwC,OAAO,6BACzBwwC,EAAuBF,EAAoBjxC,QAAQM,OAavD,SAAS8wC,EAAe9hC,EAAUlO,GAChC,GAAK1B,EAAMG,UAAUyP,GAGrB,MAAO,CACLtP,QAASK,OAAO,OAASe,EAAM,SAAW4vC,GAC1C/wC,YAAY,EACZS,QAAQ,EACRC,OAAQ,CACN,uBAAwB,CACtBX,QAAS,QACTY,MAAO,UAET,gBAAiB,CACfZ,QAAS,UACTY,MAAO0O,IAIf,CAoCA,SAASkoB,EAAe6Z,EAAS/hC,GAC/B,MAAO,MAAQA,EAASif,cAAgB,IAAM8iB,EAAU,KAC1D,CAUA,SAASC,EAAkBpuC,EAAM2vB,EAASvjB,GACxC,IAAItM,EAAM,CACRE,KAAMA,EACN2vB,QAASA,EACTvjB,SAAUA,GAKZ,OAHA5P,EAAMoD,MAAMywB,IAAI,kBAAmBvwB,GACnCA,EAAIwwB,OAAS9zB,EAAM+zB,SAASzwB,EAAIE,KAAMF,EAAI6vB,SAC1CnzB,EAAMoD,MAAMywB,IAAI,iBAAkBvwB,GAC3BA,EAAIwwB,MACb,CAQA,SAAS+d,EAAgCvvC,GACvC,IAAIwvC,EAAc,CAAC,EACnBA,EAAY,6BAA+BN,EAG3C,IAAI1d,EAAS9zB,EAAM+zB,SAASzxB,EAAYwvC,GACxC,GAAsB,IAAlBhe,EAAO3vB,OAAc,CAUvB,IAAI+/B,EAAO,CAAC,EAAG,GACfA,EAAKjU,KAAKyI,MACRwL,EACA0N,EAAkB9d,EAAO,GAAI9zB,EAAMG,UAAUJ,WAAY,eAE3D+zB,EAAO6E,OAAOD,MAAM5E,EAAQoQ,EAC9B,CACA,OAAO,IAAIlkC,EAAMg0B,MACf,gBACAF,EACAyd,EAAoBrwC,MACpBoB,EAEJ,CAmBA,SAASyvC,EAAiBvuC,EAAM2vB,EAASvjB,GAKvC,IAAIoiC,EAAUhyC,EAAM+zB,SAASvwB,EAAM,CACjClC,cAAe,CACbhB,QAASK,OAAO8wC,GAChBlxC,YAAY,KAKZ0xC,EAAqB,EAErBC,EAAiB,CAAC,EAuBlBC,EAAiBP,EAtBFI,EAChBpb,KAAI,SAAUvD,GACb,GAAqB,kBAAVA,EACT,OAAOA,EAIP,IAFA,IACI5c,EADA27B,EAA0B/e,EAAMzmB,SAK3B,IAFPpJ,EAAK20B,QACF1hB,EAAcqhB,EAAema,IAAsBriC,MAMxD,OADAsiC,EAAez7B,GAAe27B,EACvB37B,CAEX,IACCmZ,KAAK,IAI6CuD,EAASvjB,GAI1DyiC,EAAejuC,OAAOkB,KAAK4sC,GAwD/B,OAvDAD,EAAqB,EAOrB,SAAS7Z,EAAWtE,GAClB,IAAK,IAAInB,EAAI,EAAGA,EAAImB,EAAO3vB,OAAQwuB,IAAK,CACtC,GAAIsf,GAAsBI,EAAaluC,OACrC,OAEF,IAAIkvB,EAAQS,EAAOnB,GACnB,GAAqB,kBAAVU,GAA+C,kBAAlBA,EAAMzmB,QAAsB,CAClE,IAAI6J,EAAc47B,EAAaJ,GAC3B3Z,EACe,kBAAVjF,EACHA,EACsBA,EAAMzmB,QAC9B1I,EAAQo0B,EAAEH,QAAQ1hB,GACtB,IAAe,IAAXvS,EAAc,GACd+tC,EACF,IAAIjf,EAASsF,EAAEC,UAAU,EAAGr0B,GACxBs0B,EAASqZ,EACXK,EAAez7B,IAEbwf,EAAQqC,EAAEC,UAAUr0B,EAAQuS,EAAYtS,QACxCs0B,EAAc,GAKlB,GAJIzF,GACFyF,EAAYxI,KAAK+C,GAEnByF,EAAYxI,KAAKuI,GACbvC,EAAO,CACT,IAAIqc,EAAc,CAACrc,GACnBmC,EAAWka,GACX7Z,EAAYxI,KAAKyI,MAAMD,EAAa6Z,EACtC,CACqB,kBAAVjf,GACTS,EAAO6E,OAAOD,MAAM5E,EAAQ,CAACnB,EAAG,GAAG3C,OAAOyI,IAC1C9F,GAAK8F,EAAYt0B,OAAS,GAE1BkvB,EAAMzmB,QAAU6rB,CAEpB,CACF,KAAO,CACL,IAAI7rB,EAAUymB,EAAMzmB,QAChBkjB,MAAMC,QAAQnjB,GAChBwrB,EAAWxrB,GAEXwrB,EAAW,CAACxrB,GAEhB,CACF,CACF,CACAwrB,CAAW+Z,GACJ,IAAInyC,EAAMg0B,MACfpkB,EACAuiC,EACA,YAAcviC,EACdpM,EAEJ,CAzNAxD,EAAMG,UAAUJ,WAAW,mBAAqB,CAK9C2xC,EACE,MACA,0HACG9wC,QAIL8wC,EAAe,OAAQ,yCAAyC9wC,QAEhE8wC,EAAe,MAAO,QAAQ9wC,QAE9B8wC,EAAe,WAAY,oBAAoB9wC,QAE/C8wC,EACE,UACA,6CAA6C9wC,QAG/C8wC,EAAe,MAAO,QAAQ9wC,QAE9BywC,GACAxrB,OAAO0sB,SAsMT,IAAIC,EAAqB,CACvBzyC,YAAY,EACZ8B,IAAI,EACJs5B,YAAY,EACZsX,IAAI,EACJC,KAAK,EACLC,KAAK,GAyEP,SAASC,EAAcruC,GACrB,MAAqB,kBAAVA,EACFA,EACEurB,MAAMC,QAAQxrB,GAChBA,EAAMqyB,IAAIgc,GAAehjB,KAAK,IAE9BgjB,EAAcruC,EAAMqI,QAE/B,CA/EA5M,EAAMoD,MAAMC,IAAI,kBAAkB,SAAUC,GACpCA,EAAIsM,YAAY4iC,GAUtB,SAASK,EAAoB/e,GAC3B,IAAK,IAAInB,EAAI,EAAGoM,EAAIjL,EAAO3vB,OAAQwuB,EAAIoM,EAAGpM,IAAK,CAC7C,IAAIU,EAAQS,EAAOnB,GACnB,GAAqB,kBAAVU,EAAX,CAGA,IAAIzmB,EAAUymB,EAAMzmB,QACpB,GAAKkjB,MAAMC,QAAQnjB,GAMnB,GAAmB,oBAAfymB,EAAMra,KAA4B,CAgBpC,IAAI0kB,EAAW9wB,EAAQ,GACvB,GACqB,IAAnBA,EAAQzI,QACY,kBAAbu5B,GACW,kBAAlBA,EAAS1kB,KACT,CAEA,IAAIxV,EAAOovC,EAAclV,GACrBx8B,EAAQw8B,EAASx8B,MACjB0O,EAAWkgB,MAAMC,QAAQ7uB,GAASA,EAAM,GAAKA,EAC7CiyB,EAAUnzB,EAAMG,UAAUyP,GAC9B,IAAKujB,EAEH,SAEFvmB,EAAQ,GAAKmlC,EAAiBvuC,EAAM2vB,EAASvjB,EAC/C,CACF,MACEijC,EAAoBjmC,OAvCG,kBAAZA,GACTimC,EAAoB,CAACjmC,GAJzB,CA4CF,CACF,CACAimC,CAAoBvvC,EAAIwwB,OAC1B,GAiBD,CAjWA,CAiWE9zB,EACL,CPzWA6vC,GAAY/tC,YAAc,cAC1B+tC,GAAY9tC,QAAU,GCAtBouC,GAAMruC,YAAc,QACpBquC,GAAMpuC,QAAU,GCChBsuC,GAAQvuC,YAAc,UACtBuuC,GAAQtuC,QAAU,GCJlB4uC,GAAe7uC,YAAc,iBAC7B6uC,GAAe5uC,QAAU,GCDzB+uC,GAAKhvC,YAAc,OACnBgvC,GAAK/uC,QAAU,GCAfgvC,GAAMjvC,YAAc,QACpBivC,GAAMhvC,QAAU,GCFhBmvC,GAAGpvC,YAAc,KACjBovC,GAAGnvC,QAAU,GCAbqvC,GAAYtvC,YAAc,eAC1BsvC,GAAYrvC,QAAU,G,gBCKP,SAAS+wC,GAAM9yC,GAC5BA,EAAMC,SAASqwC,IACftwC,EAAMC,SAAS+7B,EAAAA,GACfh8B,EAAMC,SAAS8yC,GAAAA,GACd,SAAW/yC,GACV,IAAID,EAAaC,EAAMG,UAAUJ,WAC7BiZ,EAAO,2CAA2CpY,OAClDoyC,EACF,2CAA6Ch6B,EAAO,UACtDhZ,EAAMG,UAAU2yC,MAAQ9yC,EAAMG,UAAUC,OAAO,cAAe,CAC5De,UAAW,CAETb,QAASK,OACPqyC,EAAkB,uCAAuCpyC,QAE3DL,YAAY,EACZU,OAAQ,CACNkB,YAAa,SAInBnC,EAAMG,UAAUW,aAAa,QAAS,UAAW,CAC/C,qBAAsB,CAEpBR,QAASK,OACPqyC,EACE,wDAAwDpyC,QAE5DL,YAAY,EACZU,OAAQ,CACNE,UAAW,CACTb,QAAS,2BACTC,YAAY,EACZU,OAAQ,CACNkB,YAAa,OAGjBqB,KAAM,CACJlD,QAAS,oBACTC,YAAY,EACZU,OAAQlB,EACRmB,MAAO,uBAETiB,YAAa,WAGjB,aAAc,CACZ,CACE7B,QAASK,OACP,mHAAmHC,OAAOwuB,QACxH,WACA,WACE,OAAOpW,CACT,KAGJzY,YAAY,EACZU,OAAQ,CACNkB,YAAa,OAGjB,CACE7B,QAASK,OAAO,gBAAkBqY,GAClCzY,YAAY,EACZU,OAAQ,CACNO,OAAQzB,EAAWyB,OACnBd,OAAQX,EAAWW,OACnBiE,QAAS5E,EAAW4E,QACpBnE,QAASR,EAAMG,UAAUg7B,WAAW36B,QACpCK,SAAU,oBACVsB,YAAa,qBAInB8wC,QAAS,CACP3yC,QACE,yEACFC,YAAY,EACZU,OAAQ,CACNuC,KAAM,CACJlD,QAAS,4BACTC,YAAY,EACZU,OAAQlB,EACRmB,MAAO,2BAKflB,EAAMG,UAAU0vC,YAAYK,WAAW,aAAclwC,EAAMG,UAAU2yC,MACtE,CArFA,CAqFE9yC,EACL,CC5Fe,SAASkzC,GAAKlzC,GAC3BA,EAAMC,SAAS+7B,EAAAA,GACfh8B,EAAMG,UAAU+yC,KAAOlzC,EAAMG,UAAUC,OAAO,aAAc,CAE1DI,QACE,oXAEJR,EAAMG,UAAUW,aAAa,OAAQ,WAAY,CAE/C0B,WAAY,CACVlC,QAAS,QACTY,MAAO,cAGXlB,EAAMG,UAAUgzC,MAAQnzC,EAAMG,UAAU+yC,IAC1C,CCfe,SAASE,GAASpzC,GAC/BA,EAAMC,SAAS+7B,EAAAA,GACd,SAAWh8B,GA4CV,SAASqzC,EAAOzyC,EAAQ80B,GACtB,OAAO/0B,OACLC,EAAOwuB,QAAQ,SAAS,WACtB,MAAO,yDAAyDxuB,MAClE,IACA80B,EAEJ,CAlDA11B,EAAMG,UAAUW,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjBR,QAASK,OACP,YACEX,EAAMG,UAAUJ,WAAW,qBAAqBO,QAAQM,QAE5DL,YAAY,EACZW,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDlB,EAAMG,UAAUW,aAAa,aAAc,WAAY,CACrDuP,OAAQ,CACN/P,QAASK,OACP,YAAcX,EAAMG,UAAUJ,WAAqB,SAAEa,QAEvDL,YAAY,EACZW,MAAO,CAAC,WAAY,sBAGxBlB,EAAMG,UAAUW,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClB,CAGER,QACE,yOACFY,MAAO,cAET,CAEEZ,QAAS,wBACTY,MAAO,iBAoBblB,EAAMG,UAAUW,aAAa,aAAc,UAAW,CACpDwyC,QAAS,CAEPhzC,QAAS+yC,EACP,4GACGzyC,QAELL,YAAY,EACZU,OAAQjB,EAAMG,UAAUJ,YAE1BwzC,QAAS,CAEPjzC,QAAS+yC,EACP,mEACGzyC,QAELL,YAAY,EACZU,OAAQjB,EAAMG,UAAUJ,cAG5BC,EAAMG,UAAUJ,WAAoB,QAAEmxB,QACpC,CACE5wB,QAAS,wCACTY,MAAO,UAET,CACEZ,QACE,gGACFY,MAAO,gBAET,CACEZ,QAAS,WACTY,MAAO,CAAC,OAAQ,QAElB,CACEZ,QAAS,gBACTY,MAAO,QAGXlB,EAAMG,UAAUW,aAAa,aAAc,WAAY,CACrD0yC,OAAQ,CACNlzC,QAAS,QACTY,MAAO,YAETuyC,MAAO,CACLnzC,QAAS,KACTY,MAAO,cAGXlB,EAAMG,UAAUW,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjBR,QAAS+yC,EAAO,gBAAgBzyC,QAChCL,YAAY,GAEd,mBAAoB,CAClBD,QAAS,8CACTC,YAAY,GAEdmzC,IAAK,CAEHpzC,QACE,kFACFY,MAAO,YAETyyC,QAAS,CACPrzC,QAAS,qBACTY,MAAO,gBAYX,IAPA,IAAI0yC,EAAuB,CACzB,WACA,oBACA,SACA,kBACA,mBAEOjhB,EAAI,EAAGA,EAAIihB,EAAqBzvC,OAAQwuB,IAAK,CACpD,IAAIU,EAAQugB,EAAqBjhB,GAC7BpuB,EAAQvE,EAAMG,UAAUJ,WAAWszB,GAGR,WAA3BrzB,EAAMgyB,KAAKhZ,KAAKzU,KAClBA,EAAQvE,EAAMG,UAAUJ,WAAWszB,GAAS,CAC1C/yB,QAASiE,IAMb,IAAItD,EAASsD,EAAMtD,QAAU,CAAC,EAC9BsD,EAAMtD,OAASA,EACfA,EAAO,oBAAsB,eAC/B,CACD,CAnJA,CAmJEjB,EACL,CCtJe,SAAS6zC,GAAM7zC,GAC5BA,EAAMC,SAAS6zC,GAAAA,GACd,SAAW9zC,GACV,IAAIwB,EAAS,+CACbxB,EAAMG,UAAU0zC,MAAQ7zC,EAAMG,UAAUC,OAAO,OAAQ,CACrD6C,SAAU,CACR,CACE3C,QAASK,OAAOa,EAAOZ,OAAS,aAChCI,QAAQ,GAEV,CACEV,QACE,iEACFY,MAAO,aAGXM,OAAQ,CACNlB,QAASkB,EACTR,QAAQ,GAEVN,OACE,+FAEL,CArBA,CAqBEV,EACL,CCxBe,SAAS+zC,GAAM/zC,GAC5BA,EAAMC,SAAS6zC,GAAAA,GACf9zC,EAAMG,UAAU4zC,MAAQ/zC,EAAMG,UAAUC,OAAO,OAAQ,CACrD+B,YAAa,iBAEfnC,EAAMG,UAAUW,aAAa,QAAS,cAAe,CACnDL,SAAU,mEAEd,CCTe,SAASuzC,GAAah0C,GACnCA,EAAMG,UAAU6zC,aAAe,CAC7B,gBAAiB,CACf1zC,QAAS,SACTY,MAAO,UAET,cAAe,CACbZ,QAAS,sBACTC,YAAY,EACZU,OAAQ,CACN,cAAe,CACbX,QACE,+HACFY,MAAO,WAET+yC,SAAU,CACR3zC,QAAS,+CACTC,YAAY,EACZW,MAAO,OAETT,SAAU,CACRH,QACE,uEACFC,YAAY,EACZU,OAAQ,CACNkB,YAAa,OAGjBA,YAAa,OACb3B,QAAS,iBACTU,MAAO,CACLZ,QAAS,6DACTY,MAAO,YAET,cAAe,CACbZ,QAAS,kBACTY,MAAO,SACPD,OAAQ,CACNkB,YAAa,QAMzB,CC5Ce,SAAS+xC,GAAMl0C,GAC5BA,EAAMG,UAAU+zC,MAAQ,CACtBhyC,QAAS,CAGP5B,QACE,6EACFC,YAAY,GAEdQ,MAAO,CAELT,QAAS,oCACTU,QAAQ,GAEVQ,OAAQ,CAINlB,QACE,uEACFU,QAAQ,GAEVuB,KAAM,CAEJjC,QAAS,+CACTC,YAAY,EACZS,QAAQ,GAEVR,QACE,6PACFmE,QAAS,qBACTjE,OACE,kIAGFG,SACE,gIACFsB,YAAa,oBAEbf,SAAU,wDAEd,CCzCe,SAAS+yC,GAAWn0C,GACjCA,EAAMG,UAAUg0C,WAAa,CAC3BjyC,QAAS,CACP5B,QAAS,SACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QACE,uFACFC,YAAY,EACZS,QAAQ,GAGVozC,GAAI,CACF9zC,QAASK,OACP,shBAAshBC,OAAOwuB,QAC3hB,WACA,WACE,MAAO,0FACJxuB,MACL,IAEF,KAEFM,MAAO,UAGTsoB,KAAM,CACJlpB,QACE,qEACFC,YAAY,EACZW,MAAO,UAET6B,SAAU,cACVsxC,MAAO,CACL/zC,QAAS,qCACTY,MAAO,UAET,4BAA6B,CAC3BZ,QAAS,aACTY,MAAO,YAETL,SAAU,IACVoC,SACE,ilIACF7B,SACE,mIACFV,OAAQ,CACNJ,QAAS,6BACTC,YAAY,GAEdoE,QAAS,mCACTxC,YAAa,SAEjB,CCtDe,SAASmyC,GAAOt0C,GAC7BA,EAAMG,UAAUm0C,OAAS,CACvBpyC,QAAS,CACP5B,QAAS,UACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QAAS,0BACTU,QAAQ,GAEV,cAAe,CACbV,QACE,4HACFU,QAAQ,EACRE,MAAO,YAGT,iBAAkB,CAChBZ,QAAS,OACTY,MAAO,QAET,mBAAoB,CAClBZ,QACE,8HACFY,MAAO,QAET,eAAgB,CACdZ,QACE,+HACFY,MAAO,WAET,qBAAsB,CACpBZ,QACE,+FACFY,MAAO,WAET,iBAAkB,CAChBZ,QAAS,kDACTY,MAAO,YAGTR,OAAQ,0CACRG,SAAU,eACVsB,YAAa,SAEjB,CR9CA2wC,GAAMhxC,YAAc,QACpBgxC,GAAM/wC,QAAU,GCHhBmxC,GAAKpxC,YAAc,OACnBoxC,GAAKnxC,QAAU,CAAC,SCDhBqxC,GAAStxC,YAAc,YACvBsxC,GAASrxC,QAAU,GCDnB8xC,GAAM/xC,YAAc,QACpB+xC,GAAM9xC,QAAU,GCDhBgyC,GAAMjyC,YAAc,QACpBiyC,GAAMhyC,QAAU,GCFhBiyC,GAAalyC,YAAc,eAC3BkyC,GAAajyC,QAAU,GCDvBmyC,GAAMpyC,YAAc,QACpBoyC,GAAMnyC,QAAU,GCDhBoyC,GAAWryC,YAAc,aACzBqyC,GAAWpyC,QAAU,GCDrBuyC,GAAOxyC,YAAc,SACrBwyC,GAAOvyC,QAAU,G,gBCGF,SAASwyC,GAAMv0C,IAE3B,SAAWA,GAMV,IAAIw0C,EAAQ,sDAAsD5zC,OASlE,SAAS6zC,EAAOn0C,EAASo1B,GACvB,OAAO/0B,OAAOL,EAAQ8uB,QAAQ,WAAYolB,GAAQ9e,EACpD,CACA11B,EAAMG,UAAUo0C,MAAQ,CACtBryC,QAAS,CACP5B,QAAS,QAEXs4B,OAAQ,CACNt4B,QAAS,MACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QAAS,0BACTU,QAAQ,GAEV2D,QAAS,CACPrE,QAASm0C,EAAO,kEAAyC7zC,QACzDL,YAAY,GAEd,gBAAiB,CACfD,QAASm0C,EAAO,yEAA2C7zC,QAC3DL,YAAY,EACZW,MAAO,WAET,kBAAmB,CACjBZ,QAASm0C,EAAO,uDAAmC7zC,QACnDL,YAAY,EACZW,MAAO,WAET8X,KAAM,CACJ,CACE1Y,QAASm0C,EACP,6JACG7zC,QAELL,YAAY,EACZW,MAAO,WAET,CACEZ,QAASm0C,EACP,8JAA0D7zC,QAE5DL,YAAY,EACZW,MAAO,cAQXV,QAAS,CACPF,QAASm0C,EACP,84BACG7zC,QAELL,YAAY,GAGdmQ,KAAM,CAEJpQ,QAASm0C,EACP,2EACG7zC,QAELL,YAAY,GAGdG,OAAQ,CACNJ,QAASm0C,EACP,2FACG7zC,OACH,KAEFL,YAAY,GAGd4B,YAAa,iBAMb,gBAAiB,CACf7B,QAAS,0BACTY,MAAO,aAGXlB,EAAMG,UAAUu0C,IAAM10C,EAAMG,UAAUo0C,KACvC,CAxGA,CAwGEv0C,EACL,CC3Ge,SAAS20C,GAAM30C,GAC5BA,EAAMG,UAAUw0C,MAAQ,CACtBzyC,QAAS,CACP5B,QAAS,SACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QACE,mGACFU,QAAQ,GAEVwuC,KAAM,CACJlvC,QAAS,sBACTC,YAAY,EACZW,MAAO,WAETo7B,QAAS,CACPh8B,QAAS,qBACTY,MAAO,WAET,aACE,2EACFV,QACE,ibACFmE,QAAS,0BACTlE,SAAU,uBACVm0C,SAAU,CACR,CAEEt0C,QACE,2QACFY,MAAO,UAET,CAEEZ,QACE,2GACFY,MAAO,WAGXR,OACE,uHACFG,SAAU,kCACVsB,YAAa,iBAEjB,CC7Ce,SAAS0yC,GAAM70C,IAC3B,SAAWA,GACV,IAAI80C,EAAc,6BACdC,EAAY,CACd,mBAAoB,CAClBz0C,QAASw0C,EACT5zC,MAAO,UAGXlB,EAAMG,UAAU00C,MAAQ,CACtB3yC,QAAS,MAET42B,MAAO,CACLx4B,QACE,mEACFC,YAAY,GAMdy0C,SAAU,CACR,CACE10C,QACE,0FACFW,OAAQ8zC,EACR7zC,MAAO,UAET,CACEZ,QACE,4FACFC,YAAY,EACZU,OAAQ8zC,EACR7zC,MAAO,WAOXV,QAAS,CACPF,QACE,wFACFC,YAAY,GAEdi3B,IAAK,CACHl3B,QAAS,uBACTC,YAAY,GAMd00C,SAAU,CACR30C,QACE,4JACFC,YAAY,EACZW,MAAO,cAETT,SAAU,CACRH,QAASw0C,EACT5zC,MAAO,YAETiB,YAAa,YAEfnC,EAAMG,UAAU+0C,IAAMl1C,EAAMG,UAAU00C,MACtC70C,EAAMG,UAAUg1C,QAAUn1C,EAAMG,UAAU00C,KAC3C,CAlEA,CAkEE70C,EACL,CCjEe,SAASo1C,GAAMp1C,GAC5BA,EAAMC,SAASC,EAAAA,GACfF,EAAMC,SAAS4C,GAAAA,GACf7C,EAAMC,SAASo1C,GAAAA,GACd,SAAWr1C,GACVA,EAAMG,UAAUi1C,MAAQ,CACtBlzC,QAAS,eACT,YAAa,CAEX5B,QAAS,kDACTC,YAAY,EACZW,MAAO,aAET4B,UAAW,CACTxC,QAAS,aACTY,MAAO,eAET0B,IAAK,CACHtC,QAAS,mBACTY,MAAO,eACPD,OAAQjB,EAAMG,UAAUyC,MAG5B,IAAI0yC,EAAct1C,EAAMG,UAAUC,OAAO,SAAU,CAAC,GACpDJ,EAAMG,UAAUW,aACd,SACA,aACA,CACE,SAAU,CACRR,QAAS,qDACTW,OAAQ,CACN,YAAa,CACXX,QAAS,WACTY,MAAO,aAET,aAAc,CACZZ,QAAS,WACTW,OAAQ,CACNkB,YAAa,CACX,KACA,CACE7B,QAAS,mBACTC,YAAY,IAGhBqC,IAAK,CACHtC,QAAS,mBACTW,OAAQjB,EAAMG,UAAUyC,UAOpC0yC,EAAY5zC,KAEd1B,EAAMoD,MAAMC,IAAI,mBAAmB,SAAUC,GAC3C,GAAqB,UAAjBA,EAAIsM,SAAR,CAKA5P,EAAMG,UAAU,qBAAqBsD,kBACnCH,EACA,QAHA,wHAMFA,EAAI6vB,QAAUmiB,CARd,CASF,IACAt1C,EAAMoD,MAAMC,IAAI,kBAAkB,SAAUC,GAC1CtD,EAAMG,UAAU,qBAAqBuD,qBAAqBJ,EAAK,QACjE,GACD,CApEA,CAoEEtD,EACL,CC5Ee,SAAS8b,GAAO9b,IAC5B,SAAWA,GACVA,EAAMG,UAAU2b,OAAS,CAMvB5Z,QACE,yIACFV,OAAQ,CACNlB,QAAS,oBACTU,QAAQ,GAEVg9B,OAAQ,CACN19B,QAAS,kBACTU,QAAQ,GAEVuB,KAAM,CACJjC,QACE,0EACFU,QAAQ,GAEV,mBAAoB,CAElB,CACEV,QACE,qEACFC,YAAY,GAEd,CACED,QAAS,+CACTC,YAAY,IAGhBC,QAAS,CACPF,QACE,qZACFC,YAAY,GAEdk5B,QAAS,CAEPn5B,QACE,0oDACFC,YAAY,GAEdM,SAAU,CACRP,QAAS,4DACTC,YAAY,GAEdG,OAAQ,CA0BNJ,QAASK,OAgDb,SAAmBwyB,GACjB,IAAK,IAAIrtB,KAAOqtB,EACdA,EAAQrtB,GAAOqtB,EAAQrtB,GAAKspB,QAAQ,cAAc,SAAUtpB,GAC1D,MAAO,MAAQqtB,EAAQrtB,GAAKyvC,OAAS,GACvC,IAGF,OAAOpiB,EAAQrtB,EACjB,CAvDM0vC,CAAU,CACR,cACE,2DAA2D50C,OAC7D,aAAc,sCAAsCA,OACpD,kBAAmB,uCAAuCA,OAC1D,gBACE,6DACGA,OACL,YAAa,8CAA8CA,OAC3D,cAAe,4BAA4BA,OAC3C,aAAc,sCAAsCA,OACpD,kBAAmB,uCAAuCA,OAC1D,gBACE,6DACGA,OACL,YAAa,iDACVA,OACH,WAAY,wDACTA,SAEL,KAEFL,YAAY,GAEdoE,QAAS,CACPrE,QAAS,qDACTC,YAAY,GAEdE,SAAU,CACRH,QACE,4EACFC,YAAY,GAEdi7B,WAAY,CACVl7B,QAAS,oDACTC,YAAY,EACZS,QAAQ,GAEVmB,YAAa,YAkBhB,CApIA,CAoIEnC,EACL,CCrIe,SAASy1C,GAASz1C,GAC/BA,EAAMC,SAASy1C,IACd,SAAW11C,GAOV,IANA,IAAI21C,EACF,mGACG/0C,OAII+xB,EAAI,EAAGA,EADQ,EACeA,IACrCgjB,EAAmBA,EAAiBvmB,QAAQ,WAAW,WACrD,OAAOumB,CACT,IAEFA,EAAmBA,EAAiBvmB,QAAQ,UAAW,UAAUxuB,QACjE,IAAI60C,EAAYz1C,EAAMG,UAAUs1C,SAAW,CACzCvzC,QAAS,8BACT,kBAAmB,CACjB5B,QAASK,OACP,8DAA8DC,OAAOwuB,QACnE,WACA,WACE,OAAOumB,CACT,IAEF,KAEFp1C,YAAY,EACZS,QAAQ,EACRC,OAAQ,CACN6a,OAAQ,CACNxb,QAAS,eACTC,YAAY,EACZW,MAAO,kBACPD,OAAQ,CACN,oBAAqB,CACnBX,QAAS,iBACTU,QAAQ,EACRC,OAAQ,CACNkB,YAAa,YACbszC,SAAU,CACRn1C,QAAS,UACTY,MAAO,oBACPD,OAAQ,QAIdM,KAAMvB,EAAMG,UAAU2b,SAG1B3Z,YAAa,MAGjBX,OAAQ,CACNlB,QAAS,oBACTU,QAAQ,GAEV,aAAc,CACZV,QAAS,mBACTC,YAAY,GAEdC,QAAS,CACPF,QAAS,iBACTW,OAAQ,CACNkB,YAAa,QAGjBtB,SAAU,aACVsB,YAAa,CACX7B,QACE,uGACFC,YAAY,GAEdG,OAAQ,qBAEV+0C,EAAS,mBAAmBx0C,OAAe,OAAEA,OAC3C,qBACAA,OAAiB,SAAEA,OAASw0C,EAC9Bz1C,EAAMG,UAAUy1C,GAAKH,CACtB,CA7EA,CA6EEz1C,EACL,CChFe,SAAS61C,GAAO71C,GAC7BA,EAAMC,SAAS4C,GAAAA,GACf7C,EAAMG,UAAU01C,OAAS,CACvB3zC,QAAS,CACP5B,QAAS,2DACTC,YAAY,GAEduC,UAAW,CACTxC,QAAS,0CACTY,MAAO,eAETM,OAAQ,CACNlB,QAAS,kBACTU,QAAQ,GAEVR,QACE,oOACFgb,OACE,ywBACF/a,SAAU,CACR,CACEH,QAAS,aACTC,YAAY,EACZW,MAAO,UAET,CAEEZ,QAAS,6BACTC,YAAY,IAGhBoE,QAAS,yBACTi3B,MAAO,CACLt7B,QAAS,OACTY,MAAO,YAGTR,OAAQ,oBACRG,SAAU,wDACVsB,YAAa,aACb2zC,MAAO,CACLx1C,QAAS,YACTY,MAAO,YAGXlB,EAAMoD,MAAMC,IAAI,mBAAmB,SAAUC,GAC3C,IAEIyyC,GAAY,EAChB/1C,EAAMG,UAAU,qBAAqBsD,kBACnCH,EACA,SAJA,uGAMA,SAAUiuB,GACR,IAAIykB,EAAW,iBAAiBxkB,KAAKD,GACrC,GAAIykB,EAAU,CACZ,IAAIt0C,EAAMs0C,EAAS,GACnB,GAAY,QAARt0C,IAAkBq0C,EAEpB,OADAA,GAAY,GACL,EACF,GAAY,WAARr0C,EAET,OADAq0C,GAAY,GACL,CAEX,CACA,OAAQA,CACV,GAEJ,IACA/1C,EAAMoD,MAAMC,IAAI,kBAAkB,SAAUC,GAC1CtD,EAAMG,UAAU,qBAAqBuD,qBAAqBJ,EAAK,SACjE,GACF,CCzEe,SAAS2yC,GAAKj2C,IAC1B,SAAWA,GAQV,SAASk2C,EAAYxlC,GACnB,OAAO/P,OAAO,OAAOC,OAAS,MAAQ8P,EAAO,IAAM,aAAa9P,OAClE,CAOA,SAASu1C,EAAU71C,GACjB,OAAOK,OACL,WAAWC,OAAS,MAAQN,EAAU,IAAM,YAAYM,OAE5D,CAMA,IAAIo9B,EAAS,6BAA6Bp9B,OAEtCw1C,EAAS,IAAMpY,EAEfqY,EAAM,QAGNvyC,EAAQ,UACRwyC,EACF,oFACG11C,OACDgP,EAAW,CAGb2mC,QAAS,CACPj2C,QAAS,QACTY,MAAO,CAAC,UAAW,UAErBgB,QAAS,MACTV,OAAQ,CACNlB,QAAS,oBACTU,QAAQ,EACRC,OAAQ,CACN4+B,SAAU,oBACV7B,OAAQr9B,OAAO,IAAMq9B,EAAS,OAGlC,gBAAiB,CACf19B,QAASK,OAAO,MAAQq9B,GACxB98B,MAAO,CAAC,WAAY,WAEtB,gBAAiB,CACfZ,QAASK,OAAO,IAAMq9B,GACtB98B,MAAO,YAETy3B,OAAQ,CACNr4B,QAASK,OAAO,MAAQq9B,GACxB98B,MAAO,CAAC,SAAU,aAEpBV,QAAS,CACP,CACEF,QAASK,OACP01C,EACE,8IACAvyC,GAEJvD,YAAY,GAEd,CACED,QAASK,OACP01C,EACE,wDACAvyC,GAEJvD,YAAY,IAGhBia,QAAS,CACPla,QAAS41C,EAAY,UAAUt1C,QAC/BL,YAAY,EACZW,MAAO,WAETs1C,YAAa,CACXl2C,QAAS41C,EAAY,cAAct1C,QACnCL,YAAY,EACZW,MAAO,WAETyD,QAAS,CACPrE,QAAS61C,EAAU,QAAQv1C,QAC3BL,YAAY,GAEdG,OAAQ,CACNJ,QAAS61C,EAAU,qBAAqBv1C,QACxCL,YAAY,GAEdk2C,OAAQ,CACNn2C,QAASK,OAAO01C,EAAM,oCAAsCrY,GAC5Dz9B,YAAY,EACZU,OAAQ,CACNT,QAAS,aACTuC,SAAUpC,OAAOq9B,KAGrB0Y,MAAO,CACLp2C,QAASK,OACP01C,EACE,mCAAmCz1C,OACnCo9B,EACA,QAAQp9B,OACR01C,EACA,KAAK11C,QAETL,YAAY,EACZS,QAAQ,EACRC,OAAQ,CACNT,QAAS,kBAGTwwB,UAAW,KACXvwB,SAAU,CACRH,QAASK,OAAO,SAAWq9B,GAC3Bz9B,YAAY,GAEd4B,YAAa,SAGjBw0C,OAAQ,CACNr2C,QAASK,OACP01C,EACE,yBACArY,EACA,YACAA,EACA,eAEJz9B,YAAY,EACZS,QAAQ,EACRC,OAAQ,CACNT,QAAS,UAGTwwB,UAAW,KACX7uB,YAAa,SAGjBy0C,IAAK,CACHt2C,QAASK,OAAO01C,EAAMrY,GACtBz9B,YAAY,GAEd4B,YAAa,CAEX,uBAEA,CACE7B,QAAS,eACTC,YAAY,KAIds2C,EAAM,CACR,cAAel2C,OAAOy1C,GACtBU,QAAS,CACPx2C,QAASK,OACP,KAAKC,OAASo9B,EAAS,YAAYp9B,OAAS01C,EAAY,KAAK11C,QAE/DK,OAAQ2O,GAEViwB,SAAU,CACRv/B,QAASK,OAAO,YAAYC,OAASo9B,GACrCz9B,YAAY,EACZW,MAAO,YAETK,KAAMqO,GAEJmnC,EAAQ,oBACRC,EAAU,CACZ12C,QAASK,OAAO01C,EAAMC,EAvJX,WAwJX/1C,YAAY,EACZU,OAAQ,CACN,YAAa,CACXX,QAASK,OAAO,qBAAuBo2C,GACvC91C,OAAQ41C,GAEV,oBAAqB,CACnBv2C,QAASK,OAAO,wBAA0Bo2C,GAC1C91C,OAAQ41C,GAEVvxC,KAAM,CACJhF,QAASK,OAAO,WAAao2C,EAAQ,8BACrC91C,OAAQ41C,GAEVhX,SAAU,CACRv/B,QAASK,OAAOq9B,GAChB98B,MAAO,YAETiB,YAAa,SAGjByN,EAAiB,OAAE3O,OAAO+vB,UAAYgmB,EACtCpnC,EAAgB,MAAE3O,OAAO+vB,UAAYhxB,EAAMgyB,KAAKM,MAAM0kB,GACtDpnC,EAAgB,MAAE3O,OAAO+vB,UAAU/vB,OAAOg2C,QAAUD,EACpDh3C,EAAMG,UAAU81C,KAAOrmC,EACvB5P,EAAMG,UAAU+2C,MAAQtnC,EACxB5P,EAAMG,UAAUg3C,MAAQvnC,EACxB5P,EAAMG,UAAU,cAAgByP,CACjC,CApNA,CAoNE5P,EACL,CCtNe,SAASo3C,GAAWp3C,GACjCA,EAAMG,UAAUi3C,WAAa,CAC3Bl1C,QAAS,CACP,CACE5B,QAAS,4BACTC,YAAY,GAEd,CACED,QAAS,eACTC,YAAY,IAGhB,sBAAuB,CAGrBD,QAAS,kDACTC,YAAY,EACZS,QAAQ,EACRC,OAAQ,CACN8B,SAAU,CACRzC,QAAS,sCACTC,YAAY,GAEde,cAAe,CACbhB,QAAS,uBACTC,YAAY,EACZU,OAAQ,CACN,4BAA6B,CAC3BX,QAAS,WACTY,MAAO,cAKbM,OAAQ,YAGZA,OAAQ,CACN,CACElB,QAAS,qCACTU,QAAQ,GAEV,CACEV,QAAS,iBACTU,QAAQ,GAEV,kBAEFD,MAAO,CACL,CACET,QAAS,8DACTU,QAAQ,EACRC,OAAQ,CACNiB,QAAS,CACP5B,QAAS,eACTC,YAAY,KAIlB,CACED,QAAS,uDACTU,QAAQ,IAGZR,QAAS,CACPF,QACE,wQACFC,YAAY,GAEd,mBAAoB,CAClBD,QACE,+JACFC,YAAY,EACZW,MAAO,YAETyD,QAAS,CACPrE,QAAS,iDACTC,YAAY,GAEds/B,SAAU,CAERv/B,QAAS,8BACTC,YAAY,EACZW,MAAO,YAETR,OAAQ,2DACR86B,WAAY,4BACZ36B,SAAU,CAER,CACEP,QAAS,aACTC,YAAY,GAyBd,qLAEF4B,YAAa,oBAEfnC,EAAMG,UAAUi3C,WAAW,uBAAuBn2C,OACjC,cACfA,OAAOM,KAAOvB,EAAMG,UAAUi3C,UAClC,CC3He,SAASC,GAAKr3C,IAC1B,SAAWA,GACVA,EAAMG,UAAUk3C,KAAO,CACrBn1C,QAAS,MACTV,OAAQ,CACNlB,QAAS,UACTU,QAAQ,GAEV2D,QAAS,qBACT5B,SAAU,iDACVN,MAAO,oCACPuW,KAAM,CACJ1Y,QACE,iGACFY,MAAO,cAETV,QAAS,uBACTE,OACE,gIACFyB,YAAa,oBAEhB,CApBA,CAoBEnC,EACL,CCtBe,SAASs3C,GAAIt3C,GAM1BA,EAAMG,UAAUm3C,IAAM,CACpB91C,OAAQ,CAENlB,QAAS,2DACTU,QAAQ,GAEVu2C,UAAW,CACTj3C,QACE,uIACFC,YAAY,EACZS,QAAQ,EACRE,MAAO,CAAC,iBAAkB,2BAC1BD,OAAQjB,EAAMG,UAA0B,gBAAK,CAC3CK,QAAS,SACTC,SAAU,qBACV0B,YAAa,WAGjBigC,MAAO,CACL,CACE9hC,QACE,6EACFY,MAAO,CAAC,QAAS,cAEnB,CACEZ,QAAS,2BACTY,MAAO,CAAC,UAAW,cAErB,CACEZ,QAAS,yCACTY,MAAO,CAAC,OAAQ,YAElB,CACEZ,QAAS,yBACTY,MAAO,CAAC,QAAS,YAEnB,CACEZ,QAAS,6CACTY,MAAO,CAAC,QAAS,aAGrB+B,SAAU,CACR3C,QACE,wFACFC,YAAY,GAEdi3C,UAAW,CACTl3C,QAAS,oCACTC,YAAY,EACZW,MAAO,WAETs2B,IAAK,oDACL6c,MAAO,CACL/zC,QAAS,6DACTC,YAAY,EACZW,MAAO,OAET,aAAc,CACZZ,QAAS,kCACTY,MAAO,YAET,cAAe,CACbZ,QAAS,sCACTY,MAAO,YAETu2C,OAAQ,CACNn3C,QACE,qEACFC,YAAY,EACZW,MAAO,YAETw2C,KAAM,CACJp3C,QACE,oEACFY,MAAO,YAET2hC,KAAM,CACJviC,QAAS,6BACTY,MAAO,YAET,YAAa,CACXZ,QACE,qFACFC,YAAY,EACZS,QAAQ,EACRE,MAAO,UAETgkC,KAAM,CACJ5kC,QAASK,OACP,4DAA4DC,OAC1D,IACA,4FACGA,OACH,IACA,uKACGA,OACL,KAEFM,MAAO,UAETy2C,KAAM,CACJr3C,QACE,qEACFY,MAAO,UAETyD,QAAS,2BACTjE,OAAQ,CACNJ,QACE,yGACFC,YAAY,GAEdM,SAAU,6BACVsB,YAAa,WAEjB,CCxHe,SAASy1C,GAAQ53C,GAC9BA,EAAMG,UAAUy3C,QAAU,CACxB11C,QAAS,CAAC,2BAA4B,WACtCV,OAAQ,CACNlB,QAAS,kBACTW,OAAQ,CACN8B,SAAU,aACVi7B,OAAQ,CAAC,iBAAkB,cAAe,aAE5Ch9B,QAAQ,GAEVN,OAAQ,sCACRs9B,OAAQ,CACN19B,QAAS,iEACTC,YAAY,EACZU,OAAQ,CACNT,QAAS,YAGbiC,MAAO,CACLnC,QAAS,iDACTC,YAAY,EACZW,MAAO,UAETT,SAAU,CACRH,QAAS,6CACTC,YAAY,GAEdC,QAAS,CACP,CACEF,QACE,sRACFC,YAAY,GAEd,gBAEFoE,QAAS,CACPrE,QAAS,+BACTC,YAAY,GAEdwC,SAAU,CACRzC,QAAS,qBACTC,YAAY,GAEdM,SAAU,CACRP,QACE,uHACFC,YAAY,GAEd4B,YAAa,mBAEjB,CCnDe,SAAS01C,GAAM73C,GAC5BA,EAAMG,UAAU03C,MAAQ,CACtBC,OAAQ,CACNx3C,QACE,2GACFC,YAAY,EACZS,QAAQ,GAEVkB,QAAS,CACP5B,QAAS,0BACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QAAS,kCACTC,YAAY,EACZS,QAAQ,GAGVR,QACE,ggBACFmE,QAAS,qBACTozC,UAAW,CACTz3C,QAAS,uBACTY,MAAO,cAETT,SAAU,wBACVC,OAAQ,CACNJ,QACE,uFACFC,YAAY,GAEdM,SAAU,0BACVsB,YAAa,kBAEjB,CZtCAoyC,GAAMzyC,YAAc,QACpByyC,GAAMxyC,QAAU,CAAC,OCDjB4yC,GAAM7yC,YAAc,QACpB6yC,GAAM5yC,QAAU,GCDhB8yC,GAAM/yC,YAAc,QACpB+yC,GAAM9yC,QAAU,CAAC,UAAW,OCE5BqzC,GAAMtzC,YAAc,QACpBszC,GAAMrzC,QAAU,GCJhB+Z,GAAOha,YAAc,SACrBga,GAAO/Z,QAAU,GCAjB0zC,GAAS3zC,YAAc,WACvB2zC,GAAS1zC,QAAU,CAAC,MCDpB8zC,GAAO/zC,YAAc,SACrB+zC,GAAO9zC,QAAU,GCFjBk0C,GAAKn0C,YAAc,OACnBm0C,GAAKl0C,QAAU,CAAC,QAAS,QAAS,cCDlCq1C,GAAWt1C,YAAc,aACzBs1C,GAAWr1C,QAAU,GCDrBs1C,GAAKv1C,YAAc,OACnBu1C,GAAKt1C,QAAU,GCDfu1C,GAAIx1C,YAAc,MAClBw1C,GAAIv1C,QAAU,GCDd61C,GAAQ91C,YAAc,UACtB81C,GAAQ71C,QAAU,GCDlB81C,GAAM/1C,YAAc,QACpB+1C,GAAM91C,QAAU,G,gBCGD,SAASi2C,GAAKh4C,IAG1B,SAAWA,GACV,IAAIi4C,EAAU,2CAA2Cr3C,OACrDoY,EACF,8HAA8HpY,OAAOwuB,QACnI,SACA6oB,GAEJj4C,EAAMG,UAAU63C,KAAO,CACrB91C,QAAS,CACP5B,QACE,yEACFU,QAAQ,GAEVQ,OAAQ,CACNlB,QAAS,wCACTU,QAAQ,GAEV,aAAc,CACZV,QAAS,8DACTC,YAAY,GAEdyY,KAAM,CACJ1Y,QAASK,OAAOqY,GAChB9X,MAAO,aACPD,OAAQ,CACNkB,YAAa,OACb3B,QAAS,uCAGbA,QACE,+KACFY,SAAU,WACVV,OAAQ,CACNJ,QACE,6FACFC,YAAY,GAEd23C,QAAS,CACP53C,QAAS,kCACTC,YAAY,EACZW,MAAO,UAETT,SAAU,wBACVI,SAAU,oEACVsB,YAAa,eAEhB,CA9CA,CA8CEnC,EACL,CClDe,SAASm4C,GAAOn4C,GAC7BA,EAAMG,UAAUg4C,OAAS,CACvBj2C,QAAS,CAAC,iBAAkB,OAC5BV,OAAQ,CACNlB,QAAS,uBACTU,QAAQ,GAGVN,OAAQ,iEACRF,QACE,8HACFC,SAAU,uBACVI,SAAU,0CACVsB,YAAa,uBAEjB,CCfe,SAASi2C,GAAUp4C,IAC/B,SAAWA,GACV,IAAI28B,EACF,2SACF38B,EAAMG,UAAUi4C,UAAY,CAC1Bl2C,QAAS,CACP5B,QAAS,8BACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QAAS,iDACTC,YAAY,EACZS,QAAQ,GAEVwoB,KAAM,CACJlpB,QAAS,4BACTU,QAAQ,EACRE,MAAO,UAET,gBAAiB,CACfZ,QAASK,OACP,OAEG,IAAIC,OACH,IAEA,mBAAmBA,OACnB,IAEA,6FACGA,OATP,cAYE+7B,EAAS/7B,OACT,IACA,cAAcA,OAdhB,kBAkBI+7B,EAAS/7B,OACT,IACA,SAASA,OACT,IAEA,YAAYA,OACZ,IAEA,aAAaA,OACf,KACF,MAEFL,YAAY,EACZS,QAAQ,EACRE,MAAO,YAET,sBAAuB,CACrBZ,QAAS,+BACTC,YAAY,EACZW,MAAO,YAET2+B,SAAU,CACRv/B,QAAS,oBACTY,MAAO,aAETV,QAASm8B,EACTh4B,QAAS,qBACTgzC,KAAM,CACJr3C,QACE,sGACFC,YAAY,EACZW,MAAO,UAETR,OAAQ,CACN,CACEJ,QACE,wFACFC,YAAY,GAEd,gBAEFa,SAAU,0DACVkZ,MAAO,CACLha,QAAS,+DACTY,MAAO,YAETL,SAAU,6BACVsB,YAAa,8BAEhB,CAvFA,CAuFEnC,EACL,CCzFe,SAASq4C,GAAIr4C,GAC1BA,EAAMG,UAAUk4C,IAAM,CACpBn2C,QAAS,CACP5B,QAAS,0BACTU,QAAQ,GAEVwC,KAAM,CACJlD,QAAS,oBACTU,QAAQ,EACRE,MAAO,SACPD,OAAQ,CACN6B,UAAW,CACTxC,QAAS,QACTY,MAAO,eAETw2B,UAAW,CACTp3B,QAAS,UACTW,OAAQ,QAIdO,OAAQ,CACNlB,QAAS,wBACTU,QAAQ,GAEV+B,SAAU,QACVrC,OAAQ,4CACR43C,KAAM,CACJh4C,QAAS,cACTY,MAAO,YAETV,QACE,uHACFC,SAAU,CACRH,QACE,mFACFC,YAAY,EACZS,QAAQ,GAEV,qBAAsB,CACpBV,QAAS,QACTY,MAAO,eAETL,SAAU,+CACVsB,YAAa,mBAEfnC,EAAMG,UAAUk4C,IAAU,KAAEp3C,OAAkB,UAAEA,OAASjB,EAAMG,UAAUk4C,GAC3E,CC/Ce,SAASE,GAAQv4C,GAC9BA,EAAMG,UAAUo4C,QAAU,CACxBr2C,QAAS,CACP5B,QAAS,OACTU,QAAQ,GAEV2X,MAAO,CACLrY,QACE,sEACFC,YAAY,EACZU,OAAQ,CACNgC,SAAU,wBACVpC,SAAU,IACVsB,YAAa,MAGjB,oBAAqB,CACnB7B,QACE,4IACFC,YAAY,EACZS,QAAQ,EACRC,OAAQ,CACNwyC,MAAO,CACLnzC,QAAS,8BACTY,MAAO,YAETuB,MAAO,CACLnC,QAAS,qCACTC,YAAY,EACZW,MAAO,YAET,aAAc,CACZZ,QAAS,OACTY,MAAO,CAAC,QAAS,eAIvBuyC,MAAO,CAML,CAEEnzC,QAAS,uDACTC,YAAY,EACZW,MAAO,YAET,CAGEZ,QACE,qGACFC,YAAY,EACZW,MAAO,YAET,CAEEZ,QACE,mEACFC,YAAY,EACZW,MAAO,YAET,CAEEZ,QACE,uFACFC,YAAY,EACZW,MAAO,aAGXuB,MAAO,CACLnC,QAAS,0CACTC,YAAY,EACZS,QAAQ,EACRE,MAAO,YAETgb,KAAM,CACJ5b,QAAS,gEACTY,MAAO,UAETM,OAAQ,CACNlB,QAAS,cACTU,QAAQ,GAEVwB,WAAY,CACVlC,QACE,gGACFY,MAAO,aAETV,QAAS,CAEP,CACEF,QACE,yOACFC,YAAY,EACZS,QAAQ,GAEV,CACEV,QACE,2KACFC,YAAY,EACZS,QAAQ,IAGZg4B,OAAQ,cACRn4B,SAAU,CACRP,QAAS,gCACTC,YAAY,GAEd4B,YAAa,UAEjB,CCjHe,SAASq2C,GAASx4C,GAC/BA,EAAMG,UAAUq4C,SAAW,CAEzBt2C,QAAS,CACP5B,QAAS,MACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QAAS,cACTU,QAAQ,GAEVN,OAAQ,YACRiE,QAAS,qBACTxC,YAAa,CACX,SACA,CACE7B,QAAS,6BACTC,YAAY,GAEd,CACED,QAAS,mBACTC,YAAY,GAEd,CACED,QAAS,oBACTC,YAAY,IAGhBa,SAAU,CACR,CACEd,QAAS,0BACTC,YAAY,GAEd,CACED,QAAS,mCACTC,YAAY,GAEd,qPAEFgjC,SAAU,CACRjjC,QACE,8hBACFY,MAAO,WAETo7B,QAAS,CACPh8B,QACE,mTACFY,MAAO,WAETL,SAAU,CACR,CACEP,QACE,2GACFC,YAAY,GAEd,CACED,QAAS,4CACTC,YAAY,GAEd,CACED,QAAS,sCACTC,YAAY,GAEd,CACED,QAAS,4BACTC,YAAY,GAEd,CACED,QAAS,yBACTC,YAAY,GAEd,sBAEFm+B,MAAO,CACLp+B,QACE,2xCACFY,MAAO,YAETu4B,QACE,kVACFj5B,QACE,sbACFwY,KAAM,CACJ1Y,QACE,6GACFY,MAAO,YAET6B,SAAU,CACRzC,QACE,+MACFC,YAAY,GAGlB,CC7Fe,SAASk4C,GAAMz4C,GAC5BA,EAAMG,UAAUs4C,MAAQ,CACtBv2C,QAAS,OACT1B,QACE,s0BACFW,UAAW,CACTb,QAAS,cACTY,MAAO,YAET6B,SAAU,aACVrC,OAAQ,gBACRG,SAAU,mBACVsB,YAAa,wBAEjB,CCbe,SAASu2C,GAAQ14C,GAC9BA,EAAMC,SAAS+7B,EAAAA,GACd,SAAWh8B,GACV,IAAI24C,EAAY,CAEd,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,UACA,QACA,QACA,cACA,OACA,SACA,QACA,SACA,iBACA,aACA,QACA,cACA,OACA,aACA,QACA,gBACA,cACA,gBACA,cACA,WACA,aACA,QACA,SAEA,eACA,OACA,OACA,OACA,OACA,UACA,OACA,eACA,SACA,YACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,OAEA,aACA,UACA,cACA,aACA,SACA,aACA,SACA,WACA,eACA,SACA,cACA,SACA,qBACA,gBACA,UACA,SACA,SACA,OACA,kBACA,WACA,UACA,eACA,eACA,UACA,OACA,QACA,QACA,eACA,aACA,SACA,UACA,mBAEA,OACA,eACA,QACA,SACA,OACA,YACA,mBACA,OACA,kBACA,eACA,iBACA,QACA,SACA,QACA,SACA,SACA,OACA,cACA,YACA,QACA,OACA,UACA,gBACA,QACA,WACA,OACA,iBACA,eACA,kBACA,gBACA,cACA,aACA,aACA,oBACA,UACA,MACA,OACA,UACA,SACA,SACA,YACA,MACA,OACA,QACA,UACA,MACA,gBACA,gBACA,aACA,WACA,YACA,gBACA,WACA,eACA,QACA,QACA,OACA,WACA,MACA,OACA,SACA,MACA,OACA,SACA,OACA,OACA,gBACA,QACA,OACA,eACA,UACA,OACA,SACA,YACA,MACA,OACA,iBACA,MACA,OACA,QACA,oBACA,SACA,UACA,aACA,gBACA,cACA,cACA,cACA,gBACA,SACA,SACA,UACA,iBACA,aACA,mBACA,eACA,YACA,QACA,OACA,SACA,SACA,QACA,aACA,cACA,cACA,eACA,YACA,UACA,eACA,YACA,YACA,OACA,UACA,OACA,UACA,UACA,aACA,YACA,SACA,UACA,cACA,YACA,WACA,WACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,WACA,YACA,gBACA,aACA,YACA,QACA,cACA,YACA,cAEA,WACA,WACA,QACA,OACA,aACA,OACA,WACA,SACA,aACA,eACA,YAmBEC,EAAkB,OAHtBD,EAAYA,EAAU/hB,KAAI,SAAU/1B,GAClC,OAAOA,EAASuuB,QAAQ,IAAK,MAC/B,KACwCQ,KAAK,KAAO,OACpD5vB,EAAMG,UAAUu4C,QAAU14C,EAAMG,UAAUC,OAAO,aAAc,CAAC,GAChEJ,EAAMG,UAAUW,aAAa,UAAW,SAAU,CAChDmC,SAAU,CACR3C,QACE,oHACFU,QAAQ,EACRC,OAAQ,CACNT,QAASG,OAAO,YAAci4C,EAAkB,iBAItD54C,EAAMG,UAAUu4C,QAAQl3C,OAAOP,OAAS,CACtCu2B,IAAK,CAEHl3B,QACE,yEACFU,QAAQ,GAEVg4B,OAAQ,CAEN14B,QACE,8EACFU,QAAQ,IAGZhB,EAAMG,UAAUW,aAAa,UAAW,WAAY,CAClD24B,QAAS,CACPn5B,QAASK,OAAO,SA7CG,CACrB,WACA,OACA,UACA,QACA,YACA,aACA,gBACA,SACA,SACA,SACA,UACA,QAiC8CivB,KAAK,KAAO,QACxD1uB,MAAO,YAGZ,CAtSA,CAsSElB,EACL,CC1Se,SAAS64C,GAAO74C,GAC7BA,EAAMG,UAAU04C,OAAS,CACvB32C,QAAS,CACP5B,QAAS,6BACTU,QAAQ,GAEVQ,OAAQ,CACNlB,QAAS,cACTU,QAAQ,GAEV4mC,aAAc,CACZtnC,QAAS,gBACTC,YAAY,EACZS,QAAQ,EACRE,MAAO,YAETT,SAAU,cACV,YAAa,CACXH,QAAS,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","sources":["../../node_modules/refractor/lang/javascript.js","../../node_modules/refractor/lang/vbnet.js","../../node_modules/refractor/lang/kotlin.js","../../node_modules/refractor/lang/php.js","../../node_modules/refractor/node_modules/property-information/lib/util/schema.js","../../node_modules/refractor/node_modules/property-information/lib/util/merge.js","../../node_modules/refractor/node_modules/property-information/lib/normalize.js","../../node_modules/refractor/node_modules/property-information/lib/util/info.js","../../node_modules/refractor/node_modules/property-information/lib/util/types.js","../../node_modules/refractor/node_modules/property-information/lib/util/defined-info.js","../../node_modules/refractor/node_modules/property-information/lib/util/create.js","../../node_modules/refractor/node_modules/property-information/lib/xlink.js","../../node_modules/refractor/node_modules/property-information/lib/xml.js","../../node_modules/refractor/node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/refractor/node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/refractor/node_modules/property-information/lib/xmlns.js","../../node_modules/refractor/node_modules/property-information/lib/aria.js","../../node_modules/refractor/node_modules/property-information/lib/html.js","../../node_modules/refractor/node_modules/property-information/lib/svg.js","../../node_modules/refractor/node_modules/property-information/index.js","../../node_modules/refractor/node_modules/property-information/lib/find.js","../../node_modules/refractor/node_modules/hast-util-parse-selector/lib/index.js","../../node_modules/refractor/node_modules/hastscript/lib/core.js","../../node_modules/refractor/node_modules/hastscript/lib/html.js","../../node_modules/refractor/lib/prism-core.js","../../node_modules/refractor/lib/core.js","../../node_modules/refractor/lang/basic.js","../../node_modules/refractor/lang/clike.js","../../node_modules/refractor/lang/scss.js","../../node_modules/refractor/lang/markup-templating.js","../../node_modules/refractor/lang/markup.js","../../node_modules/refractor/lang/go.js","../../node_modules/refractor/lang/r.js","../../node_modules/refractor/lang/ini.js","../../node_modules/refractor/lib/common.js","../../node_modules/refractor/lang/arduino.js","../../node_modules/refractor/lang/perl.js","../../node_modules/refractor/lang/lua.js","../../node_modules/refractor/lang/sql.js","../../node_modules/refractor/lang/makefile.js","../../node_modules/refractor/lang/less.js","../../node_modules/refractor/lang/abap.js","../../node_modules/refractor/lang/abnf.js","../../node_modules/refractor/lang/actionscript.js","../../node_modules/refractor/lang/ada.js","../../node_modules/refractor/lang/agda.js","../../node_modules/refractor/lang/al.js","../../node_modules/refractor/lang/antlr4.js","../../node_modules/refractor/lang/apacheconf.js","../../node_modules/refractor/lang/apex.js","../../node_modules/refractor/lang/apl.js","../../node_modules/refractor/lang/applescript.js","../../node_modules/refractor/lang/aql.js","../../node_modules/refractor/lang/arff.js","../../node_modules/refractor/lang/armasm.js","../../node_modules/refractor/lang/arturo.js","../../node_modules/refractor/lang/asciidoc.js","../../node_modules/refractor/lang/aspnet.js","../../node_modules/refractor/lang/asm6502.js","../../node_modules/refractor/lang/asmatmel.js","../../node_modules/refractor/lang/autohotkey.js","../../node_modules/refractor/lang/autoit.js","../../node_modules/refractor/lang/avisynth.js","../../node_modules/refractor/lang/avro-idl.js","../../node_modules/refractor/lang/awk.js","../../node_modules/refractor/lang/batch.js","../../node_modules/refractor/lang/bbcode.js","../../node_modules/refractor/lang/bbj.js","../../node_modules/refractor/lang/bicep.js","../../node_modules/refractor/lang/birb.js","../../node_modules/refractor/lang/bison.js","../../node_modules/refractor/lang/bnf.js","../../node_modules/refractor/lang/bqn.js","../../node_modules/refractor/lang/brainfuck.js","../../node_modules/refractor/lang/brightscript.js","../../node_modules/refractor/lang/bro.js","../../node_modules/refractor/lang/bsl.js","../../node_modules/refractor/lang/cfscript.js","../../node_modules/refractor/lang/chaiscript.js","../../node_modules/refractor/lang/cil.js","../../node_modules/refractor/lang/cilkc.js","../../node_modules/refractor/lang/cilkcpp.js","../../node_modules/refractor/lang/clojure.js","../../node_modules/refractor/lang/cmake.js","../../node_modules/refractor/lang/cobol.js","../../node_modules/refractor/lang/coffeescript.js","../../node_modules/refractor/lang/concurnas.js","../../node_modules/refractor/lang/csp.js","../../node_modules/refractor/lang/cooklang.js","../../node_modules/refractor/lang/coq.js","../../node_modules/refractor/lang/crystal.js","../../node_modules/refractor/lang/css-extras.js","../../node_modules/refractor/lang/csv.js","../../node_modules/refractor/lang/cue.js","../../node_modules/refractor/lang/cypher.js","../../node_modules/refractor/lang/d.js","../../node_modules/refractor/lang/dart.js","../../node_modules/refractor/lang/dataweave.js","../../node_modules/refractor/lang/dax.js","../../node_modules/refractor/lang/dhall.js","../../node_modules/refractor/lang/django.js","../../node_modules/refractor/lang/dns-zone-file.js","../../node_modules/refractor/lang/docker.js","../../node_modules/refractor/lang/dot.js","../../node_modules/refractor/lang/ebnf.js","../../node_modules/refractor/lang/editorconfig.js","../../node_modules/refractor/lang/eiffel.js","../../node_modules/refractor/lang/ejs.js","../../node_modules/refractor/lang/elixir.js","../../node_modules/refractor/lang/elm.js","../../node_modules/refractor/lang/etlua.js","../../node_modules/refractor/lang/erb.js","../../node_modules/refractor/lang/erlang.js","../../node_modules/refractor/lang/excel-formula.js","../../node_modules/refractor/lang/fsharp.js","../../node_modules/refractor/lang/factor.js","../../node_modules/refractor/lang/false.js","../../node_modules/refractor/lang/firestore-security-rules.js","../../node_modules/refractor/lang/flow.js","../../node_modules/refractor/lang/fortran.js","../../node_modules/refractor/lang/ftl.js","../../node_modules/refractor/lang/gml.js","../../node_modules/refractor/lang/gap.js","../../node_modules/refractor/lang/gcode.js","../../node_modules/refractor/lang/gdscript.js","../../node_modules/refractor/lang/gedcom.js","../../node_modules/refractor/lang/gettext.js","../../node_modules/refractor/lang/gherkin.js","../../node_modules/refractor/lang/git.js","../../node_modules/refractor/lang/glsl.js","../../node_modules/refractor/lang/gn.js","../../node_modules/refractor/lang/linker-script.js","../../node_modules/refractor/lang/go-module.js","../../node_modules/refractor/lang/gradle.js","../../node_modules/refractor/lang/graphql.js","../../node_modules/refractor/lang/groovy.js","../../node_modules/refractor/lang/textile.js","../../node_modules/refractor/lang/haml.js","../../node_modules/refractor/lang/handlebars.js","../../node_modules/refractor/lang/haskell.js","../../node_modules/refractor/lang/haxe.js","../../node_modules/refractor/lang/hcl.js","../../node_modules/refractor/lang/hlsl.js","../../node_modules/refractor/lang/hoon.js","../../node_modules/refractor/lang/hpkp.js","../../node_modules/refractor/lang/hsts.js","../../node_modules/refractor/lang/uri.js","../../node_modules/refractor/lang/http.js","../../node_modules/refractor/lang/ichigojam.js","../../node_modules/refractor/lang/icon.js","../../node_modules/refractor/lang/icu-message-format.js","../../node_modules/refractor/lang/idris.js","../../node_modules/refractor/lang/ignore.js","../../node_modules/refractor/lang/inform7.js","../../node_modules/refractor/lang/io.js","../../node_modules/refractor/lang/j.js","../../node_modules/refractor/lang/javadoclike.js","../../node_modules/refractor/lang/scala.js","../../node_modules/refractor/lang/javadoc.js","../../node_modules/refractor/lang/javastacktrace.js","../../node_modules/refractor/lang/jexl.js","../../node_modules/refractor/lang/jolie.js","../../node_modules/refractor/lang/jq.js","../../node_modules/refractor/lang/js-templates.js","../../node_modules/refractor/lang/jsdoc.js","../../node_modules/refractor/lang/n4js.js","../../node_modules/refractor/lang/js-extras.js","../../node_modules/refractor/lang/json5.js","../../node_modules/refractor/lang/jsonp.js","../../node_modules/refractor/lang/jsstacktrace.js","../../node_modules/refractor/lang/julia.js","../../node_modules/refractor/lang/keepalived.js","../../node_modules/refractor/lang/keyman.js","../../node_modules/refractor/lang/kumir.js","../../node_modules/refractor/lang/kusto.js","../../node_modules/refractor/lang/latex.js","../../node_modules/refractor/lang/latte.js","../../node_modules/refractor/lang/scheme.js","../../node_modules/refractor/lang/lilypond.js","../../node_modules/refractor/lang/liquid.js","../../node_modules/refractor/lang/lisp.js","../../node_modules/refractor/lang/livescript.js","../../node_modules/refractor/lang/llvm.js","../../node_modules/refractor/lang/log.js","../../node_modules/refractor/lang/lolcode.js","../../node_modules/refractor/lang/magma.js","../../node_modules/refractor/lang/mata.js","../../node_modules/refractor/lang/matlab.js","../../node_modules/refractor/lang/maxscript.js","../../node_modules/refractor/lang/mel.js","../../node_modules/refractor/lang/mermaid.js","../../node_modules/refractor/lang/metafont.js","../../node_modules/refractor/lang/mizar.js","../../node_modules/refractor/lang/mongodb.js","../../node_modules/refractor/lang/monkey.js","../../node_modules/refractor/lang/moonscript.js","../../node_modules/refractor/lang/n1ql.js","../../node_modules/refractor/lang/nand2tetris-hdl.js","../../node_modules/refractor/lang/naniscript.js","../../node_modules/refractor/lang/nasm.js","../../node_modules/refractor/lang/neon.js","../../node_modules/refractor/lang/nevod.js","../../node_modules/refractor/lang/nginx.js","../../node_modules/refractor/lang/nim.js","../../node_modules/refractor/lang/nix.js","../../node_modules/refractor/lang/nsis.js","../../node_modules/refractor/lang/ocaml.js","../../node_modules/refractor/lang/odin.js","../../node_modules/refractor/lang/opencl.js","../../node_modules/refractor/lang/openqasm.js","../../node_modules/refractor/lang/oz.js","../../node_modules/refractor/lang/parigp.js","../../node_modules/refractor/lang/parser.js","../../node_modules/refractor/lang/pascal.js","../../node_modules/refractor/lang/pascaligo.js","../../node_modules/refractor/lang/psl.js","../../node_modules/refractor/lang/pcaxis.js","../../node_modules/refractor/lang/peoplecode.js","../../node_modules/refractor/lang/phpdoc.js","../../node_modules/refractor/lang/php-extras.js","../../node_modules/refractor/lang/plant-uml.js","../../node_modules/refractor/lang/plsql.js","../../node_modules/refractor/lang/powerquery.js","../../node_modules/refractor/lang/powershell.js","../../node_modules/refractor/lang/processing.js","../../node_modules/refractor/lang/prolog.js","../../node_modules/refractor/lang/promql.js","../../node_modules/refractor/lang/properties.js","../../node_modules/refractor/lang/protobuf.js","../../node_modules/refractor/lang/stylus.js","../../node_modules/refractor/lang/twig.js","../../node_modules/refractor/lang/pug.js","../../node_modules/refractor/lang/puppet.js","../../node_modules/refractor/lang/pure.js","../../node_modules/refractor/lang/purebasic.js","../../node_modules/refractor/lang/purescript.js","../../node_modules/refractor/lang/qsharp.js","../../node_modules/refractor/lang/q.js","../../node_modules/refractor/lang/qml.js","../../node_modules/refractor/lang/qore.js","../../node_modules/refractor/lang/racket.js","../../node_modules/refractor/lang/cshtml.js","../../node_modules/refractor/lang/jsx.js","../../node_modules/refractor/lang/tsx.js","../../node_modules/refractor/lang/reason.js","../../node_modules/refractor/lang/rego.js","../../node_modules/refractor/lang/renpy.js","../../node_modules/refractor/lang/rescript.js","../../node_modules/refractor/lang/rest.js","../../node_modules/refractor/lang/rip.js","../../node_modules/refractor/lang/roboconf.js","../../node_modules/refractor/lang/robotframework.js","../../node_modules/refractor/lang/sas.js","../../node_modules/refractor/lang/shell-session.js","../../node_modules/refractor/lang/smali.js","../../node_modules/refractor/lang/smalltalk.js","../../node_modules/refractor/lang/smarty.js","../../node_modules/refractor/lang/sml.js","../../node_modules/refractor/lang/solidity.js","../../node_modules/refractor/lang/solution-file.js","../../node_modules/refractor/lang/soy.js","../../node_modules/refractor/lang/turtle.js","../../node_modules/refractor/lang/sparql.js","../../node_modules/refractor/lang/splunk-spl.js","../../node_modules/refractor/lang/sqf.js","../../node_modules/refractor/lang/squirrel.js","../../node_modules/refractor/lang/stan.js","../../node_modules/refractor/lang/stata.js","../../node_modules/refractor/lang/iecst.js","../../node_modules/refractor/lang/supercollider.js","../../node_modules/refractor/lang/systemd.js","../../node_modules/refractor/lang/t4-templating.js","../../node_modules/refractor/lang/t4-cs.js","../../node_modules/refractor/lang/t4-vb.js","../../node_modules/refractor/lang/tap.js","../../node_modules/refractor/lang/tcl.js","../../node_modules/refractor/lang/tt2.js","../../node_modules/refractor/lang/toml.js","../../node_modules/refractor/lang/tremor.js","../../node_modules/refractor/lang/typoscript.js","../../node_modules/refractor/lang/unrealscript.js","../../node_modules/refractor/lang/uorazor.js","../../node_modules/refractor/lang/v.js","../../node_modules/refractor/lang/vala.js","../../node_modules/refractor/lang/velocity.js","../../node_modules/refractor/lang/verilog.js","../../node_modules/refractor/lang/vhdl.js","../../node_modules/refractor/lang/vim.js","../../node_modules/refractor/lang/visual-basic.js","../../node_modules/refractor/lang/warpscript.js","../../node_modules/refractor/lang/wasm.js","../../node_modules/refractor/lang/web-idl.js","../../node_modules/refractor/lang/wgsl.js","../../node_modules/refractor/lang/wiki.js","../../node_modules/refractor/lang/wolfram.js","../../node_modules/refractor/lang/wren.js","../../node_modules/refractor/lang/xeora.js","../../node_modules/refractor/lang/xml-doc.js","../../node_modules/refractor/lang/xojo.js","../../node_modules/refractor/lang/xquery.js","../../node_modules/refractor/lang/yang.js","../../node_modules/refractor/lang/zig.js","../../node_modules/refractor/lib/all.js","../../node_modules/refractor/lang/yaml.js","../../node_modules/refractor/lang/rust.js","../../node_modules/refractor/lang/bash.js","../../node_modules/refractor/lang/markdown.js","../../node_modules/refractor/lang/typescript.js","../../node_modules/refractor/lang/java.js","../../node_modules/refractor/lang/diff.js","../../node_modules/refractor/lang/regex.js","../../node_modules/refractor/lang/python.js","../../node_modules/refractor/lang/cpp.js","../../node_modules/refractor/lang/json.js","../../node_modules/refractor/lang/csharp.js","../../node_modules/refractor/lang/c.js","../../node_modules/refractor/lang/sass.js","../../node_modules/refractor/lang/ruby.js","../../node_modules/refractor/lang/css.js","../../node_modules/refractor/lang/swift.js","../../node_modules/refractor/lang/objectivec.js"],"sourcesContent":["// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\n\n/** @type {Syntax} */\nexport default function javascript(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: {\n      pattern: RegExp(\n        /(^|[^\\w$])/.source +\n          '(?:' +\n          // constant\n          (/NaN|Infinity/.source +\n            '|' +\n            // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source +\n            '|' +\n            // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n            '|' +\n            // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n            '|' +\n            // decimal bigint\n            /\\d+(?:_\\d+)*n/.source +\n            '|' +\n            // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\n              .source) +\n          ')' +\n          /(?![\\w$])/.source\n      ),\n      lookbehind: true\n    },\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: RegExp(\n        // lookbehind\n        // eslint-disable-next-line regexp/no-dupe-characters-character-class\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n          // Regex pattern:\n          // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n          // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n          // with the only syntax, so we have to define 2 different regex patterns.\n          /\\//.source +\n          '(?:' +\n          /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/\n            .source +\n          '|' +\n          // `v` flag syntax. This supports 3 levels of nested character classes.\n          /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/\n            .source +\n          ')' +\n          // lookahead\n          /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/\n            .source\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'string-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    }\n  })\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'literal-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n      lookbehind: true,\n      alias: 'property'\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript')\n\n    // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorBasic from './basic.js'\nvbnet.displayName = 'vbnet'\nvbnet.aliases = []\n\n/** @type {Syntax} */\nexport default function vbnet(Prism) {\n  Prism.register(refractorBasic)\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    comment: [\n      {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    punctuation: /[,;:(){}]/\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\n\n/** @type {Syntax} */\nexport default function kotlin(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkupTemplating from './markup-templating.js'\nphp.displayName = 'php'\nphp.aliases = []\n\n/** @type {Syntax} */\nexport default function php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */\n  ;(function (Prism) {\n    var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/\n    var constant = [\n      {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'boolean'\n      },\n      {\n        pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n        greedy: true,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n        greedy: true,\n        lookbehind: true\n      },\n      /\\b(?:null)\\b/i,\n      /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n    ]\n    var number =\n      /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    var operator =\n      /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/\n    var punctuation = /[{}\\[\\](),:;]/\n    Prism.languages.php = {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      },\n      comment: comment,\n      variable: /\\$+(?:\\w+\\b|(?=\\{))/,\n      package: {\n        pattern:\n          /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      'class-name-definition': {\n        pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'function-definition': {\n        pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n          alias: 'type-casting',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|never|object|self|static|string|void)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n          alias: 'type-declaration',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          // yield from\n          pattern: /(\\byield\\s+)from\\b/i,\n          lookbehind: true\n        },\n        // `class` is always a keyword unlike other keywords\n        /\\bclass\\b/i,\n        {\n          // https://www.php.net/manual/en/reserved.keywords.php\n          //\n          // keywords cannot be preceded by \"->\"\n          // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n          pattern:\n            /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n          lookbehind: true\n        }\n      ],\n      'argument-name': {\n        pattern: /([(,]\\s*)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-declaration'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n          alias: ['class-name-fully-qualified', 'static-context'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-hint'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: ['class-name-fully-qualified', 'return-type'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      ],\n      constant: constant,\n      function: {\n        pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      property: {\n        pattern: /(->\\s*)\\w+/,\n        lookbehind: true\n      },\n      number: number,\n      operator: operator,\n      punctuation: punctuation\n    }\n    var string_interpolation = {\n      pattern:\n        /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n      lookbehind: true,\n      inside: Prism.languages.php\n    }\n    var string = [\n      {\n        pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n        alias: 'nowdoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      {\n        pattern:\n          /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation\n        }\n      },\n      {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        alias: 'backtick-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        alias: 'single-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        alias: 'double-quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: string_interpolation\n        }\n      }\n    ]\n    Prism.languages.insertBefore('php', 'variable', {\n      string: string,\n      attribute: {\n        pattern:\n          /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n        greedy: true,\n        inside: {\n          'attribute-content': {\n            pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n            lookbehind: true,\n            // inside can appear subset of php\n            inside: {\n              comment: comment,\n              string: string,\n              'attribute-class-name': [\n                {\n                  pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                  alias: 'class-name',\n                  greedy: true,\n                  lookbehind: true\n                },\n                {\n                  pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                  alias: ['class-name', 'class-name-fully-qualified'],\n                  greedy: true,\n                  lookbehind: true,\n                  inside: {\n                    punctuation: /\\\\/\n                  }\n                }\n              ],\n              constant: constant,\n              number: number,\n              operator: operator,\n              punctuation: punctuation\n            }\n          },\n          delimiter: {\n            pattern: /^#\\[|\\]$/,\n            alias: 'punctuation'\n          }\n        }\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/<\\?/.test(env.code)) {\n        return\n      }\n      var phpPattern =\n        /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","// @ts-nocheck\n\n// This is a slimmed down version of `prism-core.js`, to remove globals,\n// document, workers, `util.encode`, `Token.stringify`\n\n// Private helper vars\nvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i\nvar uniqueId = 0\n\n// The grammar object for plaintext\nvar plainTextGrammar = {}\n\nvar _ = {\n  /**\n   * A namespace for utility methods.\n   *\n   * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n   * change or disappear at any time.\n   *\n   * @namespace\n   * @memberof Prism\n   */\n  util: {\n    /**\n     * Returns the name of the type of the given value.\n     *\n     * @param {any} o\n     * @returns {string}\n     * @example\n     * type(null)      === 'Null'\n     * type(undefined) === 'Undefined'\n     * type(123)       === 'Number'\n     * type('foo')     === 'String'\n     * type(true)      === 'Boolean'\n     * type([1, 2])    === 'Array'\n     * type({})        === 'Object'\n     * type(String)    === 'Function'\n     * type(/abc+/)    === 'RegExp'\n     */\n    type: function (o) {\n      return Object.prototype.toString.call(o).slice(8, -1)\n    },\n\n    /**\n     * Returns a unique number for the given object. Later calls will still return the same number.\n     *\n     * @param {Object} obj\n     * @returns {number}\n     */\n    objId: function (obj) {\n      if (!obj['__id']) {\n        Object.defineProperty(obj, '__id', {value: ++uniqueId})\n      }\n      return obj['__id']\n    },\n\n    /**\n     * Creates a deep clone of the given object.\n     *\n     * The main intended use of this function is to clone language definitions.\n     *\n     * @param {T} o\n     * @param {Record<number, any>} [visited]\n     * @returns {T}\n     * @template T\n     */\n    clone: function deepClone(o, visited) {\n      visited = visited || {}\n\n      var clone\n      var id\n      switch (_.util.type(o)) {\n        case 'Object':\n          id = _.util.objId(o)\n          if (visited[id]) {\n            return visited[id]\n          }\n          clone = /** @type {Record<string, any>} */ ({})\n          visited[id] = clone\n\n          for (var key in o) {\n            if (o.hasOwnProperty(key)) {\n              clone[key] = deepClone(o[key], visited)\n            }\n          }\n\n          return /** @type {any} */ (clone)\n\n        case 'Array':\n          id = _.util.objId(o)\n          if (visited[id]) {\n            return visited[id]\n          }\n          clone = []\n          visited[id] = clone\n\n          ;/** @type {Array} */ (/** @type {any} */ (o)).forEach(\n            function (v, i) {\n              clone[i] = deepClone(v, visited)\n            }\n          )\n\n          return /** @type {any} */ (clone)\n\n        default:\n          return o\n      }\n    }\n  },\n\n  /**\n   * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n   *\n   * @namespace\n   * @memberof Prism\n   * @public\n   */\n  languages: {\n    /**\n     * The grammar for plain, unformatted text.\n     */\n    plain: plainTextGrammar,\n    plaintext: plainTextGrammar,\n    text: plainTextGrammar,\n    txt: plainTextGrammar,\n\n    /**\n     * Creates a deep copy of the language with the given id and appends the given tokens.\n     *\n     * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n     * will be overwritten at its original position.\n     *\n     * ## Best practices\n     *\n     * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n     * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n     * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n     *\n     * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n     * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n     *\n     * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n     * @param {Grammar} redef The new tokens to append.\n     * @returns {Grammar} The new language created.\n     * @public\n     * @example\n     * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n     *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n     *     // at its original position\n     *     'comment': { ... },\n     *     // CSS doesn't have a 'color' token, so this token will be appended\n     *     'color': /\\b(?:red|green|blue)\\b/\n     * });\n     */\n    extend: function (id, redef) {\n      var lang = _.util.clone(_.languages[id])\n\n      for (var key in redef) {\n        lang[key] = redef[key]\n      }\n\n      return lang\n    },\n\n    /**\n     * Inserts tokens _before_ another token in a language definition or any other grammar.\n     *\n     * ## Usage\n     *\n     * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n     * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n     * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n     * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n     * this:\n     *\n     * ```js\n     * Prism.languages.markup.style = {\n     *     // token\n     * };\n     * ```\n     *\n     * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n     * before existing tokens. For the CSS example above, you would use it like this:\n     *\n     * ```js\n     * Prism.languages.insertBefore('markup', 'cdata', {\n     *     'style': {\n     *         // token\n     *     }\n     * });\n     * ```\n     *\n     * ## Special cases\n     *\n     * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n     * will be ignored.\n     *\n     * This behavior can be used to insert tokens after `before`:\n     *\n     * ```js\n     * Prism.languages.insertBefore('markup', 'comment', {\n     *     'comment': Prism.languages.markup.comment,\n     *     // tokens after 'comment'\n     * });\n     * ```\n     *\n     * ## Limitations\n     *\n     * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n     * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n     * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n     * deleting properties which is necessary to insert at arbitrary positions.\n     *\n     * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n     * Instead, it will create a new object and replace all references to the target object with the new one. This\n     * can be done without temporarily deleting properties, so the iteration order is well-defined.\n     *\n     * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n     * you hold the target object in a variable, then the value of the variable will not change.\n     *\n     * ```js\n     * var oldMarkup = Prism.languages.markup;\n     * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n     *\n     * assert(oldMarkup !== Prism.languages.markup);\n     * assert(newMarkup === Prism.languages.markup);\n     * ```\n     *\n     * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n     * object to be modified.\n     * @param {string} before The key to insert before.\n     * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n     * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n     * object to be modified.\n     *\n     * Defaults to `Prism.languages`.\n     * @returns {Grammar} The new grammar object.\n     * @public\n     */\n    insertBefore: function (inside, before, insert, root) {\n      root = root || /** @type {any} */ (_.languages)\n      var grammar = root[inside]\n      /** @type {Grammar} */\n      var ret = {}\n\n      for (var token in grammar) {\n        if (grammar.hasOwnProperty(token)) {\n          if (token == before) {\n            for (var newToken in insert) {\n              if (insert.hasOwnProperty(newToken)) {\n                ret[newToken] = insert[newToken]\n              }\n            }\n          }\n\n          // Do not insert token which also occur in insert. See #1525\n          if (!insert.hasOwnProperty(token)) {\n            ret[token] = grammar[token]\n          }\n        }\n      }\n\n      var old = root[inside]\n      root[inside] = ret\n\n      // Update references in other language definitions\n      _.languages.DFS(_.languages, function (key, value) {\n        if (value === old && key != inside) {\n          this[key] = ret\n        }\n      })\n\n      return ret\n    },\n\n    // Traverse a language definition with Depth First Search\n    DFS: function DFS(o, callback, type, visited) {\n      visited = visited || {}\n\n      var objId = _.util.objId\n\n      for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n          callback.call(o, i, o[i], type || i)\n\n          var property = o[i]\n          var propertyType = _.util.type(property)\n\n          if (propertyType === 'Object' && !visited[objId(property)]) {\n            visited[objId(property)] = true\n            DFS(property, callback, null, visited)\n          } else if (propertyType === 'Array' && !visited[objId(property)]) {\n            visited[objId(property)] = true\n            DFS(property, callback, i, visited)\n          }\n        }\n      }\n    }\n  },\n\n  plugins: {},\n\n  /**\n   * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n   * and the language definitions to use, and returns a string with the HTML produced.\n   *\n   * The following hooks will be run:\n   * 1. `before-tokenize`\n   * 2. `after-tokenize`\n   * 3. `wrap`: On each {@link Token}.\n   *\n   * @param {string} text A string with the code to be highlighted.\n   * @param {Grammar} grammar An object containing the tokens to use.\n   *\n   * Usually a language definition like `Prism.languages.markup`.\n   * @param {string} language The name of the language definition passed to `grammar`.\n   * @returns {string} The highlighted HTML.\n   * @memberof Prism\n   * @public\n   * @example\n   * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n   */\n  highlight: function (text, grammar, language) {\n    var env = {\n      code: text,\n      grammar: grammar,\n      language: language\n    }\n    _.hooks.run('before-tokenize', env)\n    if (!env.grammar) {\n      throw new Error('The language \"' + env.language + '\" has no grammar.')\n    }\n    env.tokens = _.tokenize(env.code, env.grammar)\n    _.hooks.run('after-tokenize', env)\n    return Token.stringify(_.util.encode(env.tokens), env.language)\n  },\n\n  /**\n   * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n   * and the language definitions to use, and returns an array with the tokenized code.\n   *\n   * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n   *\n   * This method could be useful in other contexts as well, as a very crude parser.\n   *\n   * @param {string} text A string with the code to be highlighted.\n   * @param {Grammar} grammar An object containing the tokens to use.\n   *\n   * Usually a language definition like `Prism.languages.markup`.\n   * @returns {TokenStream} An array of strings and tokens, a token stream.\n   * @memberof Prism\n   * @public\n   * @example\n   * let code = `var foo = 0;`;\n   * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n   * tokens.forEach(token => {\n   *     if (token instanceof Prism.Token && token.type === 'number') {\n   *         console.log(`Found numeric literal: ${token.content}`);\n   *     }\n   * });\n   */\n  tokenize: function (text, grammar) {\n    var rest = grammar.rest\n    if (rest) {\n      for (var token in rest) {\n        grammar[token] = rest[token]\n      }\n\n      delete grammar.rest\n    }\n\n    var tokenList = new LinkedList()\n    addAfter(tokenList, tokenList.head, text)\n\n    matchGrammar(text, tokenList, grammar, tokenList.head, 0)\n\n    return toArray(tokenList)\n  },\n\n  /**\n   * @namespace\n   * @memberof Prism\n   * @public\n   */\n  hooks: {\n    all: {},\n\n    /**\n     * Adds the given callback to the list of callbacks for the given hook.\n     *\n     * The callback will be invoked when the hook it is registered for is run.\n     * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n     *\n     * One callback function can be registered to multiple hooks and the same hook multiple times.\n     *\n     * @param {string} name The name of the hook.\n     * @param {HookCallback} callback The callback function which is given environment variables.\n     * @public\n     */\n    add: function (name, callback) {\n      var hooks = _.hooks.all\n\n      hooks[name] = hooks[name] || []\n\n      hooks[name].push(callback)\n    },\n\n    /**\n     * Runs a hook invoking all registered callbacks with the given environment variables.\n     *\n     * Callbacks will be invoked synchronously and in the order in which they were registered.\n     *\n     * @param {string} name The name of the hook.\n     * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n     * @public\n     */\n    run: function (name, env) {\n      var callbacks = _.hooks.all[name]\n\n      if (!callbacks || !callbacks.length) {\n        return\n      }\n\n      for (var i = 0, callback; (callback = callbacks[i++]); ) {\n        callback(env)\n      }\n    }\n  },\n\n  Token: Token\n}\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n  /**\n   * The type of the token.\n   *\n   * This is usually the key of a pattern in a {@link Grammar}.\n   *\n   * @type {string}\n   * @see GrammarToken\n   * @public\n   */\n  this.type = type\n  /**\n   * The strings or tokens contained by this token.\n   *\n   * This will be a token stream if the pattern matched also defined an `inside` grammar.\n   *\n   * @type {string | TokenStream}\n   * @public\n   */\n  this.content = content\n  /**\n   * The alias(es) of the token.\n   *\n   * @type {string|string[]}\n   * @see GrammarToken\n   * @public\n   */\n  this.alias = alias\n  // Copy of the full string this token was created from\n  this.length = (matchedStr || '').length | 0\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */\nfunction matchPattern(pattern, pos, text, lookbehind) {\n  pattern.lastIndex = pos\n  var match = pattern.exec(text)\n  if (match && lookbehind && match[1]) {\n    // change the match to remove the text matched by the Prism lookbehind group\n    var lookbehindLength = match[1].length\n    match.index += lookbehindLength\n    match[0] = match[0].slice(lookbehindLength)\n  }\n  return match\n}\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n  for (var token in grammar) {\n    if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n      continue\n    }\n\n    var patterns = grammar[token]\n    patterns = Array.isArray(patterns) ? patterns : [patterns]\n\n    for (var j = 0; j < patterns.length; ++j) {\n      if (rematch && rematch.cause == token + ',' + j) {\n        return\n      }\n\n      var patternObj = patterns[j]\n      var inside = patternObj.inside\n      var lookbehind = !!patternObj.lookbehind\n      var greedy = !!patternObj.greedy\n      var alias = patternObj.alias\n\n      if (greedy && !patternObj.pattern.global) {\n        // Without the global flag, lastIndex won't work\n        var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0]\n        patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g')\n      }\n\n      /** @type {RegExp} */\n      var pattern = patternObj.pattern || patternObj\n\n      for (\n        // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos;\n        currentNode !== tokenList.tail;\n        pos += currentNode.value.length, currentNode = currentNode.next\n      ) {\n        if (rematch && pos >= rematch.reach) {\n          break\n        }\n\n        var str = currentNode.value\n\n        if (tokenList.length > text.length) {\n          // Something went terribly wrong, ABORT, ABORT!\n          return\n        }\n\n        if (str instanceof Token) {\n          continue\n        }\n\n        var removeCount = 1 // this is the to parameter of removeBetween\n        var match\n\n        if (greedy) {\n          match = matchPattern(pattern, pos, text, lookbehind)\n          if (!match || match.index >= text.length) {\n            break\n          }\n\n          var from = match.index\n          var to = match.index + match[0].length\n          var p = pos\n\n          // find the node that contains the match\n          p += currentNode.value.length\n          while (from >= p) {\n            currentNode = currentNode.next\n            p += currentNode.value.length\n          }\n          // adjust pos (and p)\n          p -= currentNode.value.length\n          pos = p\n\n          // the current node is a Token, then the match starts inside another Token, which is invalid\n          if (currentNode.value instanceof Token) {\n            continue\n          }\n\n          // find the last node which is affected by this match\n          for (\n            var k = currentNode;\n            k !== tokenList.tail && (p < to || typeof k.value === 'string');\n            k = k.next\n          ) {\n            removeCount++\n            p += k.value.length\n          }\n          removeCount--\n\n          // replace with the new match\n          str = text.slice(pos, p)\n          match.index -= pos\n        } else {\n          match = matchPattern(pattern, 0, str, lookbehind)\n          if (!match) {\n            continue\n          }\n        }\n\n        // eslint-disable-next-line no-redeclare\n        var from = match.index\n        var matchStr = match[0]\n        var before = str.slice(0, from)\n        var after = str.slice(from + matchStr.length)\n\n        var reach = pos + str.length\n        if (rematch && reach > rematch.reach) {\n          rematch.reach = reach\n        }\n\n        var removeFrom = currentNode.prev\n\n        if (before) {\n          removeFrom = addAfter(tokenList, removeFrom, before)\n          pos += before.length\n        }\n\n        removeRange(tokenList, removeFrom, removeCount)\n\n        var wrapped = new Token(\n          token,\n          inside ? _.tokenize(matchStr, inside) : matchStr,\n          alias,\n          matchStr\n        )\n        currentNode = addAfter(tokenList, removeFrom, wrapped)\n\n        if (after) {\n          addAfter(tokenList, currentNode, after)\n        }\n\n        if (removeCount > 1) {\n          // at least one Token object was removed, so we have to do some rematching\n          // this can only happen if the current pattern is greedy\n\n          /** @type {RematchOptions} */\n          var nestedRematch = {\n            cause: token + ',' + j,\n            reach: reach\n          }\n          matchGrammar(\n            text,\n            tokenList,\n            grammar,\n            currentNode.prev,\n            pos,\n            nestedRematch\n          )\n\n          // the reach might have been extended because of the rematching\n          if (rematch && nestedRematch.reach > rematch.reach) {\n            rematch.reach = nestedRematch.reach\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n  /** @type {LinkedListNode<T>} */\n  var head = {value: null, prev: null, next: null}\n  /** @type {LinkedListNode<T>} */\n  var tail = {value: null, prev: head, next: null}\n  head.next = tail\n\n  /** @type {LinkedListNode<T>} */\n  this.head = head\n  /** @type {LinkedListNode<T>} */\n  this.tail = tail\n  this.length = 0\n}\n\n/**\n * Adds a new node with the given value to the list.\n *\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n  // assumes that node != list.tail && values.length >= 0\n  var next = node.next\n\n  var newNode = {value: value, prev: node, next: next}\n  node.next = newNode\n  next.prev = newNode\n  list.length++\n\n  return newNode\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n *\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n  var next = node.next\n  for (var i = 0; i < count && next !== list.tail; i++) {\n    next = next.next\n  }\n  node.next = next\n  next.prev = node\n  list.length -= i\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n  var array = []\n  var node = list.head.next\n  while (node !== list.tail) {\n    array.push(node.value)\n    node = node.next\n  }\n  return array\n}\n\nexport const Prism = _\n","/**\n * @import {Element, Root, Text} from 'hast'\n * @import {Grammar, Languages} from 'prismjs'\n */\n\n/**\n * @typedef _Token\n *   Hidden Prism token.\n * @property {string} alias\n *   Alias.\n * @property {string} content\n *   Content.\n * @property {number} length\n *   Length.\n * @property {string} type\n *   Type.\n */\n\n/**\n * @typedef _Env\n *   Hidden Prism environment.\n * @property {Record<string, string>} attributes\n *   Attributes.\n * @property {Array<string>} classes\n *   Classes.\n * @property {Array<RefractorElement | Text> | RefractorElement | Text} content\n *   Content.\n * @property {string} language\n *   Language.\n * @property {string} tag\n *   Tag.\n * @property {string} type\n *   Type.\n */\n\n/**\n * @typedef {Omit<Element, 'children'> & {children: Array<RefractorElement | Text>}} RefractorElement\n *   Element; narrowed down to what’s used here.\n */\n\n/**\n * @typedef {Omit<Root, 'children'> & {children: Array<RefractorElement | Text>}} RefractorRoot\n *   Root; narrowed down to what’s used here.\n */\n\n/**\n * @typedef {((prism: Refractor) => undefined | void) & {aliases?: Array<string> | undefined, displayName: string}} Syntax\n *   Refractor syntax function.\n */\n\n/**\n * @typedef Refractor\n *   Virtual syntax highlighting\n * @property {typeof alias} alias\n * @property {Languages} languages\n * @property {typeof listLanguages} listLanguages\n * @property {typeof highlight} highlight\n * @property {typeof registered} registered\n * @property {typeof register} register\n */\n\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\nimport {h} from 'hastscript'\nimport {parseEntities} from 'parse-entities'\nimport {Prism} from './prism-core.js'\n\n// To do: next major, use `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n// Inherit.\nfunction Refractor() {}\n\nRefractor.prototype = Prism\n\n/** @type {Refractor} */\n// @ts-expect-error: TS is wrong.\nexport const refractor = new Refractor()\n\n// Create.\nrefractor.highlight = highlight\nrefractor.register = register\nrefractor.alias = alias\nrefractor.registered = registered\nrefractor.listLanguages = listLanguages\n\n// @ts-expect-error Overwrite Prism.\nrefractor.util.encode = encode\n// @ts-expect-error Overwrite Prism.\nrefractor.Token.stringify = stringify\n\n/**\n * Highlight `value` (code) as `language` (programming language).\n *\n * @param {string} value\n *   Code to highlight.\n * @param {Grammar | string} language\n *   Programming language name, alias, or grammar.\n * @returns {RefractorRoot}\n *   Node representing highlighted code.\n */\nfunction highlight(value, language) {\n  if (typeof value !== 'string') {\n    throw new TypeError('Expected `string` for `value`, got `' + value + '`')\n  }\n\n  /** @type {Grammar} */\n  let grammar\n  /** @type {string | undefined} */\n  let name\n\n  // `name` is a grammar object.\n  // This was called internally by Prism.js before 1.28.0.\n  /* c8 ignore next 2 */\n  if (language && typeof language === 'object') {\n    grammar = language\n  } else {\n    name = language\n\n    if (typeof name !== 'string') {\n      throw new TypeError('Expected `string` for `name`, got `' + name + '`')\n    }\n\n    if (own.call(refractor.languages, name)) {\n      grammar = refractor.languages[name]\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered')\n    }\n  }\n\n  return {\n    type: 'root',\n    // @ts-expect-error: we hacked Prism to accept and return the things we want.\n    children: Prism.highlight.call(refractor, value, grammar, name)\n  }\n}\n\n/**\n * Register a syntax.\n *\n * @param {Syntax} syntax\n *   Language function made for refractor, as in, the files in\n *   `refractor/lang/*.js`.\n * @returns {undefined}\n *   Nothing.\n */\nfunction register(syntax) {\n  if (typeof syntax !== 'function' || !syntax.displayName) {\n    throw new Error('Expected `function` for `syntax`, got `' + syntax + '`')\n  }\n\n  // Do not duplicate registrations.\n  if (!own.call(refractor.languages, syntax.displayName)) {\n    syntax(refractor)\n  }\n}\n\n/**\n * Register aliases for already registered languages.\n *\n * @param {Record<string, ReadonlyArray<string> | string> | string} language\n *   Language to alias.\n * @param {ReadonlyArray<string> | string | null | undefined} [alias]\n *   Aliases.\n * @returns {undefined}\n *   Nothing.\n */\nfunction alias(language, alias) {\n  const languages = refractor.languages\n  /** @type {Record<string, ReadonlyArray<string> | string>} */\n  let map = {}\n\n  if (typeof language === 'string') {\n    if (alias) {\n      map[language] = alias\n    }\n  } else {\n    map = language\n  }\n\n  /** @type {string} */\n  let key\n\n  for (key in map) {\n    if (own.call(map, key)) {\n      const value = map[key]\n      const list = typeof value === 'string' ? [value] : value\n      let index = -1\n\n      while (++index < list.length) {\n        languages[list[index]] = languages[key]\n      }\n    }\n  }\n}\n\n/**\n * Check whether an `alias` or `language` is registered.\n *\n * @param {string} aliasOrLanguage\n *   Language or alias to check.\n * @returns {boolean}\n *   Whether the language is registered.\n */\nfunction registered(aliasOrLanguage) {\n  if (typeof aliasOrLanguage !== 'string') {\n    throw new TypeError(\n      'Expected `string` for `aliasOrLanguage`, got `' + aliasOrLanguage + '`'\n    )\n  }\n\n  return own.call(refractor.languages, aliasOrLanguage)\n}\n\n/**\n * List all registered languages (names and aliases).\n *\n * @returns {Array<string>}\n *   List of language names.\n */\nfunction listLanguages() {\n  const languages = refractor.languages\n  /** @type {Array<string>} */\n  const list = []\n  /** @type {string} */\n  let language\n\n  for (language in languages) {\n    if (\n      own.call(languages, language) &&\n      typeof languages[language] === 'object'\n    ) {\n      list.push(language)\n    }\n  }\n\n  return list\n}\n\n/**\n * @param {Array<_Token | string> | _Token | string} value\n *   Token to stringify.\n * @param {string} language\n *   Language of the token.\n * @returns {Array<RefractorElement | Text> | RefractorElement | Text}\n *   Node representing the token.\n */\nfunction stringify(value, language) {\n  if (typeof value === 'string') {\n    return {type: 'text', value}\n  }\n\n  if (Array.isArray(value)) {\n    /** @type {Array<RefractorElement | Text>} */\n    const result = []\n    let index = -1\n\n    while (++index < value.length) {\n      if (\n        value[index] !== null &&\n        value[index] !== undefined &&\n        value[index] !== ''\n      ) {\n        // @ts-expect-error Assume no sub-arrays.\n        result.push(stringify(value[index], language))\n      }\n    }\n\n    return result\n  }\n\n  /** @type {_Env} */\n  const env = {\n    attributes: {},\n    classes: ['token', value.type],\n    content: stringify(value.content, language),\n    language,\n    tag: 'span',\n    type: value.type\n  }\n\n  if (value.alias) {\n    env.classes.push(\n      ...(typeof value.alias === 'string' ? [value.alias] : value.alias)\n    )\n  }\n\n  // @ts-expect-error Prism.\n  refractor.hooks.run('wrap', env)\n\n  // @ts-expect-error Hush, it’s fine.\n  return h(\n    env.tag + '.' + env.classes.join('.'),\n    attributes(env.attributes),\n    env.content\n  )\n}\n\n/**\n * @template {unknown} T\n *   Tokens.\n * @param {T} tokens\n *   Input.\n * @returns {T}\n *   Output, same as input.\n */\nfunction encode(tokens) {\n  return tokens\n}\n\n/**\n * @param {Record<string, string>} record\n *   Attributes.\n * @returns {Record<string, string>}\n *   Attributes.\n */\nfunction attributes(record) {\n  /** @type {string} */\n  let key\n\n  for (key in record) {\n    if (own.call(record, key)) {\n      record[key] = parseEntities(record[key])\n    }\n  }\n\n  return record\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbasic.displayName = 'basic'\nbasic.aliases = []\n\n/** @type {Syntax} */\nexport default function basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nclike.displayName = 'clike'\nclike.aliases = []\n\n/** @type {Syntax} */\nexport default function clike(Prism) {\n  Prism.languages.clike = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword:\n      /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorCss from './css.js'\nscss.displayName = 'scss'\nscss.aliases = []\n\n/** @type {Syntax} */\nexport default function scss(Prism) {\n  Prism.register(refractorCss)\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/\n        // See rest below\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern:\n        /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n      {\n        pattern: /( )(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    'module-modifier': {\n      pattern: /\\b(?:as|hide|show|with)\\b/i,\n      alias: 'keyword'\n    },\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkup from './markup.js'\nmarkupTemplating.displayName = 'markup-templating'\nmarkupTemplating.aliases = []\n\n/** @type {Syntax} */\nexport default function markupTemplating(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder\n\n            // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            }\n\n            // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          })\n\n          // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          }\n\n          // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmarkup.displayName = 'markup'\nmarkup.aliases = ['atom', 'html', 'mathml', 'rss', 'ssml', 'svg', 'xml']\n\n/** @type {Syntax} */\nexport default function markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern:\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern:\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup\n\n  // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(\n          /(^|[\"'\\s])/.source +\n            '(?:' +\n            attrName +\n            ')' +\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [\n                {\n                  pattern: /^=/,\n                  alias: 'attr-equals'\n                },\n                /\"|'/\n              ]\n            }\n          }\n        }\n      })\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\ngo.displayName = 'go'\ngo.aliases = []\n\n/** @type {Syntax} */\nexport default function go(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n    number: [\n      // binary and octal integers\n      /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n      // hexadecimal integers and floats\n      /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      // decimal integers and floats\n      /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n    ],\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n  })\n  Prism.languages.insertBefore('go', 'string', {\n    char: {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.go['class-name']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nr.displayName = 'r'\nr.aliases = []\n\n/** @type {Syntax} */\nexport default function r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:Inf|NaN)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nini.displayName = 'ini'\nini.aliases = []\n\n/** @type {Syntax} */\nexport default function ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","/**\n * @import {\n *   Grammar,\n *   RefractorElement,\n *   RefractorRoot,\n *   Syntax,\n *   Text\n * } from './core.js'\n */\nimport clike from '../lang/clike.js'\nimport c from '../lang/c.js'\nimport cpp from '../lang/cpp.js'\nimport arduino from '../lang/arduino.js'\nimport bash from '../lang/bash.js'\nimport csharp from '../lang/csharp.js'\nimport markup from '../lang/markup.js'\nimport css from '../lang/css.js'\nimport diff from '../lang/diff.js'\nimport go from '../lang/go.js'\nimport ini from '../lang/ini.js'\nimport java from '../lang/java.js'\nimport regex from '../lang/regex.js'\nimport javascript from '../lang/javascript.js'\nimport json from '../lang/json.js'\nimport kotlin from '../lang/kotlin.js'\nimport less from '../lang/less.js'\nimport lua from '../lang/lua.js'\nimport makefile from '../lang/makefile.js'\nimport yaml from '../lang/yaml.js'\nimport markdown from '../lang/markdown.js'\nimport objectivec from '../lang/objectivec.js'\nimport perl from '../lang/perl.js'\nimport markupTemplating from '../lang/markup-templating.js'\nimport php from '../lang/php.js'\nimport python from '../lang/python.js'\nimport r from '../lang/r.js'\nimport ruby from '../lang/ruby.js'\nimport rust from '../lang/rust.js'\nimport sass from '../lang/sass.js'\nimport scss from '../lang/scss.js'\nimport sql from '../lang/sql.js'\nimport swift from '../lang/swift.js'\nimport typescript from '../lang/typescript.js'\nimport basic from '../lang/basic.js'\nimport vbnet from '../lang/vbnet.js'\nimport {refractor} from './core.js'\n\nrefractor.register(clike)\nrefractor.register(c)\nrefractor.register(cpp)\nrefractor.register(arduino)\nrefractor.register(bash)\nrefractor.register(csharp)\nrefractor.register(markup)\nrefractor.register(css)\nrefractor.register(diff)\nrefractor.register(go)\nrefractor.register(ini)\nrefractor.register(java)\nrefractor.register(regex)\nrefractor.register(javascript)\nrefractor.register(json)\nrefractor.register(kotlin)\nrefractor.register(less)\nrefractor.register(lua)\nrefractor.register(makefile)\nrefractor.register(yaml)\nrefractor.register(markdown)\nrefractor.register(objectivec)\nrefractor.register(perl)\nrefractor.register(markupTemplating)\nrefractor.register(php)\nrefractor.register(python)\nrefractor.register(r)\nrefractor.register(ruby)\nrefractor.register(rust)\nrefractor.register(sass)\nrefractor.register(scss)\nrefractor.register(sql)\nrefractor.register(swift)\nrefractor.register(typescript)\nrefractor.register(basic)\nrefractor.register(vbnet)\n\nexport {refractor} from './core.js'\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorCpp from './cpp.js'\narduino.displayName = 'arduino'\narduino.aliases = ['ino']\n\n/** @type {Syntax} */\nexport default function arduino(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    keyword:\n      /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n    constant:\n      /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n    builtin:\n      /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n  })\n  Prism.languages.ino = Prism.languages.arduino\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nperl.displayName = 'perl'\nperl.aliases = []\n\n/** @type {Syntax} */\nexport default function perl(Prism) {\n  ;(function (Prism) {\n    var brackets =\n      /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/\n        .source\n    Prism.languages.perl = {\n      comment: [\n        {\n          // POD\n          pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n        {\n          pattern: RegExp(\n            /\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // q/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                // q a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                // q(...)\n                // q{...}\n                // q[...]\n                // q<...>\n                brackets\n              ].join('|') +\n              ')'\n          ),\n          greedy: true\n        },\n        // \"...\", `...`\n        {\n          pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true\n        },\n        // '...'\n        // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n        {\n          pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n          greedy: true\n        }\n      ],\n      regex: [\n        {\n          pattern: RegExp(\n            /\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // m/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                // m a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                // m(...)\n                // m{...}\n                // m[...]\n                // m<...>\n                brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngc]*/.source\n          ),\n          greedy: true\n        },\n        // The lookbehinds prevent -s from breaking\n        {\n          pattern: RegExp(\n            /(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // s/.../.../\n                // eslint-disable-next-line regexp/strict\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/\n                  .source,\n                // s a...a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/\n                  .source,\n                // s(...)(...)\n                // s{...}{...}\n                // s[...][...]\n                // s<...><...>\n                // s(...)[...]\n                brackets + /\\s*/.source + brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngcer]*/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        },\n        // /.../\n        // The look-ahead tries to prevent two divisions on\n        // the same line from being highlighted as regex.\n        // This does not support multi-line regex.\n        {\n          pattern:\n            /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n          greedy: true\n        }\n      ],\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n        // ${^POSTMATCH}\n        /[&*$@%]\\{\\^[A-Z]+\\}/,\n        // $^V\n        /[&*$@%]\\^[A-Z_]/,\n        // ${...}\n        /[&*$@%]#?(?=\\{)/,\n        // $foo\n        /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/,\n        // $1\n        /[&*$@%]\\d+/,\n        // $_, @_, %!\n        // The negative lookahead prevents from breaking the %= operator\n        /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n      ],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      'v-string': {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /(\\bsub[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator:\n        /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nlua.displayName = 'lua'\nlua.aliases = []\n\n/** @type {Syntax} */\nexport default function lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nsql.displayName = 'sql'\nsql.aliases = []\n\n/** @type {Syntax} */\nexport default function sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    variable: [\n      {\n        pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n        greedy: true\n      },\n      /@[\\w.$]+/\n    ],\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    identifier: {\n      pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        punctuation: /^`|`$/\n      }\n    },\n    function:\n      /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword:\n      /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\n\n/** @type {Syntax} */\nexport default function makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword:\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern:\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorCss from './css.js'\nless.displayName = 'less'\nless.aliases = []\n\n/** @type {Syntax} */\nexport default function less(Prism) {\n  Prism.register(refractorCss)\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      },\n      // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nabap.displayName = 'abap'\nabap.aliases = []\n\n/** @type {Syntax} */\nexport default function abap(Prism) {\n  Prism.languages.abap = {\n    comment: /^\\*.*/m,\n    string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'string-template': {\n      pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    /* End Of Line comments should not interfere with strings when the\nquote character occurs within them. We assume a string being highlighted\ninside an EOL comment is more acceptable than the opposite.\n*/\n    'eol-comment': {\n      pattern: /(^|\\s)\".*/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    keyword: {\n      pattern:\n        /(\\s|\\.|^)(?:\\*-INPUT|\\?TO|ABAP-SOURCE|ABBREVIATED|ABS|ABSTRACT|ACCEPT|ACCEPTING|ACCESSPOLICY|ACCORDING|ACOS|ACTIVATION|ACTUAL|ADD|ADD-CORRESPONDING|ADJACENT|AFTER|ALIAS|ALIASES|ALIGN|ALL|ALLOCATE|ALPHA|ANALYSIS|ANALYZER|AND|ANY|APPEND|APPENDAGE|APPENDING|APPLICATION|ARCHIVE|AREA|ARITHMETIC|AS|ASCENDING|ASIN|ASPECT|ASSERT|ASSIGN|ASSIGNED|ASSIGNING|ASSOCIATION|ASYNCHRONOUS|AT|ATAN|ATTRIBUTES|AUTHORITY|AUTHORITY-CHECK|AVG|BACK|BACKGROUND|BACKUP|BACKWARD|BADI|BASE|BEFORE|BEGIN|BETWEEN|BIG|BINARY|BINDING|BIT|BIT-AND|BIT-NOT|BIT-OR|BIT-XOR|BLACK|BLANK|BLANKS|BLOB|BLOCK|BLOCKS|BLUE|BOUND|BOUNDARIES|BOUNDS|BOXED|BREAK-POINT|BT|BUFFER|BY|BYPASSING|BYTE|BYTE-CA|BYTE-CN|BYTE-CO|BYTE-CS|BYTE-NA|BYTE-NS|BYTE-ORDER|C|CA|CALL|CALLING|CASE|CAST|CASTING|CATCH|CEIL|CENTER|CENTERED|CHAIN|CHAIN-INPUT|CHAIN-REQUEST|CHANGE|CHANGING|CHANNELS|CHAR-TO-HEX|CHARACTER|CHARLEN|CHECK|CHECKBOX|CIRCULAR|CI_|CLASS|CLASS-CODING|CLASS-DATA|CLASS-EVENTS|CLASS-METHODS|CLASS-POOL|CLEANUP|CLEAR|CLIENT|CLOB|CLOCK|CLOSE|CN|CNT|CO|COALESCE|CODE|CODING|COLLECT|COLOR|COLUMN|COLUMNS|COL_BACKGROUND|COL_GROUP|COL_HEADING|COL_KEY|COL_NEGATIVE|COL_NORMAL|COL_POSITIVE|COL_TOTAL|COMMENT|COMMENTS|COMMIT|COMMON|COMMUNICATION|COMPARING|COMPONENT|COMPONENTS|COMPRESSION|COMPUTE|CONCAT|CONCATENATE|COND|CONDENSE|CONDITION|CONNECT|CONNECTION|CONSTANTS|CONTEXT|CONTEXTS|CONTINUE|CONTROL|CONTROLS|CONV|CONVERSION|CONVERT|COPIES|COPY|CORRESPONDING|COS|COSH|COUNT|COUNTRY|COVER|CP|CPI|CREATE|CREATING|CRITICAL|CS|CURRENCY|CURRENCY_CONVERSION|CURRENT|CURSOR|CURSOR-SELECTION|CUSTOMER|CUSTOMER-FUNCTION|DANGEROUS|DATA|DATABASE|DATAINFO|DATASET|DATE|DAYLIGHT|DBMAXLEN|DD\\/MM\\/YY|DD\\/MM\\/YYYY|DDMMYY|DEALLOCATE|DECIMALS|DECIMAL_SHIFT|DECLARATIONS|DEEP|DEFAULT|DEFERRED|DEFINE|DEFINING|DEFINITION|DELETE|DELETING|DEMAND|DEPARTMENT|DESCENDING|DESCRIBE|DESTINATION|DETAIL|DIALOG|DIRECTORY|DISCONNECT|DISPLAY|DISPLAY-MODE|DISTANCE|DISTINCT|DIV|DIVIDE|DIVIDE-CORRESPONDING|DIVISION|DO|DUMMY|DUPLICATE|DUPLICATES|DURATION|DURING|DYNAMIC|DYNPRO|E|EACH|EDIT|EDITOR-CALL|ELSE|ELSEIF|EMPTY|ENABLED|ENABLING|ENCODING|END|END-ENHANCEMENT-SECTION|END-LINES|END-OF-DEFINITION|END-OF-FILE|END-OF-PAGE|END-OF-SELECTION|ENDAT|ENDCASE|ENDCATCH|ENDCHAIN|ENDCLASS|ENDDO|ENDENHANCEMENT|ENDEXEC|ENDFOR|ENDFORM|ENDFUNCTION|ENDIAN|ENDIF|ENDING|ENDINTERFACE|ENDLOOP|ENDMETHOD|ENDMODULE|ENDON|ENDPROVIDE|ENDSELECT|ENDTRY|ENDWHILE|ENGINEERING|ENHANCEMENT|ENHANCEMENT-POINT|ENHANCEMENT-SECTION|ENHANCEMENTS|ENTRIES|ENTRY|ENVIRONMENT|EQ|EQUAL|EQUIV|ERRORMESSAGE|ERRORS|ESCAPE|ESCAPING|EVENT|EVENTS|EXACT|EXCEPT|EXCEPTION|EXCEPTION-TABLE|EXCEPTIONS|EXCLUDE|EXCLUDING|EXEC|EXECUTE|EXISTS|EXIT|EXIT-COMMAND|EXP|EXPAND|EXPANDING|EXPIRATION|EXPLICIT|EXPONENT|EXPORT|EXPORTING|EXTEND|EXTENDED|EXTENSION|EXTRACT|FAIL|FETCH|FIELD|FIELD-GROUPS|FIELD-SYMBOL|FIELD-SYMBOLS|FIELDS|FILE|FILTER|FILTER-TABLE|FILTERS|FINAL|FIND|FIRST|FIRST-LINE|FIXED-POINT|FKEQ|FKGE|FLOOR|FLUSH|FONT|FOR|FORM|FORMAT|FORWARD|FOUND|FRAC|FRAME|FRAMES|FREE|FRIENDS|FROM|FUNCTION|FUNCTION-POOL|FUNCTIONALITY|FURTHER|GAPS|GE|GENERATE|GET|GIVING|GKEQ|GKGE|GLOBAL|GRANT|GREATER|GREEN|GROUP|GROUPS|GT|HANDLE|HANDLER|HARMLESS|HASHED|HAVING|HDB|HEAD-LINES|HEADER|HEADERS|HEADING|HELP-ID|HELP-REQUEST|HIDE|HIGH|HINT|HOLD|HOTSPOT|I|ICON|ID|IDENTIFICATION|IDENTIFIER|IDS|IF|IGNORE|IGNORING|IMMEDIATELY|IMPLEMENTATION|IMPLEMENTATIONS|IMPLEMENTED|IMPLICIT|IMPORT|IMPORTING|IN|INACTIVE|INCL|INCLUDE|INCLUDES|INCLUDING|INCREMENT|INDEX|INDEX-LINE|INFOTYPES|INHERITING|INIT|INITIAL|INITIALIZATION|INNER|INOUT|INPUT|INSERT|INSTANCES|INTENSIFIED|INTERFACE|INTERFACE-POOL|INTERFACES|INTERNAL|INTERVALS|INTO|INVERSE|INVERTED-DATE|IS|ISO|ITERATOR|ITNO|JOB|JOIN|KEEP|KEEPING|KERNEL|KEY|KEYS|KEYWORDS|KIND|LANGUAGE|LAST|LATE|LAYOUT|LE|LEADING|LEAVE|LEFT|LEFT-JUSTIFIED|LEFTPLUS|LEFTSPACE|LEGACY|LENGTH|LESS|LET|LEVEL|LEVELS|LIKE|LINE|LINE-COUNT|LINE-SELECTION|LINE-SIZE|LINEFEED|LINES|LIST|LIST-PROCESSING|LISTBOX|LITTLE|LLANG|LOAD|LOAD-OF-PROGRAM|LOB|LOCAL|LOCALE|LOCATOR|LOG|LOG-POINT|LOG10|LOGFILE|LOGICAL|LONG|LOOP|LOW|LOWER|LPAD|LPI|LT|M|MAIL|MAIN|MAJOR-ID|MAPPING|MARGIN|MARK|MASK|MATCH|MATCHCODE|MAX|MAXIMUM|MEDIUM|MEMBERS|MEMORY|MESH|MESSAGE|MESSAGE-ID|MESSAGES|MESSAGING|METHOD|METHODS|MIN|MINIMUM|MINOR-ID|MM\\/DD\\/YY|MM\\/DD\\/YYYY|MMDDYY|MOD|MODE|MODIF|MODIFIER|MODIFY|MODULE|MOVE|MOVE-CORRESPONDING|MULTIPLY|MULTIPLY-CORRESPONDING|NA|NAME|NAMETAB|NATIVE|NB|NE|NESTED|NESTING|NEW|NEW-LINE|NEW-PAGE|NEW-SECTION|NEXT|NO|NO-DISPLAY|NO-EXTENSION|NO-GAP|NO-GAPS|NO-GROUPING|NO-HEADING|NO-SCROLLING|NO-SIGN|NO-TITLE|NO-TOPOFPAGE|NO-ZERO|NODE|NODES|NON-UNICODE|NON-UNIQUE|NOT|NP|NS|NULL|NUMBER|NUMOFCHAR|O|OBJECT|OBJECTS|OBLIGATORY|OCCURRENCE|OCCURRENCES|OCCURS|OF|OFF|OFFSET|OLE|ON|ONLY|OPEN|OPTION|OPTIONAL|OPTIONS|OR|ORDER|OTHER|OTHERS|OUT|OUTER|OUTPUT|OUTPUT-LENGTH|OVERFLOW|OVERLAY|PACK|PACKAGE|PAD|PADDING|PAGE|PAGES|PARAMETER|PARAMETER-TABLE|PARAMETERS|PART|PARTIALLY|PATTERN|PERCENTAGE|PERFORM|PERFORMING|PERSON|PF|PF-STATUS|PINK|PLACES|POOL|POSITION|POS_HIGH|POS_LOW|PRAGMAS|PRECOMPILED|PREFERRED|PRESERVING|PRIMARY|PRINT|PRINT-CONTROL|PRIORITY|PRIVATE|PROCEDURE|PROCESS|PROGRAM|PROPERTY|PROTECTED|PROVIDE|PUBLIC|PUSHBUTTON|PUT|QUEUE-ONLY|QUICKINFO|RADIOBUTTON|RAISE|RAISING|RANGE|RANGES|RAW|READ|READ-ONLY|READER|RECEIVE|RECEIVED|RECEIVER|RECEIVING|RED|REDEFINITION|REDUCE|REDUCED|REF|REFERENCE|REFRESH|REGEX|REJECT|REMOTE|RENAMING|REPLACE|REPLACEMENT|REPLACING|REPORT|REQUEST|REQUESTED|RESERVE|RESET|RESOLUTION|RESPECTING|RESPONSIBLE|RESULT|RESULTS|RESUMABLE|RESUME|RETRY|RETURN|RETURNCODE|RETURNING|RIGHT|RIGHT-JUSTIFIED|RIGHTPLUS|RIGHTSPACE|RISK|RMC_COMMUNICATION_FAILURE|RMC_INVALID_STATUS|RMC_SYSTEM_FAILURE|ROLE|ROLLBACK|ROUND|ROWS|RTTI|RUN|SAP|SAP-SPOOL|SAVING|SCALE_PRESERVING|SCALE_PRESERVING_SCIENTIFIC|SCAN|SCIENTIFIC|SCIENTIFIC_WITH_LEADING_ZERO|SCREEN|SCROLL|SCROLL-BOUNDARY|SCROLLING|SEARCH|SECONDARY|SECONDS|SECTION|SELECT|SELECT-OPTIONS|SELECTION|SELECTION-SCREEN|SELECTION-SET|SELECTION-SETS|SELECTION-TABLE|SELECTIONS|SELECTOR|SEND|SEPARATE|SEPARATED|SET|SHARED|SHIFT|SHORT|SHORTDUMP-ID|SIGN|SIGN_AS_POSTFIX|SIMPLE|SIN|SINGLE|SINH|SIZE|SKIP|SKIPPING|SMART|SOME|SORT|SORTABLE|SORTED|SOURCE|SPACE|SPECIFIED|SPLIT|SPOOL|SPOTS|SQL|SQLSCRIPT|SQRT|STABLE|STAMP|STANDARD|START-OF-SELECTION|STARTING|STATE|STATEMENT|STATEMENTS|STATIC|STATICS|STATUSINFO|STEP-LOOP|STOP|STRLEN|STRUCTURE|STRUCTURES|STYLE|SUBKEY|SUBMATCHES|SUBMIT|SUBROUTINE|SUBSCREEN|SUBSTRING|SUBTRACT|SUBTRACT-CORRESPONDING|SUFFIX|SUM|SUMMARY|SUMMING|SUPPLIED|SUPPLY|SUPPRESS|SWITCH|SWITCHSTATES|SYMBOL|SYNCPOINTS|SYNTAX|SYNTAX-CHECK|SYNTAX-TRACE|SYSTEM-CALL|SYSTEM-EXCEPTIONS|SYSTEM-EXIT|TAB|TABBED|TABLE|TABLES|TABLEVIEW|TABSTRIP|TAN|TANH|TARGET|TASK|TASKS|TEST|TESTING|TEXT|TEXTPOOL|THEN|THROW|TIME|TIMES|TIMESTAMP|TIMEZONE|TITLE|TITLE-LINES|TITLEBAR|TO|TOKENIZATION|TOKENS|TOP-LINES|TOP-OF-PAGE|TRACE-FILE|TRACE-TABLE|TRAILING|TRANSACTION|TRANSFER|TRANSFORMATION|TRANSLATE|TRANSPORTING|TRMAC|TRUNC|TRUNCATE|TRUNCATION|TRY|TYPE|TYPE-POOL|TYPE-POOLS|TYPES|ULINE|UNASSIGN|UNDER|UNICODE|UNION|UNIQUE|UNIT|UNIT_CONVERSION|UNIX|UNPACK|UNTIL|UNWIND|UP|UPDATE|UPPER|USER|USER-COMMAND|USING|UTF-8|VALID|VALUE|VALUE-REQUEST|VALUES|VARY|VARYING|VERIFICATION-MESSAGE|VERSION|VIA|VIEW|VISIBLE|WAIT|WARNING|WHEN|WHENEVER|WHERE|WHILE|WIDTH|WINDOW|WINDOWS|WITH|WITH-HEADING|WITH-TITLE|WITHOUT|WORD|WORK|WRITE|WRITER|X|XML|XOR|XSD|XSTRLEN|YELLOW|YES|YYMMDD|Z|ZERO|ZONE)(?![\\w-])/i,\n      lookbehind: true\n    },\n    /* Numbers can be only integers. Decimal or Hex appear only as strings */\n    number: /\\b\\d+\\b/,\n    /* Operators must always be surrounded by whitespace, they cannot be put\nadjacent to operands.\n*/\n    operator: {\n      pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n      lookbehind: true\n    },\n    'string-operator': {\n      pattern: /(\\s)&&?(?=\\s)/,\n      lookbehind: true,\n      /* The official editor highlights */\n      alias: 'keyword'\n    },\n    'token-operator': [\n      {\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }\n    ],\n    punctuation: /[,.:()]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nabnf.displayName = 'abnf'\nabnf.aliases = []\n\n/** @type {Syntax} */\nexport default function abnf(Prism) {\n  ;(function (Prism) {\n    var coreRules =\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern:\n          /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp(\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\n          'i'\n        ),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\nactionscript.displayName = 'actionscript'\nactionscript.aliases = []\n\n/** @type {Syntax} */\nexport default function actionscript(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword:\n      /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  })\n  Prism.languages.actionscript['class-name'].alias = 'function'\n\n  // doesn't work with AS because AS is too complex\n  delete Prism.languages.actionscript['parameter']\n  delete Prism.languages.actionscript['literal-property']\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern:\n          /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    })\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nada.displayName = 'ada'\nada.aliases = []\n\n/** @type {Syntax} */\nexport default function ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n    number: [\n      {\n        pattern:\n          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      },\n      {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }\n    ],\n    attribute: {\n      pattern: /\\b'\\w+/,\n      alias: 'attr-name'\n    },\n    keyword:\n      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|or|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:\\w)*\\b/i\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nagda.displayName = 'agda'\nagda.aliases = []\n\n/** @type {Syntax} */\nexport default function agda(Prism) {\n  ;(function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nal.displayName = 'al'\nal.aliases = []\n\n/** @type {Syntax} */\nexport default function al(Prism) {\n  // based on https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n\n  Prism.languages.al = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(\\b(?:event|procedure|trigger)\\s+|(?:^|[^.])\\.\\s*)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    keyword: [\n      // keywords\n      /\\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\\b/i,\n      // objects and metadata that are used like keywords\n      /\\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\\b/i\n    ],\n    number:\n      /\\b(?:0x[\\da-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)(?:F|LL?|U(?:LL?)?)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: /\\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\\b/,\n    'class-name':\n      /\\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\\b/i,\n    operator: /\\.\\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\\b(?:and|div|mod|not|or|xor)\\b/i,\n    punctuation: /[()\\[\\]{}:.;,]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nantlr4.displayName = 'antlr4'\nantlr4.aliases = ['g4']\n\n/** @type {Syntax} */\nexport default function antlr4(Prism) {\n  Prism.languages.antlr4 = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    string: {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n      greedy: true\n    },\n    'character-class': {\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n      greedy: true,\n      alias: 'regex',\n      inside: {\n        range: {\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        escape:\n          /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n        punctuation: /[\\[\\]]/\n      }\n    },\n    action: {\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n      greedy: true,\n      inside: {\n        content: {\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\n          lookbehind: true\n        },\n        punctuation: /[{}]/\n      }\n    },\n    command: {\n      pattern:\n        /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n      lookbehind: true,\n      inside: {\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n        punctuation: /[,()]/\n      }\n    },\n    annotation: {\n      pattern: /@\\w+(?:::\\w+)*/,\n      alias: 'keyword'\n    },\n    label: {\n      pattern: /#[ \\t]*\\w+/,\n      alias: 'punctuation'\n    },\n    keyword:\n      /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n    definition: [\n      {\n        pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n        alias: ['rule', 'class-name']\n      },\n      {\n        pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n        alias: ['token', 'constant']\n      }\n    ],\n    constant: /\\b[A-Z][A-Z_]*\\b/,\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n    punctuation: /[;:()=]/\n  }\n  Prism.languages.g4 = Prism.languages.antlr4\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\napacheconf.displayName = 'apacheconf'\napacheconf.aliases = []\n\n/** @type {Syntax} */\nexport default function apacheconf(Prism) {\n  Prism.languages.apacheconf = {\n    comment: /#.*/,\n    'directive-inline': {\n      pattern:\n        /(^[\\t ]*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n      lookbehind: true,\n      alias: 'property'\n    },\n    'directive-block': {\n      pattern:\n        /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b.*>/i,\n      inside: {\n        'directive-block': {\n          pattern: /^<\\/?\\w+/,\n          inside: {\n            punctuation: /^<\\/?/\n          },\n          alias: 'tag'\n        },\n        'directive-block-parameter': {\n          pattern: /.*[^>]/,\n          inside: {\n            punctuation: /:/,\n            string: {\n              pattern: /(\"|').*\\1/,\n              inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n              }\n            }\n          },\n          alias: 'attr-value'\n        },\n        punctuation: />/\n      },\n      alias: 'tag'\n    },\n    'directive-flags': {\n      pattern: /\\[(?:[\\w=],?)+\\]/,\n      alias: 'keyword'\n    },\n    string: {\n      pattern: /(\"|').*\\1/,\n      inside: {\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n      }\n    },\n    variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n    regex: /\\^?.*\\$|\\^.*\\$?/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nimport refractorSql from './sql.js'\napex.displayName = 'apex'\napex.aliases = []\n\n/** @type {Syntax} */\nexport default function apex(Prism) {\n  Prism.register(refractorClike)\n  Prism.register(refractorSql)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i\n    var className =\n      /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\n        /<keyword>/g,\n        function () {\n          return keywords.source\n        }\n      )\n    /** @param {string} pattern */\n    function insertClassName(pattern) {\n      return RegExp(\n        pattern.replace(/<CLASS-NAME>/g, function () {\n          return className\n        }),\n        'i'\n      )\n    }\n    var classNameInside = {\n      keyword: keywords,\n      punctuation: /[()\\[\\]{};,:.<>]/\n    }\n    Prism.languages.apex = {\n      comment: Prism.languages.clike.comment,\n      string: Prism.languages.clike.string,\n      sql: {\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-sql',\n        inside: Prism.languages.sql\n      },\n      annotation: {\n        pattern: /@\\w+\\b/,\n        alias: 'punctuation'\n      },\n      'class-name': [\n        {\n          pattern: insertClassName(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/\n              .source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // cast\n          pattern: insertClassName(\n            /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // variable/parameter declaration and return types\n          pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n          inside: classNameInside\n        }\n      ],\n      trigger: {\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      keyword: keywords,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      boolean: /\\b(?:false|true)\\b/i,\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n      operator:\n        /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n      punctuation: /[()\\[\\]{};,.]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\napl.displayName = 'apl'\napl.aliases = []\n\n/** @type {Syntax} */\nexport default function apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number:\n      /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function:\n      /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\napplescript.displayName = 'applescript'\napplescript.aliases = []\n\n/** @type {Syntax} */\nexport default function applescript(Prism) {\n  Prism.languages.applescript = {\n    comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n      /--.+/,\n      /#.+/\n    ],\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n    operator: [\n      /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n      /\\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\\b/\n    ],\n    keyword:\n      /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n    'class-name':\n      /\\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\\b/,\n    punctuation: /[{}():,¬«»《》]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\naql.displayName = 'aql'\naql.aliases = []\n\n/** @type {Syntax} */\nexport default function aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern:\n        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [\n      {\n        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n        lookbehind: true\n      },\n      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,\n      // pseudo keywords get a lookbehind to avoid false positives\n      {\n        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n        lookbehind: true\n      },\n      {\n        pattern: /\\bOPTIONS(?=\\s*\\{)/i\n      }\n    ],\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /\\b(?:false|true)\\b/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: [\n      /\\b0b[01]+/i,\n      /\\b0x[0-9a-f]+/i,\n      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n    ],\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\narff.displayName = 'arff'\narff.aliases = []\n\n/** @type {Syntax} */\nexport default function arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\narmasm.displayName = 'armasm'\narmasm.aliases = ['arm-asm']\n\n/** @type {Syntax} */\nexport default function armasm(Prism) {\n  Prism.languages.armasm = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"/,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /((?:^|[^$])(?:\\${2})*)\\$\\w+/,\n          lookbehind: true\n        }\n      }\n    },\n    char: {\n      pattern: /'(?:[^'\\r\\n]{0,4}|'')'/,\n      greedy: true\n    },\n    'version-symbol': {\n      pattern: /\\|[\\w@]+\\|/,\n      greedy: true,\n      alias: 'property'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    directive: {\n      pattern:\n        /\\b(?:ALIAS|ALIGN|AREA|ARM|ASSERT|ATTR|CN|CODE|CODE16|CODE32|COMMON|CP|DATA|DCB|DCD|DCDO|DCDU|DCFD|DCFDU|DCI|DCQ|DCQU|DCW|DCWU|DN|ELIF|ELSE|END|ENDFUNC|ENDIF|ENDP|ENTRY|EQU|EXPORT|EXPORTAS|EXTERN|FIELD|FILL|FN|FUNCTION|GBLA|GBLL|GBLS|GET|GLOBAL|IF|IMPORT|INCBIN|INCLUDE|INFO|KEEP|LCLA|LCLL|LCLS|LTORG|MACRO|MAP|MEND|MEXIT|NOFP|OPT|PRESERVE8|PROC|QN|READONLY|RELOC|REQUIRE|REQUIRE8|RLIST|ROUT|SETA|SETL|SETS|SN|SPACE|SUBT|THUMB|THUMBX|TTL|WEND|WHILE)\\b/,\n      alias: 'property'\n    },\n    instruction: {\n      pattern:\n        /((?:^|(?:^|[^\\\\])(?:\\r\\n?|\\n))[ \\t]*(?:(?:[A-Z][A-Z0-9_]*[a-z]\\w*|[a-z]\\w*|\\d+)[ \\t]+)?)\\b[A-Z.]+\\b/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    variable: /\\$\\w+/,\n    number:\n      /(?:\\b[2-9]_\\d+|(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e-?\\d+)?|\\b0(?:[fd]_|x)[0-9a-f]+|&[0-9a-f]+)\\b/i,\n    register: {\n      pattern: /\\b(?:r\\d|lr)\\b/,\n      alias: 'symbol'\n    },\n    operator: /<>|<<|>>|&&|\\|\\||[=!<>/]=?|[+\\-*%#?&|^]|:[A-Z]+:/,\n    punctuation: /[()[\\],]/\n  }\n  Prism.languages['arm-asm'] = Prism.languages.armasm\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\narturo.displayName = 'arturo'\narturo.aliases = ['art']\n\n/** @type {Syntax} */\nexport default function arturo(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} lang\n     * @param {string} pattern\n     */\n    var createLanguageString = function (lang, pattern) {\n      return {\n        pattern: RegExp(\n          /\\{!/.source + '(?:' + (pattern || lang) + ')' + /$[\\s\\S]*\\}/.source,\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          embedded: {\n            pattern: /(^\\{!\\w+\\b)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            alias: 'language-' + lang,\n            inside: Prism.languages[lang]\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    }\n    Prism.languages.arturo = {\n      comment: {\n        pattern: /;.*/,\n        greedy: true\n      },\n      character: {\n        pattern: /`.`/,\n        alias: 'char',\n        greedy: true\n      },\n      number: {\n        pattern: /\\b\\d+(?:\\.\\d+(?:\\.\\d+(?:-[\\w+-]+)?)?)?\\b/\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      },\n      regex: {\n        pattern: /\\{\\/.*?\\/\\}/,\n        greedy: true\n      },\n      'html-string': createLanguageString('html'),\n      'css-string': createLanguageString('css'),\n      'js-string': createLanguageString('js'),\n      'md-string': createLanguageString('md'),\n      'sql-string': createLanguageString('sql'),\n      'sh-string': createLanguageString('shell', 'sh'),\n      multistring: {\n        pattern: /».*|\\{:[\\s\\S]*?:\\}|\\{[\\s\\S]*?\\}|^-{6}$[\\s\\S]*/m,\n        alias: 'string',\n        greedy: true\n      },\n      label: {\n        pattern: /\\w+\\b\\??:/,\n        alias: 'property'\n      },\n      literal: {\n        pattern: /'(?:\\w+\\b\\??:?)/,\n        alias: 'constant'\n      },\n      type: {\n        pattern: /:(?:\\w+\\b\\??:?)/,\n        alias: 'class-name'\n      },\n      color: /#\\w+/,\n      predicate: {\n        pattern:\n          /\\b(?:all|and|any|ascii|attr|attribute|attributeLabel|binary|block|char|contains|database|date|dictionary|empty|equal|even|every|exists|false|floating|function|greater|greaterOrEqual|if|in|inline|integer|is|key|label|leap|less|lessOrEqual|literal|logical|lower|nand|negative|nor|not|notEqual|null|numeric|odd|or|path|pathLabel|positive|prefix|prime|regex|same|set|some|sorted|standalone|string|subset|suffix|superset|symbol|symbolLiteral|true|try|type|unless|upper|when|whitespace|word|xnor|xor|zero)\\?/,\n        alias: 'keyword'\n      },\n      'builtin-function': {\n        pattern:\n          /\\b(?:abs|acos|acosh|acsec|acsech|actan|actanh|add|after|alert|alias|and|angle|append|arg|args|arity|array|as|asec|asech|asin|asinh|atan|atan2|atanh|attr|attrs|average|before|benchmark|blend|break|call|capitalize|case|ceil|chop|clear|clip|close|color|combine|conj|continue|copy|cos|cosh|crc|csec|csech|ctan|ctanh|cursor|darken|dec|decode|define|delete|desaturate|deviation|dialog|dictionary|difference|digest|digits|div|do|download|drop|dup|e|else|empty|encode|ensure|env|escape|execute|exit|exp|extend|extract|factors|fdiv|filter|first|flatten|floor|fold|from|function|gamma|gcd|get|goto|hash|hypot|if|inc|indent|index|infinity|info|input|insert|inspect|intersection|invert|jaro|join|keys|kurtosis|last|let|levenshtein|lighten|list|ln|log|loop|lower|mail|map|match|max|median|min|mod|module|mul|nand|neg|new|nor|normalize|not|now|null|open|or|outdent|pad|palette|panic|path|pause|permissions|permutate|pi|pop|popup|pow|powerset|powmod|prefix|print|prints|process|product|query|random|range|read|relative|remove|rename|render|repeat|replace|request|return|reverse|round|sample|saturate|script|sec|sech|select|serve|set|shl|shr|shuffle|sin|sinh|size|skewness|slice|sort|spin|split|sqrt|squeeze|stack|strip|sub|suffix|sum|switch|symbols|symlink|sys|take|tan|tanh|terminal|terminate|to|truncate|try|type|unclip|union|unique|unless|until|unzip|upper|values|var|variance|volume|webview|while|with|wordwrap|write|xnor|xor|zip)\\b/,\n        alias: 'keyword'\n      },\n      sugar: {\n        pattern: /->|=>|\\||::/,\n        alias: 'operator'\n      },\n      punctuation: /[()[\\],]/,\n      symbol: {\n        pattern: /<:|-:|ø|@|#|\\+|\\||\\*|\\$|---|-|%|\\/|\\.\\.|\\^|~|=|<|>|\\\\/\n      },\n      boolean: {\n        pattern: /\\b(?:false|maybe|true)\\b/\n      }\n    }\n    Prism.languages.art = Prism.languages['arturo']\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nasciidoc.displayName = 'asciidoc'\nasciidoc.aliases = ['adoc']\n\n/** @type {Syntax} */\nexport default function asciidoc(Prism) {\n  ;(function (Prism) {\n    var attributes = {\n      pattern:\n        /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n      lookbehind: true,\n      inside: {\n        quoted: {\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          inside: {\n            punctuation: /^[$`]|[$`]$/\n          }\n        },\n        interpreted: {\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n          inside: {\n            punctuation: /^'|'$/\n            // See rest below\n          }\n        },\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        variable: /\\w+(?==)/,\n        punctuation: /^\\[|\\]$|,/,\n        operator: /=/,\n        // The negative look-ahead prevents blank matches\n        'attr-value': /(?!^\\s+$).+/\n      }\n    }\n    var asciidoc = (Prism.languages.asciidoc = {\n      'comment-block': {\n        pattern: /^(\\/{4,})$[\\s\\S]*?^\\1/m,\n        alias: 'comment'\n      },\n      table: {\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n        inside: {\n          specifiers: {\n            pattern:\n              /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n            alias: 'attr-value'\n          },\n          punctuation: {\n            pattern: /(^|[^\\\\])[|!]=*/,\n            lookbehind: true\n          }\n          // See rest below\n        }\n      },\n      'passthrough-block': {\n        pattern: /^(\\+{4,})$[\\s\\S]*?^\\1$/m,\n        inside: {\n          punctuation: /^\\++|\\++$/\n          // See rest below\n        }\n      },\n      // Literal blocks and listing blocks\n      'literal-block': {\n        pattern: /^(-{4,}|\\.{4,})$[\\s\\S]*?^\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/\n          // See rest below\n        }\n      },\n      // Sidebar blocks, quote blocks, example blocks and open blocks\n      'other-block': {\n        pattern: /^(--|\\*{4,}|_{4,}|={4,})$[\\s\\S]*?^\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n          // See rest below\n        }\n      },\n      // list-punctuation and list-label must appear before indented-block\n      'list-punctuation': {\n        pattern:\n          /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'list-label': {\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'indented-block': {\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n        lookbehind: true\n      },\n      comment: /^\\/\\/.*/m,\n      title: {\n        pattern:\n          /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n        alias: 'important',\n        inside: {\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n          // See rest below\n        }\n      },\n      'attribute-entry': {\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n        alias: 'tag'\n      },\n      attributes: attributes,\n      hr: {\n        pattern: /^'{3,}$/m,\n        alias: 'punctuation'\n      },\n      'page-break': {\n        pattern: /^<{3,}$/m,\n        alias: 'punctuation'\n      },\n      admonition: {\n        pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\n        alias: 'keyword'\n      },\n      callout: [\n        {\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }\n      ],\n      macro: {\n        pattern:\n          /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n        inside: {\n          function: /^[a-z\\d-]+(?=:)/,\n          punctuation: /^::?/,\n          attributes: {\n            pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n            inside: attributes.inside\n          }\n        }\n      },\n      inline: {\n        /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/\n        pattern:\n          /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n        lookbehind: true,\n        inside: {\n          attributes: attributes,\n          url: {\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n            inside: {\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n            }\n          },\n          'attribute-ref': {\n            pattern: /^\\{.+\\}$/,\n            inside: {\n              variable: {\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                lookbehind: true\n              },\n              operator: /^[=?!#%@$]|!(?=[:}])/,\n              punctuation: /^\\{|\\}$|::?/\n            }\n          },\n          italic: {\n            pattern: /^(['_])[\\s\\S]+\\1$/,\n            inside: {\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n            }\n          },\n          bold: {\n            pattern: /^\\*[\\s\\S]+\\*$/,\n            inside: {\n              punctuation: /^\\*\\*?|\\*\\*?$/\n            }\n          },\n          punctuation:\n            /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n        }\n      },\n      replacement: {\n        pattern: /\\((?:C|R|TM)\\)/,\n        alias: 'builtin'\n      },\n      entity: /&#?[\\da-z]{1,8};/i,\n      'line-continuation': {\n        pattern: /(^| )\\+$/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n\n    // Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n    function copyFromAsciiDoc(keys) {\n      keys = keys.split(' ')\n      var o = {}\n      for (var i = 0, l = keys.length; i < l; i++) {\n        o[keys[i]] = asciidoc[keys[i]]\n      }\n      return o\n    }\n    attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    )\n    asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro')\n    asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout')\n    asciidoc['table'].inside.rest = copyFromAsciiDoc(\n      'comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation'\n    )\n    asciidoc['other-block'].inside.rest = copyFromAsciiDoc(\n      'table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation'\n    )\n    asciidoc['title'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    )\n\n    // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n      }\n    })\n    Prism.languages.adoc = Prism.languages.asciidoc\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorCsharp from './csharp.js'\nimport refractorMarkup from './markup.js'\naspnet.displayName = 'aspnet'\naspnet.aliases = []\n\n/** @type {Syntax} */\nexport default function aspnet(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.register(refractorMarkup)\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive': {\n      pattern: /<%\\s*@.*%>/,\n      alias: 'tag',\n      inside: {\n        'page-directive': {\n          pattern:\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    directive: {\n      pattern: /<%.*%>/,\n      alias: 'tag',\n      inside: {\n        directive: {\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.csharp\n      }\n    }\n  })\n  // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern =\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\n\n  // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      directive: Prism.languages.aspnet['directive']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp-comment': {\n      pattern: /<%--[\\s\\S]*?--%>/,\n      alias: ['asp', 'comment']\n    }\n  })\n\n  // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp-script': {\n        pattern:\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        alias: ['asp', 'script'],\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nasm6502.displayName = 'asm6502'\nasm6502.aliases = []\n\n/** @type {Syntax} */\nexport default function asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{1,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    },\n    punctuation: /[(),:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nasmatmel.displayName = 'asmatmel'\nasmatmel.aliases = []\n\n/** @type {Syntax} */\nexport default function asmatmel(Prism) {\n  Prism.languages.asmatmel = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    constant: /\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    'r-register': {\n      pattern: /\\br(?:\\d|[12]\\d|3[01])\\b/,\n      alias: 'variable'\n    },\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[acznvshtixy]\\b/i,\n      alias: 'variable'\n    },\n    operator: />>=?|<<=?|&[&=]?|\\|[\\|=]?|[-+*/%^!=<>?]=?/,\n    punctuation: /[(),:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nautohotkey.displayName = 'autohotkey'\nautohotkey.aliases = []\n\n/** @type {Syntax} */\nexport default function autohotkey(Prism) {\n  // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n  Prism.languages.autohotkey = {\n    comment: [\n      {\n        pattern: /(^|\\s);.*/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^[\\t ]*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    tag: {\n      // labels\n      pattern: /^([ \\t]*)[^\\s,`\":]+(?=:[ \\t]*$)/m,\n      lookbehind: true\n    },\n    string: /\"(?:[^\"\\n\\r]|\"\")*\"/,\n    variable: /%\\w+%/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator:\n      /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    command: {\n      pattern:\n        /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n      alias: 'selector'\n    },\n    constant:\n      /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\\b/i,\n    builtin:\n      /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\\b/i,\n    symbol:\n      /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n    directive: {\n      pattern: /#[a-z]+\\b/i,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\n    function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+(?=\\()/,\n    punctuation: /[{}[\\]():,]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nautoit.displayName = 'autoit'\nautoit.aliases = []\n\n/** @type {Syntax} */\nexport default function autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern:\n          /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^[\\t ]*)#[\\w-]+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword:\n      /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\navisynth.displayName = 'avisynth'\navisynth.aliases = ['avs']\n\n/** @type {Syntax} */\nexport default function avisynth(Prism) {\n  // http://avisynth.nl/index.php/The_full_AviSynth_grammar\n  ;(function (Prism) {\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return replacements[+index]\n      })\n    }\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    var types = /bool|clip|float|int|string|val/.source\n    var internals = [\n      // bools\n      /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/\n        .source,\n      // control\n      /apply|assert|default|eval|import|nop|select|undefined/.source,\n      // global\n      /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/\n        .source,\n      // conv\n      /hex(?:value)?|value/.source,\n      // numeric\n      /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/\n        .source,\n      // trig\n      /a?sinh?|a?cosh?|a?tan[2h]?/.source,\n      // bit\n      /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/\n        .source,\n      // runtime\n      /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/\n        .source,\n      // script\n      /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/\n        .source,\n      // string\n      /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/\n        .source,\n      // version\n      /isversionorgreater|version(?:number|string)/.source,\n      // helper\n      /buildpixeltype|colorspacenametopixeltype/.source,\n      // avsplus\n      /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source\n    ].join('|')\n    var properties = [\n      // content\n      /has(?:audio|video)/.source,\n      // resolution\n      /height|width/.source,\n      // framerate\n      /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,\n      // interlacing\n      /getparity|is(?:field|frame)based/.source,\n      // color format\n      /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/\n        .source,\n      // audio\n      /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/\n        .source\n    ].join('|')\n    var filters = [\n      // source\n      /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/\n        .source,\n      // color\n      /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/\n        .source,\n      // overlay\n      /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,\n      // geometry\n      /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/\n        .source,\n      // pixel\n      /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/\n        .source,\n      // timeline\n      /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/\n        .source,\n      // interlace\n      /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/\n        .source,\n      // audio\n      /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/\n        .source,\n      // conditional\n      /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/\n        .source,\n      // export\n      /imagewriter/.source,\n      // debug\n      /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/\n        .source\n    ].join('|')\n    var allinternals = [internals, properties, filters].join('|')\n    Prism.languages.avisynth = {\n      comment: [\n        {\n          // Matches [* *] nestable block comments, but only supports 1 level of nested comments\n          // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\n          pattern:\n            /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches /* */ block comments\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches # comments\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // Handle before strings because optional arguments are surrounded by double quotes\n      argument: {\n        pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [types], 'i'),\n        inside: {\n          keyword: /^\\w+/\n        }\n      },\n      // Optional argument assignment\n      'argument-label': {\n        pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\n        lookbehind: true,\n        inside: {\n          'argument-name': {\n            pattern: /^\\w+/,\n            alias: 'punctuation'\n          },\n          punctuation: /=$/\n        }\n      },\n      string: [\n        {\n          // triple double-quoted\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true\n        },\n        {\n          // single double-quoted\n          pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            constant: {\n              // These *are* case-sensitive!\n              pattern:\n                /\\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\\b/\n            }\n          }\n        }\n      ],\n      // The special \"last\" variable that takes the value of the last implicitly returned clip\n      variable: /\\b(?:last)\\b/i,\n      boolean: /\\b(?:false|no|true|yes)\\b/i,\n      keyword:\n        /\\b(?:catch|else|for|function|global|if|return|try|while|__END__)\\b/i,\n      constant: /\\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\\b/,\n      // AviSynth's internal functions, filters, and properties\n      'builtin-function': {\n        pattern: re(/\\b(?:<<0>>)\\b/.source, [allinternals], 'i'),\n        alias: 'function'\n      },\n      'type-cast': {\n        pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [types], 'i'),\n        alias: 'keyword'\n      },\n      // External/user-defined filters\n      function: {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\n        lookbehind: true\n      },\n      // Matches a \\ as the first or last character on a line\n      'line-continuation': {\n        pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      number:\n        /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\n      operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\n      punctuation: /[{}\\[\\]();,.]/\n    }\n    Prism.languages.avs = Prism.languages.avisynth\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\navroIdl.displayName = 'avro-idl'\navroIdl.aliases = ['avdl']\n\n/** @type {Syntax} */\nexport default function avroIdl(Prism) {\n  // GitHub: https://github.com/apache/avro\n  // Docs: https://avro.apache.org/docs/current/idl.html\n\n  Prism.languages['avro-idl'] = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    annotation: {\n      pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n      greedy: true,\n      alias: 'function'\n    },\n    'function-identifier': {\n      pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n      greedy: true,\n      alias: 'function'\n    },\n    identifier: {\n      pattern: /`[^\\r\\n`]+`/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n        lookbehind: true\n      },\n      /-?\\b(?:Infinity|NaN)\\b/\n    ],\n    operator: /=/,\n    punctuation: /[()\\[\\]{}<>.:,;-]/\n  }\n  Prism.languages.avdl = Prism.languages['avro-idl']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nawk.displayName = 'awk'\nawk.aliases = ['gawk']\n\n/** @type {Syntax} */\nexport default function awk(Prism) {\n  Prism.languages.awk = {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    regex: {\n      pattern: /((?:^|[^\\w\\s)])\\s*)\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\//,\n      lookbehind: true,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    keyword:\n      /\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\b|@(?:include|load)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[a-fA-F0-9]+)\\b/,\n    operator: /--|\\+\\+|!?~|>&|>>|<<|(?:\\*\\*|[<>!=+\\-*/%^])=?|&&|\\|[|&]|[?:]/,\n    punctuation: /[()[\\]{},;]/\n  }\n  Prism.languages.gawk = Prism.languages.awk\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbatch.displayName = 'batch'\nbatch.aliases = []\n\n/** @type {Syntax} */\nexport default function batch(Prism) {\n  ;(function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    }\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/\n    var number = /(?:\\b|-)\\d+\\b/\n    Prism.languages.batch = {\n      comment: [\n        /^::.*/m,\n        {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }\n      ],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [\n        {\n          // FOR command\n          pattern:\n            /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /\\b(?:do|in)\\b|^for\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // IF command\n          pattern:\n            /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n          }\n        },\n        {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        },\n        {\n          // SET command\n          pattern:\n            /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // Other commands\n          pattern:\n            /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }\n      ],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbbcode.displayName = 'bbcode'\nbbcode.aliases = ['shortcode']\n\n/** @type {Syntax} */\nexport default function bbcode(Prism) {\n  Prism.languages.bbcode = {\n    tag: {\n      pattern:\n        /\\[\\/?[^\\s=\\]]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))?(?:\\s+[^\\s=\\]]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))*\\s*\\]/,\n      inside: {\n        tag: {\n          pattern: /^\\[\\/?[^\\s=\\]]+/,\n          inside: {\n            punctuation: /^\\[\\/?/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+)/,\n          inside: {\n            punctuation: [\n              /^=/,\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\]/,\n        'attr-name': /[^\\s=\\]]+/\n      }\n    }\n  }\n  Prism.languages.shortcode = Prism.languages.bbcode\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbbj.displayName = 'bbj'\nbbj.aliases = []\n\n/** @type {Syntax} */\nexport default function bbj(Prism) {\n  ;(function (Prism) {\n    Prism.languages.bbj = {\n      comment: {\n        pattern: /(^|[^\\\\:])rem\\s+.*/i,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        pattern: /(['\"])(?:(?!\\1|\\\\).|\\\\.)*\\1/,\n        greedy: true\n      },\n      number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n      keyword:\n        /\\b(?:abstract|all|argc|begin|bye|callback|case|chn|class|classend|ctl|day|declare|delete|dim|dom|dread|dsz|else|end|endif|err|exitto|extends|fi|field|for|from|gosub|goto|if|implements|interface|interfaceend|iol|iolist|let|list|load|method|methodend|methodret|on|opts|pfx|print|private|process_events|protected|psz|public|read|read_resource|release|remove_callback|repeat|restore|return|rev|seterr|setesc|sqlchn|sqlunt|ssn|start|static|swend|switch|sys|then|tim|unt|until|use|void|wend|where|while)\\b/i,\n      function: /\\b\\w+(?=\\()/,\n      boolean: /\\b(?:BBjAPI\\.TRUE|BBjAPI\\.FALSE)\\b/i,\n      operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:and|not|or|xor)\\b/i,\n      punctuation: /[.,;:()]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbicep.displayName = 'bicep'\nbicep.aliases = []\n\n/** @type {Syntax} */\nexport default function bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [\n      {\n        // multiline comments eg /* ASDF */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        // singleline comments eg // ASDF\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    property: [\n      {\n        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n        lookbehind: true\n      },\n      {\n        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /'''[^'][\\s\\S]*?'''/,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword:\n      /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.bicep\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nbirb.displayName = 'birb'\nbirb.aliases = []\n\n/** @type {Syntax} */\nexport default function birb(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/,\n      // matches variable and function return types (parameters as well).\n      /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\n    ],\n    keyword:\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  })\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorC from './c.js'\nbison.displayName = 'bison'\nbison.aliases = []\n\n/** @type {Syntax} */\nexport default function bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbnf.displayName = 'bnf'\nbnf.aliases = ['rbnf']\n\n/** @type {Syntax} */\nexport default function bnf(Prism) {\n  Prism.languages.bnf = {\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n    },\n    definition: {\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n      alias: ['rule', 'keyword'],\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    rule: {\n      pattern: /<[^<>\\r\\n\\t]+>/,\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n  }\n  Prism.languages.rbnf = Prism.languages.bnf\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbqn.displayName = 'bqn'\nbqn.aliases = []\n\n/** @type {Syntax} */\nexport default function bqn(Prism) {\n  Prism.languages.bqn = {\n    shebang: {\n      pattern: /^#![ \\t]*\\/.*/,\n      alias: 'important',\n      greedy: true\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /\"(?:[^\"]|\"\")*\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'character-literal': {\n      pattern: /'(?:[\\s\\S]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])'/,\n      greedy: true,\n      alias: 'char'\n    },\n    function: /•[\\w¯.∞π]+[\\w¯.∞π]*/,\n    'dot-notation-on-brackets': {\n      pattern: /\\{(?=.*\\}\\.)|\\}\\./,\n      alias: 'namespace'\n    },\n    'special-name': {\n      pattern: /(?:𝕨|𝕩|𝕗|𝕘|𝕤|𝕣|𝕎|𝕏|𝔽|𝔾|𝕊|_𝕣_|_𝕣)/,\n      alias: 'keyword'\n    },\n    'dot-notation-on-name': {\n      pattern: /[A-Za-z_][\\w¯∞π]*\\./,\n      alias: 'namespace'\n    },\n    'word-number-scientific': {\n      pattern: /\\d+(?:\\.\\d+)?[eE]¯?\\d+/,\n      alias: 'number'\n    },\n    'word-name': {\n      pattern: /[A-Za-z_][\\w¯∞π]*/,\n      alias: 'symbol'\n    },\n    'word-number': {\n      pattern:\n        /[¯∞π]?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π))?/,\n      alias: 'number'\n    },\n    'null-literal': {\n      pattern: /@/,\n      alias: 'char'\n    },\n    'primitive-functions': {\n      pattern: /[-+×÷⋆√⌊⌈|¬∧∨<>≠=≤≥≡≢⊣⊢⥊∾≍⋈↑↓↕«»⌽⍉/⍋⍒⊏⊑⊐⊒∊⍷⊔!]/,\n      alias: 'operator'\n    },\n    'primitive-1-operators': {\n      pattern: /[`˜˘¨⁼⌜´˝˙]/,\n      alias: 'operator'\n    },\n    'primitive-2-operators': {\n      pattern: /[∘⊸⟜○⌾⎉⚇⍟⊘◶⎊]/,\n      alias: 'operator'\n    },\n    punctuation: /[←⇐↩(){}⟨⟩[\\]‿·⋄,.;:?]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbrainfuck.displayName = 'brainfuck'\nbrainfuck.aliases = []\n\n/** @type {Syntax} */\nexport default function brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbrightscript.displayName = 'brightscript'\nbrightscript.aliases = []\n\n/** @type {Syntax} */\nexport default function brightscript(Prism) {\n  Prism.languages.brightscript = {\n    comment: /(?:\\brem|').*/i,\n    'directive-statement': {\n      pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        'error-message': {\n          pattern: /(^#error).+/,\n          lookbehind: true\n        },\n        directive: {\n          pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n          alias: 'keyword'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n    property: {\n      pattern:\n        /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\bAs[\\t ]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\n    number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n    operator:\n      /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n    punctuation: /[.,;()[\\]{}]/,\n    constant: /\\b(?:LINE_NUM)\\b/i\n  }\n  Prism.languages.brightscript['directive-statement'].inside.expression.inside =\n    Prism.languages.brightscript\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbro.displayName = 'bro'\nbro.aliases = []\n\n/** @type {Syntax} */\nexport default function bro(Prism) {\n  Prism.languages.bro = {\n    comment: {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      inside: {\n        italic: /\\b(?:FIXME|TODO|XXX)\\b/\n      }\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    boolean: /\\b[TF]\\b/,\n    function: {\n      pattern: /(\\b(?:event|function|hook)[ \\t]+)\\w+(?:::\\w+)?/,\n      lookbehind: true\n    },\n    builtin:\n      /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,\n    constant: {\n      pattern: /(\\bconst[ \\t]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\\b/,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbsl.displayName = 'bsl'\nbsl.aliases = ['oscript']\n\n/** @type {Syntax} */\nexport default function bsl(Prism) {\n  /* eslint-disable no-misleading-character-class */\n\n  // 1C:Enterprise\n  // https://github.com/Diversus23/\n  //\n  Prism.languages.bsl = {\n    comment: /\\/\\/.*/,\n    string: [\n      // Строки\n      // Strings\n      {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      // Дата и время\n      // Date & time\n      {\n        pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\n      }\n    ],\n    keyword: [\n      {\n        // RU\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      },\n      {\n        // EN\n        pattern:\n          /\\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\\b/i\n      }\n    ],\n    number: {\n      pattern:\n        /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\n      lookbehind: true\n    },\n    operator: [\n      /[<>+\\-*/]=?|[%=]/,\n      // RU\n      {\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      },\n      // EN\n      {\n        pattern: /\\b(?:and|not|or)\\b/i\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\n    directive: [\n      // Теги препроцессора вида &Клиент, &Сервер, ...\n      // Preprocessor tags of the type &Client, &Server, ...\n      {\n        pattern: /^([ \\t]*)&.*/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      },\n      // Инструкции препроцессора вида:\n      // #Если Сервер Тогда\n      // ...\n      // #КонецЕсли\n      // Preprocessor instructions of the form:\n      // #If Server Then\n      // ...\n      // #EndIf\n      {\n        pattern: /^([ \\t]*)#.*/gm,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      }\n    ]\n  }\n  Prism.languages.oscript = Prism.languages['bsl']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\ncfscript.displayName = 'cfscript'\ncfscript.aliases = ['cfc']\n\n/** @type {Syntax} */\nexport default function cfscript(Prism) {\n  Prism.register(refractorClike)\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        inside: {\n          annotation: {\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|:/,\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n    ],\n    scope: {\n      pattern:\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern:\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  })\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern:\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  })\n  delete Prism.languages.cfscript['class-name']\n  Prism.languages.cfc = Prism.languages['cfscript']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nimport refractorCpp from './cpp.js'\nchaiscript.displayName = 'chaiscript'\nchaiscript.aliases = []\n\n/** @type {Syntax} */\nexport default function chaiscript(Prism) {\n  Prism.register(refractorClike)\n  Prism.register(refractorCpp)\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [\n      {\n        // e.g. class Rectangle { ... }\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      {\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n        lookbehind: true\n      }\n    ],\n    keyword:\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\n    operator:\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n  })\n  Prism.languages.insertBefore('chaiscript', 'operator', {\n    'parameter-type': {\n      // e.g. def foo(int x, Vector y) {...}\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n      lookbehind: true,\n      alias: 'class-name'\n    }\n  })\n  Prism.languages.insertBefore('chaiscript', 'string', {\n    'string-interpolation': {\n      pattern:\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-expression': {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              inside: Prism.languages.chaiscript\n            },\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ncil.displayName = 'cil'\ncil.aliases = []\n\n/** @type {Syntax} */\nexport default function cil(Prism) {\n  Prism.languages.cil = {\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    directive: {\n      pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    // Actually an assembly reference\n    variable: /\\[[\\w\\.]+\\]/,\n    keyword:\n      /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n    function:\n      /\\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.\\d+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.\\d+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|castclass|ldvirtftn|beq(?:\\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b-?(?:0x[0-9a-f]+|\\d+)(?:\\.[0-9a-f]+)?\\b/i,\n    punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorC from './c.js'\ncilkc.displayName = 'cilkc'\ncilkc.aliases = ['cilk-c']\n\n/** @type {Syntax} */\nexport default function cilkc(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.cilkc = Prism.languages.insertBefore('c', 'function', {\n    'parallel-keyword': {\n      pattern: /\\bcilk_(?:for|reducer|s(?:cope|pawn|ync))\\b/,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages['cilk-c'] = Prism.languages['cilkc']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorCpp from './cpp.js'\ncilkcpp.displayName = 'cilkcpp'\ncilkcpp.aliases = ['cilk', 'cilk-cpp']\n\n/** @type {Syntax} */\nexport default function cilkcpp(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.cilkcpp = Prism.languages.insertBefore('cpp', 'function', {\n    'parallel-keyword': {\n      pattern: /\\bcilk_(?:for|reducer|s(?:cope|pawn|ync))\\b/,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages['cilk-cpp'] = Prism.languages['cilkcpp']\n  Prism.languages['cilk'] = Prism.languages['cilkcpp']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nclojure.displayName = 'clojure'\nclojure.aliases = []\n\n/** @type {Syntax} */\nexport default function clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true\n    },\n    char: /\\\\\\w+/,\n    symbol: {\n      pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\n      lookbehind: true\n    },\n    keyword: {\n      pattern:\n        /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: {\n      pattern:\n        /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\n      lookbehind: true\n    },\n    function: {\n      pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    operator: /[#@^`~]/,\n    punctuation: /[{}\\[\\](),]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ncmake.displayName = 'cmake'\ncmake.aliases = []\n\n/** @type {Syntax} */\nexport default function cmake(Prism) {\n  Prism.languages.cmake = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\n          inside: {\n            punctuation: /\\$\\{|\\}/,\n            variable: /\\w+/\n          }\n        }\n      }\n    },\n    variable:\n      /\\b(?:CMAKE_\\w+|\\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_NAME|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE))\\b/,\n    property:\n      /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n    keyword:\n      /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n    boolean: /\\b(?:FALSE|OFF|ON|TRUE)\\b/,\n    namespace:\n      /\\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\\b/,\n    operator:\n      /\\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\\b/,\n    inserted: {\n      pattern: /\\b\\w+::\\w+\\b/,\n      alias: 'class-name'\n    },\n    number: /\\b\\d+(?:\\.\\d+)*\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n    punctuation: /[()>}]|\\$[<{]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ncobol.displayName = 'cobol'\ncobol.aliases = []\n\n/** @type {Syntax} */\nexport default function cobol(Prism) {\n  Prism.languages.cobol = {\n    comment: {\n      pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n      greedy: true\n    },\n    level: {\n      pattern: /(^[ \\t]*)\\d+\\b/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'number'\n    },\n    'class-name': {\n      // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n      pattern:\n        /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n      lookbehind: true,\n      inside: {\n        number: {\n          pattern: /(\\()\\d+/,\n          lookbehind: true\n        },\n        punctuation: /[()]/\n      }\n    },\n    keyword: {\n      pattern:\n        /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\\w-])/i,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n      lookbehind: true\n    },\n    operator: [\n      /<>|[<>]=?|[=+*/&]/,\n      {\n        pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[.:,()]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\n\n/** @type {Syntax} */\nexport default function coffeescript(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword:\n        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          script: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-javascript',\n            inside: Prism.languages.javascript\n          }\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nconcurnas.displayName = 'concurnas'\nconcurnas.aliases = ['conc']\n\n/** @type {Syntax} */\nexport default function concurnas(Prism) {\n  Prism.languages.concurnas = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    langext: {\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n      greedy: true,\n      inside: {\n        'class-name': /^\\w+/,\n        string: {\n          pattern: /(^\\s*\\|\\|)[\\s\\S]+(?=\\|\\|$)/,\n          lookbehind: true\n        },\n        punctuation: /\\|\\|/\n      }\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n    punctuation: /[{}[\\];(),.:]/,\n    operator:\n      /<==|>==|=>|->|<-|<>|&==|&<>|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|[!^~]|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n    annotation: {\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n      alias: 'builtin'\n    }\n  }\n  Prism.languages.insertBefore('concurnas', 'langext', {\n    'regex-literal': {\n      pattern: /\\br(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        regex: /[\\s\\S]+/\n      }\n    },\n    'string-literal': {\n      pattern: /(?:\\B|\\bs)(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.conc = Prism.languages.concurnas\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ncsp.displayName = 'csp'\ncsp.aliases = []\n\n/** @type {Syntax} */\nexport default function csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - https://www.w3.org/TR/CSP1/\n   *  - https://www.w3.org/TR/CSP2/\n   *  - https://www.w3.org/TR/CSP3/\n   */\n\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @returns {RegExp}\n     */\n    function value(source) {\n      return RegExp(\n        /([ \\t])/.source + '(?:' + source + ')' + /(?=[\\s;]|$)/.source,\n        'i'\n      )\n    }\n    Prism.languages.csp = {\n      directive: {\n        pattern:\n          /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\n        lookbehind: true,\n        alias: 'property'\n      },\n      scheme: {\n        pattern: value(/[a-z][a-z0-9.+-]*:/.source),\n        lookbehind: true\n      },\n      none: {\n        pattern: value(/'none'/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      nonce: {\n        pattern: value(/'nonce-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      hash: {\n        pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      host: {\n        pattern: value(\n          /[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source +\n            '|' +\n            /\\*[^\\s;,']*/.source +\n            '|' +\n            /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source\n        ),\n        lookbehind: true,\n        alias: 'url',\n        inside: {\n          important: /\\*/\n        }\n      },\n      keyword: [\n        {\n          pattern: value(/'unsafe-[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'unsafe'\n        },\n        {\n          pattern: value(/'[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'safe'\n        }\n      ],\n      punctuation: /;/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ncooklang.displayName = 'cooklang'\ncooklang.aliases = []\n\n/** @type {Syntax} */\nexport default function cooklang(Prism) {\n  ;(function (Prism) {\n    // see https://github.com/cooklang/spec/blob/main/EBNF.md\n\n    var single_token_suffix = /(?:(?!\\s)[\\d$+<=a-zA-Z\\x80-\\uFFFF])+/.source\n    var multi_token_infix = /[^{}@#]+/.source\n    var multi_token_suffix = /\\{[^}#@]*\\}/.source\n    var multi_token = multi_token_infix + multi_token_suffix\n    var timer_units = /(?:h|hours|hrs|m|min|minutes)/.source\n    var amount_group_impl = {\n      pattern: /\\{[^{}]*\\}/,\n      inside: {\n        amount: {\n          pattern: /([\\{|])[^{}|*%]+/,\n          lookbehind: true,\n          alias: 'number'\n        },\n        unit: {\n          pattern: /(%)[^}]+/,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        'servings-scaler': {\n          pattern: /\\*/,\n          alias: 'operator'\n        },\n        'servings-alternative-separator': {\n          pattern: /\\|/,\n          alias: 'operator'\n        },\n        'unit-separator': {\n          pattern: /(?:%|(\\*)%)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        punctuation: /[{}]/\n      }\n    }\n    Prism.languages.cooklang = {\n      comment: {\n        // [- comment -]\n        // -- comment\n        pattern: /\\[-[\\s\\S]*?-\\]|--.*/,\n        greedy: true\n      },\n      meta: {\n        // >> key: value\n        pattern: />>.*:.*/,\n        inside: {\n          property: {\n            // key:\n            pattern: /(>>\\s*)[^\\s:](?:[^:]*[^\\s:])?/,\n            lookbehind: true\n          }\n        }\n      },\n      'cookware-group': {\n        // #...{...}, #...\n        pattern: new RegExp(\n          '#(?:' + multi_token + '|' + single_token_suffix + ')'\n        ),\n        inside: {\n          cookware: {\n            pattern: new RegExp('(^#)(?:' + multi_token_infix + ')'),\n            lookbehind: true,\n            alias: 'variable'\n          },\n          'cookware-keyword': {\n            pattern: /^#/,\n            alias: 'keyword'\n          },\n          'quantity-group': {\n            pattern: new RegExp(/\\{[^{}@#]*\\}/),\n            inside: {\n              quantity: {\n                pattern: new RegExp(/(^\\{)/.source + multi_token_infix),\n                lookbehind: true,\n                alias: 'number'\n              },\n              punctuation: /[{}]/\n            }\n          }\n        }\n      },\n      'ingredient-group': {\n        // @...{...}, @...\n        pattern: new RegExp(\n          '@(?:' + multi_token + '|' + single_token_suffix + ')'\n        ),\n        inside: {\n          ingredient: {\n            pattern: new RegExp('(^@)(?:' + multi_token_infix + ')'),\n            lookbehind: true,\n            alias: 'variable'\n          },\n          'ingredient-keyword': {\n            pattern: /^@/,\n            alias: 'keyword'\n          },\n          'amount-group': amount_group_impl\n        }\n      },\n      'timer-group': {\n        // ~timer{...}\n        // eslint-disable-next-line regexp/sort-alternatives\n        pattern: /~(?!\\s)[^@#~{}]*\\{[^{}]*\\}/,\n        inside: {\n          timer: {\n            pattern: /(^~)[^{]+/,\n            lookbehind: true,\n            alias: 'variable'\n          },\n          'duration-group': {\n            // {...}\n            pattern: /\\{[^{}]*\\}/,\n            inside: {\n              punctuation: /[{}]/,\n              unit: {\n                pattern: new RegExp(\n                  /(%\\s*)/.source + timer_units + /\\b/.source\n                ),\n                lookbehind: true,\n                alias: 'symbol'\n              },\n              operator: /%/,\n              duration: {\n                pattern: /\\d+/,\n                alias: 'number'\n              }\n            }\n          },\n          'timer-keyword': {\n            pattern: /^~/,\n            alias: 'keyword'\n          }\n        }\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ncoq.displayName = 'coq'\ncoq.aliases = []\n\n/** @type {Syntax} */\nexport default function coq(Prism) {\n  ;(function (Prism) {\n    // https://github.com/coq/coq\n\n    var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source\n    for (var i = 0; i < 2; i++) {\n      commentSource = commentSource.replace(/<self>/g, function () {\n        return commentSource\n      })\n    }\n    commentSource = commentSource.replace(/<self>/g, '[]')\n    Prism.languages.coq = {\n      comment: RegExp(commentSource),\n      string: {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      attribute: [\n        {\n          pattern: RegExp(\n            /#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(\n              /<comment>/g,\n              function () {\n                return commentSource\n              }\n            )\n          ),\n          greedy: true,\n          alias: 'attr-name',\n          inside: {\n            comment: RegExp(commentSource),\n            string: {\n              pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n              greedy: true\n            },\n            operator: /=/,\n            punctuation: /^#\\[|\\]$|[,()]/\n          }\n        },\n        {\n          pattern:\n            /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n          alias: 'attr-name'\n        }\n      ],\n      keyword:\n        /\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\n      number:\n        /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n      punct: {\n        pattern: /@\\{|\\{\\||\\[=|:>/,\n        alias: 'punctuation'\n      },\n      operator:\n        /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n      punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorRuby from './ruby.js'\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\n\n/** @type {Syntax} */\nexport default function crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n      operator: [/->/, Prism.languages.ruby.operator],\n      punctuation: /[(){}[\\].,;\\\\]/\n    })\n    Prism.languages.insertBefore('crystal', 'string-literal', {\n      attribute: {\n        pattern: /@\\[.*?\\]/,\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          attribute: {\n            pattern: /^(\\s*)\\w+/,\n            lookbehind: true,\n            alias: 'class-name'\n          },\n          args: {\n            pattern: /\\S(?:[\\s\\S]*\\S)?/,\n            inside: Prism.languages.crystal\n          }\n        }\n      },\n      expansion: {\n        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n        inside: {\n          content: {\n            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n            lookbehind: true,\n            inside: Prism.languages.crystal\n          },\n          delimiter: {\n            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n            alias: 'operator'\n          }\n        }\n      },\n      char: {\n        pattern:\n          /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorCss from './css.js'\ncssExtras.displayName = 'css-extras'\ncssExtras.aliases = []\n\n/** @type {Syntax} */\nexport default function cssExtras(Prism) {\n  Prism.register(refractorCss)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: (selectorInside = {\n        'pseudo-element':\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [\n              string,\n              {\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n\n        punctuation: /[(),]/\n      })\n    }\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n      selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    }\n    // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        {\n          pattern:\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ncsv.displayName = 'csv'\ncsv.aliases = []\n\n/** @type {Syntax} */\nexport default function csv(Prism) {\n  // https://tools.ietf.org/html/rfc4180\n\n  Prism.languages.csv = {\n    value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n    punctuation: /,/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ncue.displayName = 'cue'\ncue.aliases = []\n\n/** @type {Syntax} */\nexport default function cue(Prism) {\n  ;(function (Prism) {\n    // https://cuelang.org/docs/references/spec/\n\n    // eslint-disable-next-line regexp/strict\n    var stringEscape = /\\\\(?:(?!\\2)|\\2(?:[^()\\r\\n]|\\([^()]*\\)))/.source\n    // eslint-disable-next-line regexp/strict\n    var stringTypes =\n      /\"\"\"(?:[^\\\\\"]|\"(?!\"\"\\2)|<esc>)*\"\"\"/.source +\n      // eslint-disable-next-line regexp/strict\n      '|' +\n      /'''(?:[^\\\\']|'(?!''\\2)|<esc>)*'''/.source +\n      // eslint-disable-next-line regexp/strict\n      '|' +\n      /\"(?:[^\\\\\\r\\n\"]|\"(?!\\2)|<esc>)*\"/.source +\n      // eslint-disable-next-line regexp/strict\n      '|' +\n      /'(?:[^\\\\\\r\\n']|'(?!\\2)|<esc>)*'/.source\n    var stringLiteral =\n      '(?:' + stringTypes.replace(/<esc>/g, stringEscape) + ')'\n    Prism.languages.cue = {\n      comment: {\n        pattern: /\\/\\/.*/,\n        greedy: true\n      },\n      'string-literal': {\n        // eslint-disable-next-line regexp/strict\n        pattern: RegExp(\n          /(^|[^#\"'\\\\])(#*)/.source + stringLiteral + /(?![\"'])\\2/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // I'm using dirty hack here. We have to know the number hashes at the start of the string somehow,\n          // but we can't look back. So instead, we will use a lookahead, go to the end of the string, and\n          // capture the hashes at the end of the string.\n          escape: {\n            pattern:\n              /(?=[\\s\\S]*[\"'](#*)$)\\\\\\1(?:U[a-fA-F0-9]{1,8}|u[a-fA-F0-9]{1,4}|x[a-fA-F0-9]{1,2}|\\d{2,3}|[^(])/,\n            greedy: true,\n            alias: 'string'\n          },\n          interpolation: {\n            pattern: /(?=[\\s\\S]*[\"'](#*)$)\\\\\\1\\([^()]*\\)/,\n            greedy: true,\n            inside: {\n              punctuation: /^\\\\#*\\(|\\)$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                inside: null\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      keyword: {\n        pattern: /(^|[^\\w$])(?:for|if|import|in|let|null|package)(?![\\w$])/,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^\\w$])(?:false|true)(?![\\w$])/,\n        lookbehind: true\n      },\n      builtin: {\n        pattern:\n          /(^|[^\\w$])(?:bool|bytes|float|float(?:32|64)|u?int(?:8|16|32|64|128)?|number|rune|string)(?![\\w$])/,\n        lookbehind: true\n      },\n      attribute: {\n        pattern: /@[\\w$]+(?=\\s*\\()/,\n        alias: 'function'\n      },\n      function: {\n        pattern: /(^|[^\\w$])[a-z_$][\\w$]*(?=\\s*\\()/i,\n        lookbehind: true\n      },\n      number: {\n        pattern:\n          /(^|[^\\w$.])(?:0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|0[xX][0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*|(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[eE][+-]?\\d+(?:_\\d+)*)?(?:[KMGTP]i?)?)(?![\\w$])/,\n        lookbehind: true\n      },\n      operator: /\\.{3}|_\\|_|&&?|\\|\\|?|[=!]~|[<>=!]=?|[+\\-*/?]/,\n      punctuation: /[()[\\]{},.:]/\n    }\n    Prism.languages.cue[\n      'string-literal'\n    ].inside.interpolation.inside.expression.inside = Prism.languages.cue\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ncypher.displayName = 'cypher'\ncypher.aliases = []\n\n/** @type {Syntax} */\nexport default function cypher(Prism) {\n  Prism.languages.cypher = {\n    // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\n      lookbehind: true,\n      greedy: true\n    },\n    relationship: {\n      pattern:\n        /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    identifier: {\n      pattern: /`(?:[^`\\\\\\r\\n])*`/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\n    keyword:\n      /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\n    function: /\\b\\w+\\b(?=\\s*\\()/,\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\n    operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\n    punctuation: /[()[\\]{},;.]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nd.displayName = 'd'\nd.aliases = []\n\n/** @type {Syntax} */\nexport default function d(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.d = Prism.languages.extend('clike', {\n    comment: [\n      {\n        // Shebang\n        pattern: /^\\s*#!.+/,\n        greedy: true\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\\\\])/.source +\n            '(?:' +\n            [\n              // /+ comment +/\n              // Allow one level of nesting\n              /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source,\n              // // comment\n              /\\/\\/.*/.source,\n              // /* comment */\n              /\\/\\*[\\s\\S]*?\\*\\//.source\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: RegExp(\n          [\n            // r\"\", x\"\"\n            /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source,\n            // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n            /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source,\n            // q\"IDENT\n            // ...\n            // IDENT\"\n            /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source,\n            // q\"//\", q\"||\", etc.\n            // eslint-disable-next-line regexp/strict\n            /\\bq\"(.)[\\s\\S]*?\\2\"/.source,\n            // eslint-disable-next-line regexp/strict\n            /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n          ].join('|'),\n          'm'\n        ),\n        greedy: true\n      },\n      {\n        pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n        greedy: true,\n        alias: 'token-string'\n      }\n    ],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword:\n      /\\$|\\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\\b/,\n    number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n      {\n        pattern:\n          /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n        lookbehind: true\n      }\n    ],\n    operator:\n      /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  })\n  Prism.languages.insertBefore('d', 'string', {\n    // Characters\n    // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n    char: /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/\n  })\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  })\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern:\n        /\\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\ndart.displayName = 'dart'\ndart.aliases = []\n\n/** @type {Syntax} */\nexport default function dart(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var keywords = [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ]\n\n    // Handles named imports, such as http.Client\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source\n\n    // based on the dart naming conventions\n    var className = {\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      }\n    }\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      operator:\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    })\n    Prism.languages.insertBefore('dart', 'string', {\n      'string-literal': {\n        pattern:\n          /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\$\\{?|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.dart\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      string: undefined\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ndataweave.displayName = 'dataweave'\ndataweave.aliases = []\n\n/** @type {Syntax} */\nexport default function dataweave(Prism) {\n  ;(function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type':\n        /\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,\n      function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n      boolean: /\\b(?:false|true)\\b/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ndax.displayName = 'dax'\ndax.aliases = []\n\n/** @type {Syntax} */\nexport default function dax(Prism) {\n  Prism.languages.dax = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\n      lookbehind: true\n    },\n    'data-field': {\n      pattern:\n        /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'symbol'\n    },\n    measure: {\n      pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'constant'\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    function:\n      /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\n    keyword:\n      /\\b(?:DEFINE|EVALUATE|MEASURE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\n    boolean: {\n      pattern: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n      alias: 'constant'\n    },\n    number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/,\n    operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\n    punctuation: /[;\\[\\](){}`,.]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ndhall.displayName = 'dhall'\ndhall.aliases = []\n\n/** @type {Syntax} */\nexport default function dhall(Prism) {\n  // ABNF grammar:\n  // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n\n  Prism.languages.dhall = {\n    // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n    // The multi-line pattern is essentially this:\n    //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n    comment:\n      /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              alias: 'language-dhall',\n              inside: null // see blow\n            },\n            punctuation: /\\$\\{|\\}/\n          }\n        }\n      }\n    },\n    label: {\n      pattern: /`[^`]*`/,\n      greedy: true\n    },\n    url: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n      pattern:\n        /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n      greedy: true\n    },\n    env: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n      pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n      greedy: true,\n      inside: {\n        function: /^env/,\n        operator: /^:/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    hash: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n      pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n      inside: {\n        function: /sha256/,\n        operator: /:/,\n        number: /[\\da-fA-F]{64}/\n      }\n    },\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n    keyword:\n      /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n    builtin: /\\b(?:None|Some)\\b/,\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n    operator:\n      /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n    punctuation: /\\.\\.|[{}\\[\\](),./]/,\n    // we'll just assume that every capital word left is a type name\n    'class-name': /\\b[A-Z]\\w*\\b/\n  }\n  Prism.languages.dhall.string.inside.interpolation.inside.expression.inside =\n    Prism.languages.dhall\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkupTemplating from './markup-templating.js'\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\n\n/** @type {Syntax} */\nexport default function django(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n\n  ;(function (Prism) {\n    Prism.languages.django = {\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\n      tag: {\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      delimiter: {\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n        alias: 'punctuation'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      filter: {\n        pattern: /(\\|)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      test: {\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n      keyword:\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\n      variable: /\\b\\w+\\b/,\n      punctuation: /[{}[\\](),.:;]/\n    }\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\n    var markupTemplating = Prism.languages['markup-templating']\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'django')\n    })\n\n    // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ndnsZoneFile.displayName = 'dns-zone-file'\ndnsZoneFile.aliases = ['dns-zone']\n\n/** @type {Syntax} */\nexport default function dnsZoneFile(Prism) {\n  Prism.languages['dns-zone-file'] = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|\\s)@(?=\\s|$)/,\n        lookbehind: true\n      }\n    ],\n    keyword: /^\\$(?:INCLUDE|ORIGIN|TTL)(?=\\s|$)/m,\n    class: {\n      // https://tools.ietf.org/html/rfc1035#page-13\n      pattern: /(^|\\s)(?:CH|CS|HS|IN)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n      pattern:\n        /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    punctuation: /[()]/\n  }\n  Prism.languages['dns-zone'] = Prism.languages['dns-zone-file']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ndocker.displayName = 'docker'\ndocker.aliases = ['dockerfile']\n\n/** @type {Syntax} */\nexport default function docker(Prism) {\n  ;(function (Prism) {\n    // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n    // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n\n    var spaceAfterBackSlash =\n      /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source\n    // At least one space, comment, or line break\n    var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\n      /<SP_BS>/g,\n      function () {\n        return spaceAfterBackSlash\n      }\n    )\n    var string =\n      /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/\n        .source\n    var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\n      /<STR>/g,\n      function () {\n        return string\n      }\n    )\n    var stringRule = {\n      pattern: RegExp(string),\n      greedy: true\n    }\n    var commentRule = {\n      pattern: /(^[ \\t]*)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<OPT>/g, function () {\n          return option\n        })\n        .replace(/<SP>/g, function () {\n          return space\n        })\n      return RegExp(source, flags)\n    }\n    Prism.languages.docker = {\n      instruction: {\n        pattern:\n          /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          options: {\n            pattern: re(\n              /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\n              'i'\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              property: {\n                pattern: /(^|\\s)--[\\w-]+/,\n                lookbehind: true\n              },\n              string: [\n                stringRule,\n                {\n                  pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                  lookbehind: true\n                }\n              ],\n              operator: /\\\\$/m,\n              punctuation: /=/\n            }\n          },\n          keyword: [\n            {\n              // https://docs.docker.com/engine/reference/builder/#healthcheck\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#from\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#onbuild\n              pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: /^\\w+/,\n              greedy: true\n            }\n          ],\n          comment: commentRule,\n          string: stringRule,\n          variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n          operator: /\\\\$/m\n        }\n      },\n      comment: commentRule\n    }\n    Prism.languages.dockerfile = Prism.languages.docker\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ndot.displayName = 'dot'\ndot.aliases = ['gv']\n\n/** @type {Syntax} */\nexport default function dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source,\n        // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source,\n        // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source,\n        // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nebnf.displayName = 'ebnf'\nebnf.aliases = []\n\n/** @type {Syntax} */\nexport default function ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\neditorconfig.displayName = 'editorconfig'\neditorconfig.aliases = []\n\n/** @type {Syntax} */\nexport default function editorconfig(Prism) {\n  Prism.languages.editorconfig = {\n    // https://editorconfig-specification.readthedocs.io\n    comment: /[;#].*/,\n    section: {\n      pattern: /(^[ \\t]*)\\[.+\\]/m,\n      lookbehind: true,\n      alias: 'selector',\n      inside: {\n        regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n        // Escape special characters with '\\\\'\n        operator: /[!?]|\\.\\.|\\*{1,2}/,\n        punctuation: /[\\[\\]{},]/\n      }\n    },\n    key: {\n      pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /=.*/,\n      alias: 'attr-value',\n      inside: {\n        punctuation: /^=/\n      }\n    }\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\neiffel.displayName = 'eiffel'\neiffel.aliases = []\n\n/** @type {Syntax} */\nexport default function eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      },\n      // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      },\n      // Single-line string\n      {\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword:\n      /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n      // Decimal\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\nimport refractorMarkupTemplating from './markup-templating.js'\nejs.displayName = 'ejs'\nejs.aliases = ['eta']\n\n/** @type {Syntax} */\nexport default function ejs(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.ejs = {\n      delimiter: {\n        pattern: /^<%[-_=]?|[-_]?%>$/,\n        alias: 'punctuation'\n      },\n      comment: /^#[\\s\\S]*/,\n      'language-javascript': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.javascript\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ejs',\n        ejsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs')\n    })\n    Prism.languages.eta = Prism.languages.ejs\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nelixir.displayName = 'elixir'\nelixir.aliases = []\n\n/** @type {Syntax} */\nexport default function elixir(Prism) {\n  Prism.languages.elixir = {\n    doc: {\n      pattern:\n        /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n      inside: {\n        attribute: /^@\\w+/,\n        string: /['\"][\\s\\S]+/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern:\n        /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [\n      {\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern:\n          /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }\n    ],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    module: {\n      pattern: /\\b[A-Z]\\w*\\b/,\n      alias: 'class-name'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\b\\w+\\??:(?!:)/,\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword:\n      /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    operator: [\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n      {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  }\n  Prism.languages.elixir.string.forEach(function (o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nelm.displayName = 'elm'\nelm.aliases = []\n\n/** @type {Syntax} */\nexport default function elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n    char: {\n      pattern:\n        /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      }\n    ],\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|exposing|import)\\b/\n      }\n    },\n    keyword:\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorLua from './lua.js'\nimport refractorMarkupTemplating from './markup-templating.js'\netlua.displayName = 'etlua'\netlua.aliases = []\n\n/** @type {Syntax} */\nexport default function etlua(Prism) {\n  Prism.register(refractorLua)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.etlua = {\n      delimiter: {\n        pattern: /^<%[-=]?|-?%>$/,\n        alias: 'punctuation'\n      },\n      'language-lua': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.lua\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var pattern = /<%[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'etlua',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkupTemplating from './markup-templating.js'\nimport refractorRuby from './ruby.js'\nerb.displayName = 'erb'\nerb.aliases = []\n\n/** @type {Syntax} */\nexport default function erb(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.erb = {\n      delimiter: {\n        pattern: /^(\\s*)<%=?|%>(?=\\s*$)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      ruby: {\n        pattern: /\\s*\\S[\\s\\S]*/,\n        alias: 'language-ruby',\n        inside: Prism.languages.ruby\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern =\n        /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nerlang.displayName = 'erlang'\nerlang.aliases = []\n\n/** @type {Syntax} */\nexport default function erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\b\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nexcelFormula.displayName = 'excel-formula'\nexcelFormula.aliases = ['xls', 'xlsx']\n\n/** @type {Syntax} */\nexport default function excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'builtin'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'selector',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'selector'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\n\n/** @type {Syntax} */\nexport default function fsharp(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\n      /\\b0b[01]+(?:uy|y)?\\b/,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\n    ],\n    operator:\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      greedy: true,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nfactor.displayName = 'factor'\nfactor.aliases = []\n\n/** @type {Syntax} */\nexport default function factor(Prism) {\n  ;(function (Prism) {\n    var comment_inside = {\n      function:\n        /\\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n    }\n    var string_inside = {\n      number: /\\\\[^\\s']|%\\w/\n    }\n    var factor = {\n      comment: [\n        {\n          // ! single-line exclamation point comments with whitespace after/around the !\n          pattern: /(^|\\s)(?:! .*|!$)/,\n          lookbehind: true,\n          inside: comment_inside\n        } /* from basis/multiline: */,\n        {\n          // /* comment */, /* comment*/\n          pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        },\n        {\n          // ![[ comment ]] , ![===[ comment]===]\n          pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        }\n      ],\n      number: [\n        {\n          // basic base 10 integers 9, -9\n          pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n          pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n          pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // positive mixed numbers 23+1/5 +23+1/5\n          pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // negative mixed numbers -23-1/5\n          pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n          // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n          pattern:\n            /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // NAN literal syntax NAN: 80000deadbeef, NAN: a\n          pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/\n          pattern:\n            /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n          lookbehind: true\n        }\n      ],\n      // R/ regexp?\\/\\\\/\n      regexp: {\n        pattern:\n          /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'number',\n        inside: {\n          variable: /\\\\\\S/,\n          keyword: /[+?*\\[\\]^$(){}.|]/,\n          operator: {\n            pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n            lookbehind: true\n          }\n        }\n      },\n      boolean: {\n        pattern: /(^|\\s)[tf](?=\\s|$)/,\n        lookbehind: true\n      },\n      // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n      'custom-string': {\n        pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          number: /\\\\\\S|%\\w|\\//\n        }\n      },\n      'multiline-string': [\n        {\n          // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n          pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            number: string_inside.number,\n            // trailing semicolon on its own line\n            'semicolon-or-setlocal': {\n              pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n              lookbehind: true,\n              alias: 'function'\n            }\n          }\n        },\n        {\n          // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n          pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        },\n        {\n          // [[ string ]], [==[ string]==]\n          pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        }\n      ],\n      'special-using': {\n        pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          // this is essentially a regex for vocab names, which i don't want to specify\n          // but the USING: gets picked up as a vocab name\n          string: {\n            pattern: /(\\s)[^:\\s]+/,\n            lookbehind: true\n          }\n        }\n      },\n      /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/\n\n      // current solution is not great\n      'stack-effect-delimiter': [\n        {\n          // opening parenthesis\n          pattern: /(^|\\s)(?:call|eval|execute)?\\((?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // middle --\n          pattern: /(\\s)--(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing parenthesis\n          pattern: /(\\s)\\)(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      combinators: {\n        pattern: null,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'kernel-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'sequences-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'math-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'constructor-word': {\n        // <array> but not <=>\n        pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'other-builtin-syntax': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/\n      'conventionally-named-word': {\n        pattern:\n          /(^|\\s)(?!\")(?:(?:change|new|set|with)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'colon-syntax': {\n        pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'semicolon-or-setlocal': {\n        pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n      'curly-brace-literal-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\}(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n      'quotation-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)\\[(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\](?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      'normal-word': {\n        pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n        lookbehind: true\n      },\n      /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/\n      string: {\n        pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n        greedy: true,\n        inside: string_inside\n      }\n    }\n    var escape = function (str) {\n      return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, '\\\\$1')\n    }\n    var arrToWordsRegExp = function (arr) {\n      return new RegExp('(^|\\\\s)(?:' + arr.map(escape).join('|') + ')(?=\\\\s|$)')\n    }\n    var builtins = {\n      'kernel-builtin': [\n        'or',\n        '2nipd',\n        '4drop',\n        'tuck',\n        'wrapper',\n        'nip',\n        'wrapper?',\n        'callstack>array',\n        'die',\n        'dupd',\n        'callstack',\n        'callstack?',\n        '3dup',\n        'hashcode',\n        'pick',\n        '4nip',\n        'build',\n        '>boolean',\n        'nipd',\n        'clone',\n        '5nip',\n        'eq?',\n        '?',\n        '=',\n        'swapd',\n        '2over',\n        'clear',\n        '2dup',\n        'get-retainstack',\n        'not',\n        'tuple?',\n        'dup',\n        '3nipd',\n        'call',\n        '-rotd',\n        'object',\n        'drop',\n        'assert=',\n        'assert?',\n        '-rot',\n        'execute',\n        'boa',\n        'get-callstack',\n        'curried?',\n        '3drop',\n        'pickd',\n        'overd',\n        'over',\n        'roll',\n        '3nip',\n        'swap',\n        'and',\n        '2nip',\n        'rotd',\n        'throw',\n        '(clone)',\n        'hashcode*',\n        'spin',\n        'reach',\n        '4dup',\n        'equal?',\n        'get-datastack',\n        'assert',\n        '2drop',\n        '<wrapper>',\n        'boolean?',\n        'identity-hashcode',\n        'identity-tuple?',\n        'null',\n        'composed?',\n        'new',\n        '5drop',\n        'rot',\n        '-roll',\n        'xor',\n        'identity-tuple',\n        'boolean'\n      ],\n      'other-builtin-syntax': [\n        // syntax\n        '=======',\n        'recursive',\n        'flushable',\n        '>>',\n        '<<<<<<',\n        'M\\\\',\n        'B',\n        'PRIVATE>',\n        '\\\\',\n        '======',\n        'final',\n        'inline',\n        'delimiter',\n        'deprecated',\n        '<PRIVATE',\n        '>>>>>>',\n        '<<<<<<<',\n        'parse-complex',\n        'malformed-complex',\n        'read-only',\n        '>>>>>>>',\n        'call-next-method',\n        '<<',\n        'foldable',\n        // literals\n        '$',\n        '$[',\n        '${'\n      ],\n      'sequences-builtin': [\n        'member-eq?',\n        'mismatch',\n        'append',\n        'assert-sequence=',\n        'longer',\n        'repetition',\n        'clone-like',\n        '3sequence',\n        'assert-sequence?',\n        'last-index-from',\n        'reversed',\n        'index-from',\n        'cut*',\n        'pad-tail',\n        'join-as',\n        'remove-eq!',\n        'concat-as',\n        'but-last',\n        'snip',\n        'nths',\n        'nth',\n        'sequence',\n        'longest',\n        'slice?',\n        '<slice>',\n        'remove-nth',\n        'tail-slice',\n        'empty?',\n        'tail*',\n        'member?',\n        'virtual-sequence?',\n        'set-length',\n        'drop-prefix',\n        'iota',\n        'unclip',\n        'bounds-error?',\n        'unclip-last-slice',\n        'non-negative-integer-expected',\n        'non-negative-integer-expected?',\n        'midpoint@',\n        'longer?',\n        '?set-nth',\n        '?first',\n        'rest-slice',\n        'prepend-as',\n        'prepend',\n        'fourth',\n        'sift',\n        'subseq-start',\n        'new-sequence',\n        '?last',\n        'like',\n        'first4',\n        '1sequence',\n        'reverse',\n        'slice',\n        'virtual@',\n        'repetition?',\n        'set-last',\n        'index',\n        '4sequence',\n        'max-length',\n        'set-second',\n        'immutable-sequence',\n        'first2',\n        'first3',\n        'supremum',\n        'unclip-slice',\n        'suffix!',\n        'insert-nth',\n        'tail',\n        '3append',\n        'short',\n        'suffix',\n        'concat',\n        'flip',\n        'immutable?',\n        'reverse!',\n        '2sequence',\n        'sum',\n        'delete-all',\n        'indices',\n        'snip-slice',\n        '<iota>',\n        'check-slice',\n        'sequence?',\n        'head',\n        'append-as',\n        'halves',\n        'sequence=',\n        'collapse-slice',\n        '?second',\n        'slice-error?',\n        'product',\n        'bounds-check?',\n        'bounds-check',\n        'immutable',\n        'virtual-exemplar',\n        'harvest',\n        'remove',\n        'pad-head',\n        'last',\n        'set-fourth',\n        'cartesian-product',\n        'remove-eq',\n        'shorten',\n        'shorter',\n        'reversed?',\n        'shorter?',\n        'shortest',\n        'head-slice',\n        'pop*',\n        'tail-slice*',\n        'but-last-slice',\n        'iota?',\n        'append!',\n        'cut-slice',\n        'new-resizable',\n        'head-slice*',\n        'sequence-hashcode',\n        'pop',\n        'set-nth',\n        '?nth',\n        'second',\n        'join',\n        'immutable-sequence?',\n        '<reversed>',\n        '3append-as',\n        'virtual-sequence',\n        'subseq?',\n        'remove-nth!',\n        'length',\n        'last-index',\n        'lengthen',\n        'assert-sequence',\n        'copy',\n        'move',\n        'third',\n        'first',\n        'tail?',\n        'set-first',\n        'prefix',\n        'bounds-error',\n        '<repetition>',\n        'exchange',\n        'surround',\n        'cut',\n        'min-length',\n        'set-third',\n        'push-all',\n        'head?',\n        'subseq-start-from',\n        'delete-slice',\n        'rest',\n        'sum-lengths',\n        'head*',\n        'infimum',\n        'remove!',\n        'glue',\n        'slice-error',\n        'subseq',\n        'push',\n        'replace-slice',\n        'subseq-as',\n        'unclip-last'\n      ],\n      'math-builtin': [\n        'number=',\n        'next-power-of-2',\n        '?1+',\n        'fp-special?',\n        'imaginary-part',\n        'float>bits',\n        'number?',\n        'fp-infinity?',\n        'bignum?',\n        'fp-snan?',\n        'denominator',\n        'gcd',\n        '*',\n        '+',\n        'fp-bitwise=',\n        '-',\n        'u>=',\n        '/',\n        '>=',\n        'bitand',\n        'power-of-2?',\n        'log2-expects-positive',\n        'neg?',\n        '<',\n        'log2',\n        '>',\n        'integer?',\n        'number',\n        'bits>double',\n        '2/',\n        'zero?',\n        'bits>float',\n        'float?',\n        'shift',\n        'ratio?',\n        'rect>',\n        'even?',\n        'ratio',\n        'fp-sign',\n        'bitnot',\n        '>fixnum',\n        'complex?',\n        '/i',\n        'integer>fixnum',\n        '/f',\n        'sgn',\n        '>bignum',\n        'next-float',\n        'u<',\n        'u>',\n        'mod',\n        'recip',\n        'rational',\n        '>float',\n        '2^',\n        'integer',\n        'fixnum?',\n        'neg',\n        'fixnum',\n        'sq',\n        'bignum',\n        '>rect',\n        'bit?',\n        'fp-qnan?',\n        'simple-gcd',\n        'complex',\n        '<fp-nan>',\n        'real',\n        '>fraction',\n        'double>bits',\n        'bitor',\n        'rem',\n        'fp-nan-payload',\n        'real-part',\n        'log2-expects-positive?',\n        'prev-float',\n        'align',\n        'unordered?',\n        'float',\n        'fp-nan?',\n        'abs',\n        'bitxor',\n        'integer>fixnum-strict',\n        'u<=',\n        'odd?',\n        '<=',\n        '/mod',\n        '>integer',\n        'real?',\n        'rational?',\n        'numerator'\n      ]\n      // that's all for now\n    }\n    Object.keys(builtins).forEach(function (k) {\n      factor[k].pattern = arrToWordsRegExp(builtins[k])\n    })\n    var combinators = [\n      // kernel\n      '2bi',\n      'while',\n      '2tri',\n      'bi*',\n      '4dip',\n      'both?',\n      'same?',\n      'tri@',\n      'curry',\n      'prepose',\n      '3bi',\n      '?if',\n      'tri*',\n      '2keep',\n      '3keep',\n      'curried',\n      '2keepd',\n      'when',\n      '2bi*',\n      '2tri*',\n      '4keep',\n      'bi@',\n      'keepdd',\n      'do',\n      'unless*',\n      'tri-curry',\n      'if*',\n      'loop',\n      'bi-curry*',\n      'when*',\n      '2bi@',\n      '2tri@',\n      'with',\n      '2with',\n      'either?',\n      'bi',\n      'until',\n      '3dip',\n      '3curry',\n      'tri-curry*',\n      'tri-curry@',\n      'bi-curry',\n      'keepd',\n      'compose',\n      '2dip',\n      'if',\n      '3tri',\n      'unless',\n      'tuple',\n      'keep',\n      '2curry',\n      'tri',\n      'most',\n      'while*',\n      'dip',\n      'composed',\n      'bi-curry@',\n      // sequences\n      'find-last-from',\n      'trim-head-slice',\n      'map-as',\n      'each-from',\n      'none?',\n      'trim-tail',\n      'partition',\n      'if-empty',\n      'accumulate*',\n      'reject!',\n      'find-from',\n      'accumulate-as',\n      'collector-for-as',\n      'reject',\n      'map',\n      'map-sum',\n      'accumulate!',\n      '2each-from',\n      'follow',\n      'supremum-by',\n      'map!',\n      'unless-empty',\n      'collector',\n      'padding',\n      'reduce-index',\n      'replicate-as',\n      'infimum-by',\n      'trim-tail-slice',\n      'count',\n      'find-index',\n      'filter',\n      'accumulate*!',\n      'reject-as',\n      'map-integers',\n      'map-find',\n      'reduce',\n      'selector',\n      'interleave',\n      '2map',\n      'filter-as',\n      'binary-reduce',\n      'map-index-as',\n      'find',\n      'produce',\n      'filter!',\n      'replicate',\n      'cartesian-map',\n      'cartesian-each',\n      'find-index-from',\n      'map-find-last',\n      '3map-as',\n      '3map',\n      'find-last',\n      'selector-as',\n      '2map-as',\n      '2map-reduce',\n      'accumulate',\n      'each',\n      'each-index',\n      'accumulate*-as',\n      'when-empty',\n      'all?',\n      'collector-as',\n      'push-either',\n      'new-like',\n      'collector-for',\n      '2selector',\n      'push-if',\n      '2all?',\n      'map-reduce',\n      '3each',\n      'any?',\n      'trim-slice',\n      '2reduce',\n      'change-nth',\n      'produce-as',\n      '2each',\n      'trim',\n      'trim-head',\n      'cartesian-find',\n      'map-index',\n      // math\n      'if-zero',\n      'each-integer',\n      'unless-zero',\n      '(find-integer)',\n      'when-zero',\n      'find-last-integer',\n      '(all-integers?)',\n      'times',\n      '(each-integer)',\n      'find-integer',\n      'all-integers?',\n      // math.combinators\n      'unless-negative',\n      'if-positive',\n      'when-positive',\n      'when-negative',\n      'unless-positive',\n      'if-negative',\n      // combinators\n      'case',\n      '2cleave',\n      'cond>quot',\n      'case>quot',\n      '3cleave',\n      'wrong-values',\n      'to-fixed-point',\n      'alist>quot',\n      'cond',\n      'cleave',\n      'call-effect',\n      'recursive-hashcode',\n      'spread',\n      'deep-spread>quot',\n      // combinators.short-circuit\n      '2||',\n      '0||',\n      'n||',\n      '0&&',\n      '2&&',\n      '3||',\n      '1||',\n      '1&&',\n      'n&&',\n      '3&&',\n      // combinators.smart\n      'smart-unless*',\n      'keep-inputs',\n      'reduce-outputs',\n      'smart-when*',\n      'cleave>array',\n      'smart-with',\n      'smart-apply',\n      'smart-if',\n      'inputs/outputs',\n      'output>sequence-n',\n      'map-outputs',\n      'map-reduce-outputs',\n      'dropping',\n      'output>array',\n      'smart-map-reduce',\n      'smart-2map-reduce',\n      'output>array-n',\n      'nullary',\n      'input<sequence',\n      'append-outputs',\n      'drop-inputs',\n      'inputs',\n      'smart-2reduce',\n      'drop-outputs',\n      'smart-reduce',\n      'preserving',\n      'smart-when',\n      'outputs',\n      'append-outputs-as',\n      'smart-unless',\n      'smart-if*',\n      'sum-outputs',\n      'input<sequence-unsafe',\n      'output>sequence'\n      // tafn\n    ]\n    factor.combinators.pattern = arrToWordsRegExp(combinators)\n    Prism.languages.factor = factor\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\n$false.displayName = 'false'\n$false.aliases = []\n\n/** @type {Syntax} */\nexport default function $false(Prism) {\n  ;(function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nfirestoreSecurityRules.displayName = 'firestore-security-rules'\nfirestoreSecurityRules.aliases = []\n\n/** @type {Syntax} */\nexport default function firestoreSecurityRules(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend(\n    'clike',\n    {\n      comment: /\\/\\/.*/,\n      keyword:\n        /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n      operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    }\n  )\n  delete Prism.languages['firestore-security-rules']['class-name']\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\n    path: {\n      pattern:\n        /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n          inside: {\n            operator: /=/,\n            keyword: /\\*\\*/,\n            punctuation: /[.$(){}]/\n          }\n        },\n        punctuation: /\\//\n      }\n    },\n    method: {\n      // to make the pattern shorter, the actual method names are omitted\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n      lookbehind: true,\n      alias: 'builtin',\n      inside: {\n        punctuation: /,/\n      }\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\nflow.displayName = 'flow'\nflow.aliases = []\n\n/** @type {Syntax} */\nexport default function flow(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nfortran.displayName = 'fortran'\nfortran.aliases = []\n\n/** @type {Syntax} */\nexport default function fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern:\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i,\n      // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n      // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n      // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkupTemplating from './markup-templating.js'\nftl.displayName = 'ftl'\nftl.aliases = []\n\n/** @type {Syntax} */\nexport default function ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\ngml.displayName = 'gml'\ngml.aliases = ['gamemakerlanguage']\n\n/** @type {Syntax} */\nexport default function gml(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.gamemakerlanguage = Prism.languages.gml =\n    Prism.languages.extend('clike', {\n      keyword:\n        /\\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\\b/,\n      number:\n        /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n      operator:\n        /--|\\+\\+|[-+%/=]=?|!=|\\*\\*?=?|<[<=>]?|>[=>]?|&&?|\\^\\^?|\\|\\|?|~|\\b(?:and|at|not|or|with|xor)\\b/,\n      constant:\n        /\\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\\d|numpad\\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\\w+)\\b/,\n      variable:\n        /\\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\\d)|argument|global|local|other|self)\\b/\n    })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ngap.displayName = 'gap'\ngap.aliases = []\n\n/** @type {Syntax} */\nexport default function gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ngcode.displayName = 'gcode'\ngcode.aliases = []\n\n/** @type {Syntax} */\nexport default function gcode(Prism) {\n  Prism.languages.gcode = {\n    comment: /;.*|\\B\\(.*?\\)\\B/,\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n    property: /\\b[A-Z]/,\n    checksum: {\n      pattern: /(\\*)\\d+/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    // T0:0:0\n    punctuation: /[:*]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ngdscript.displayName = 'gdscript'\ngdscript.aliases = []\n\n/** @type {Syntax} */\nexport default function gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern:\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern:\n        /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n      /\\b(?:INF|NAN|PI|TAU)\\b/\n    ],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\n\n/** @type {Syntax} */\nexport default function gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    record: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'tag'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ngettext.displayName = 'gettext'\ngettext.aliases = ['po']\n\n/** @type {Syntax} */\nexport default function gettext(Prism) {\n  Prism.languages.gettext = {\n    comment: [\n      {\n        pattern: /# .*/,\n        greedy: true,\n        alias: 'translator-comment'\n      },\n      {\n        pattern: /#\\..*/,\n        greedy: true,\n        alias: 'extracted-comment'\n      },\n      {\n        pattern: /#:.*/,\n        greedy: true,\n        alias: 'reference-comment'\n      },\n      {\n        pattern: /#,.*/,\n        greedy: true,\n        alias: 'flag-comment'\n      },\n      {\n        pattern: /#\\|.*/,\n        greedy: true,\n        alias: 'previously-untranslated-comment'\n      },\n      {\n        pattern: /#.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /^msg(?:ctxt|id|id_plural|str)\\b/m,\n    number: /\\b\\d+\\b/,\n    punctuation: /[\\[\\]]/\n  }\n  Prism.languages.po = Prism.languages.gettext\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ngherkin.displayName = 'gherkin'\ngherkin.aliases = []\n\n/** @type {Syntax} */\nexport default function gherkin(Prism) {\n  ;(function (Prism) {\n    var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[ \\t]*)@\\S*/m,\n        lookbehind: true\n      },\n      feature: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern:\n          /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: RegExp('(' + tableRow + ')(?:' + tableRow + ')+'),\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: RegExp(tableRow),\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern:\n          /(^[ \\t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+>/,\n        alias: 'variable'\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ngit.displayName = 'git'\ngit.aliases = []\n\n/** @type {Syntax} */\nexport default function git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorC from './c.js'\nglsl.displayName = 'glsl'\nglsl.aliases = []\n\n/** @type {Syntax} */\nexport default function glsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.glsl = Prism.languages.extend('c', {\n    keyword:\n      /\\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\\b/\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ngn.displayName = 'gn'\ngn.aliases = ['gni']\n\n/** @type {Syntax} */\nexport default function gn(Prism) {\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n\n  Prism.languages.gn = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n          lookbehind: true,\n          inside: {\n            number: /^\\$0x[\\s\\S]{2}$/,\n            variable: /^\\$\\w+$/,\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    keyword: /\\b(?:else|if)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'builtin-function': {\n      // a few functions get special highlighting to improve readability\n      pattern:\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n      alias: 'keyword'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant:\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\\b/,\n    number: /-?\\b\\d+\\b/,\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\n    punctuation: /[(){}[\\],.]/\n  }\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.gn\n  Prism.languages.gni = Prism.languages.gn\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nlinkerScript.displayName = 'linker-script'\nlinkerScript.aliases = ['ld']\n\n/** @type {Syntax} */\nexport default function linkerScript(Prism) {\n  Prism.languages['linker-script'] = {\n    comment: {\n      pattern: /(^|\\s)\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    identifier: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    'location-counter': {\n      pattern: /\\B\\.\\B/,\n      alias: 'important'\n    },\n    section: {\n      pattern: /(^|[^\\w*])\\.\\w+\\b/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b[A-Z][A-Z_]*(?=\\s*\\()/,\n    number: /\\b(?:0[xX][a-fA-F0-9]+|\\d+)[KM]?\\b/,\n    operator: />>=?|<<=?|->|\\+\\+|--|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?/,\n    punctuation: /[(){},;]/\n  }\n  Prism.languages['ld'] = Prism.languages['linker-script']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ngoModule.displayName = 'go-module'\ngoModule.aliases = ['go-mod']\n\n/** @type {Syntax} */\nexport default function goModule(Prism) {\n  // https://go.dev/ref/mod#go-mod-file-module\n\n  Prism.languages['go-mod'] = Prism.languages['go-module'] = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    version: {\n      pattern: /(^|[\\s()[\\],])v\\d+\\.\\d+\\.\\d+(?:[+-][-+.\\w]*)?(?![^\\s()[\\],])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    'go-version': {\n      pattern: /((?:^|\\s)go\\s+)\\d+(?:\\.\\d+){1,2}/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    keyword: {\n      pattern: /^([ \\t]*)(?:exclude|go|module|replace|require|retract)\\b/m,\n      lookbehind: true\n    },\n    operator: /=>/,\n    punctuation: /[()[\\],]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\ngradle.displayName = 'gradle'\ngradle.aliases = []\n\n/** @type {Syntax} */\nexport default function gradle(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null\n        }\n      }\n    }\n    Prism.languages.gradle = Prism.languages.extend('clike', {\n      string: {\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:apply|def|dependencies|else|if|implementation|import|plugin|plugins|project|repositories|repository|sourceSets|tasks|val)\\b/,\n      number:\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    })\n    Prism.languages.insertBefore('gradle', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        pattern:\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('gradle', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    })\n    Prism.languages.insertBefore('gradle', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    interpolation.inside.expression.inside = Prism.languages.gradle\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\n\n/** @type {Syntax} */\nexport default function graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern:\n        /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'atom-input': {\n      pattern: /\\b[A-Z]\\w*Input\\b/,\n      alias: 'class-name'\n    },\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-mutation': {\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-query': {\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    'property-query': /\\w+(?=\\s*\\()/,\n    object: /\\w+(?=\\s*\\{)/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    property: /\\w+/\n  }\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n    if (env.language !== 'graphql') {\n      return\n    }\n\n    /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */\n    var validTokens = env.tokens.filter(function (token) {\n      return (\n        typeof token !== 'string' &&\n        token.type !== 'comment' &&\n        token.type !== 'scalar'\n      )\n    })\n    var currentIndex = 0\n\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */\n    function getToken(offset) {\n      return validTokens[currentIndex + offset]\n    }\n\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */\n    function isTokenType(types, offset) {\n      offset = offset || 0\n      for (var i = 0; i < types.length; i++) {\n        var token = getToken(i + offset)\n        if (!token || token.type !== types[i]) {\n          return false\n        }\n      }\n      return true\n    }\n\n    /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */\n    function findClosingBracket(open, close) {\n      var stackHeight = 1\n      for (var i = currentIndex; i < validTokens.length; i++) {\n        var token = validTokens[i]\n        var content = token.content\n        if (token.type === 'punctuation' && typeof content === 'string') {\n          if (open.test(content)) {\n            stackHeight++\n          } else if (close.test(content)) {\n            stackHeight--\n            if (stackHeight === 0) {\n              return i\n            }\n          }\n        }\n      }\n      return -1\n    }\n\n    /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */\n    function addAlias(token, alias) {\n      var aliases = token.alias\n      if (!aliases) {\n        token.alias = aliases = []\n      } else if (!Array.isArray(aliases)) {\n        token.alias = aliases = [aliases]\n      }\n      aliases.push(alias)\n    }\n    for (; currentIndex < validTokens.length; ) {\n      var startToken = validTokens[currentIndex++]\n\n      // add special aliases for mutation tokens\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n        // any array of the names of all input variables (if any)\n        var inputVariables = []\n        if (\n          isTokenType(['definition-mutation', 'punctuation']) &&\n          getToken(1).content === '('\n        ) {\n          // definition\n\n          currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/)\n          if (definitionEnd === -1) {\n            continue\n          }\n\n          // find all input variables\n          for (; currentIndex < definitionEnd; currentIndex++) {\n            var t = getToken(0)\n            if (t.type === 'variable') {\n              addAlias(t, 'variable-input')\n              inputVariables.push(t.content)\n            }\n          }\n          currentIndex = definitionEnd + 1\n        }\n        if (\n          isTokenType(['punctuation', 'property-query']) &&\n          getToken(0).content === '{'\n        ) {\n          currentIndex++ // skip opening bracket\n\n          addAlias(getToken(0), 'property-mutation')\n          if (inputVariables.length > 0) {\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/)\n            if (mutationEnd === -1) {\n              continue\n            }\n\n            // give references to input variables a special alias\n            for (var i = currentIndex; i < mutationEnd; i++) {\n              var varToken = validTokens[i]\n              if (\n                varToken.type === 'variable' &&\n                inputVariables.indexOf(varToken.content) >= 0\n              ) {\n                addAlias(varToken, 'variable-input')\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\n\n/** @type {Syntax} */\nexport default function groovy(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    }\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      string: {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      number:\n        /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    })\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern:\n          /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    })\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    interpolation.inside.expression.inside = Prism.languages.groovy\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkup from './markup.js'\ntextile.displayName = 'textile'\ntextile.aliases = []\n\n/** @type {Syntax} */\nexport default function textile(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source\n    // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function withModifier(source, flags) {\n      return RegExp(\n        source\n          .replace(/<MOD>/g, function () {\n            return '(?:' + modifierRegex + ')'\n          })\n          .replace(/<PAR>/g, function () {\n            return '(?:' + parenthesesRegex + ')'\n          }),\n        flags || ''\n      )\n    }\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^{}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^()]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\n                .source,\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\n                    .source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\n                .source\n            ),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n\n              // *bold*, **bold**\n              bold: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(^\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\n            ),\n            inside: {\n              text: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\n                .source\n            ),\n            inside: {\n              source: {\n                pattern: withModifier(\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\n                    .source\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:C|R|TM)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    }\n\n    // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern =\n      /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i\n\n    // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns\n\n    // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorRuby from './ruby.js'\nhaml.displayName = 'haml'\nhaml.aliases = []\n\n/** @type {Syntax} */\nexport default function haml(Prism) {\n  Prism.register(refractorRuby)\n  /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/\n\n  ;(function (Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n\n      'multiline-comment': {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        }\n      ],\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'symbol'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern:\n          /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n              lookbehind: true,\n              inside: Prism.languages.ruby\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            },\n            {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: Prism.languages.ruby\n            }\n          ],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          ruby: {\n            pattern: /[\\s\\S]+/,\n            inside: Prism.languages.ruby\n          }\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    }\n    var filter_pattern =\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+'\n\n    // Non exhaustive list of available filters and associated languages\n    var filters = [\n      'css',\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'erb',\n      'javascript',\n      'less',\n      'markdown',\n      'ruby',\n      'scss',\n      'textile'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', function () {\n              return filter.filter\n            })\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'symbol'\n            },\n            text: {\n              pattern: /[\\s\\S]+/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkupTemplating from './markup-templating.js'\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = ['hbs', 'mustache']\n\n/** @type {Syntax} */\nexport default function handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:false|true)\\b/,\n      block: {\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n    Prism.languages.hbs = Prism.languages.handlebars\n    Prism.languages.mustache = Prism.languages.handlebars\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nhaskell.displayName = 'haskell'\nhaskell.aliases = ['hs']\n\n/** @type {Syntax} */\nexport default function haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern:\n        /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n      lookbehind: true\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import|qualified)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    operator: [\n      {\n        // infix operator\n        pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n        greedy: true\n      },\n      {\n        // function composition\n        pattern: /(\\s)\\.(?=\\s)/,\n        lookbehind: true\n      },\n      // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      //\n      // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n      /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n    ],\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    constant: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.hs = Prism.languages.haskell\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\n\n/** @type {Syntax} */\nexport default function haxe(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    string: {\n      // Strings can be multi-line\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    'class-name': [\n      {\n        pattern:\n          /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n        lookbehind: true\n      },\n      // based on naming convention\n      /\\b[A-Z]\\w*/\n    ],\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword:\n      /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n      greedy: true\n    },\n    operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n  })\n  Prism.languages.insertBefore('haxe', 'string', {\n    'string-interpolation': {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{?|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.haxe\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n      greedy: true,\n      inside: {\n        'regex-flags': /\\b[a-z]+$/,\n        'regex-source': {\n          pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^~\\/|\\/$/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#(?:else|elseif|end|if)\\b.*/,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /@:?[\\w.]+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'important'\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nhcl.displayName = 'hcl'\nhcl.aliases = []\n\n/** @type {Syntax} */\nexport default function hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorC from './c.js'\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\n\n/** @type {Syntax} */\nexport default function hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/,\n      // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nhoon.displayName = 'hoon'\nhoon.aliases = []\n\n/** @type {Syntax} */\nexport default function hoon(Prism) {\n  Prism.languages.hoon = {\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'/,\n      greedy: true\n    },\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    'class-name': /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\n\n/** @type {Syntax} */\nexport default function hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nhsts.displayName = 'hsts'\nhsts.aliases = []\n\n/** @type {Syntax} */\nexport default function hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nuri.displayName = 'uri'\nuri.aliases = ['url']\n\n/** @type {Syntax} */\nexport default function uri(Prism) {\n  // https://tools.ietf.org/html/rfc3986#appendix-A\n\n  Prism.languages.uri = {\n    scheme: {\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\n      greedy: true,\n      inside: {\n        'scheme-delimiter': /:$/\n      }\n    },\n    fragment: {\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'fragment-delimiter': /^#/\n      }\n    },\n    query: {\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'query-delimiter': {\n          pattern: /^\\?/,\n          greedy: true\n        },\n        'pair-delimiter': /[&;]/,\n        pair: {\n          pattern: /^[^=][\\s\\S]*/,\n          inside: {\n            key: /^[^=]+/,\n            value: {\n              pattern: /(^=)[\\s\\S]+/,\n              lookbehind: true\n            }\n          }\n        }\n      }\n    },\n    authority: {\n      pattern: RegExp(\n        /^\\/\\//.source +\n          // [ userinfo \"@\" ]\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source +\n          // host\n          ('(?:' +\n            // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\n              .source +\n            '|' +\n            // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\n            ')') +\n          // [ \":\" port ]\n          /(?::\\d*)?/.source,\n        'm'\n      ),\n      inside: {\n        'authority-delimiter': /^\\/\\//,\n        'user-info-segment': {\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n          inside: {\n            'user-info-delimiter': /@$/,\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\n          }\n        },\n        'port-segment': {\n          pattern: /:\\d*$/,\n          inside: {\n            'port-delimiter': /^:/,\n            port: /^\\d+/\n          }\n        },\n        host: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            'ip-literal': {\n              pattern: /^\\[[\\s\\S]+\\]$/,\n              inside: {\n                'ip-literal-delimiter': /^\\[|\\]$/,\n                'ipv-future': /^v[\\s\\S]+/,\n                'ipv6-address': /^[\\s\\S]+/\n              }\n            },\n            'ipv4-address':\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\n          }\n        }\n      }\n    },\n    path: {\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n      inside: {\n        'path-separator': /\\//\n      }\n    }\n  }\n  Prism.languages.url = Prism.languages.uri\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nhttp.displayName = 'http'\nhttp.aliases = []\n\n/** @type {Syntax} */\nexport default function http(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function headerValueOf(name) {\n      return RegExp('(^(?:' + name + '):[ \\t]*(?![ \\t]))[^]+', 'i')\n    }\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[\\d.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[\\d.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      header: {\n        pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n        inside: {\n          'header-value': [\n            {\n              pattern: headerValueOf(/Content-Security-Policy/.source),\n              lookbehind: true,\n              alias: ['csp', 'languages-csp'],\n              inside: Prism.languages.csp\n            },\n            {\n              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n              lookbehind: true,\n              alias: ['hpkp', 'languages-hpkp'],\n              inside: Prism.languages.hpkp\n            },\n            {\n              pattern: headerValueOf(/Strict-Transport-Security/.source),\n              lookbehind: true,\n              alias: ['hsts', 'languages-hsts'],\n              inside: Prism.languages.hsts\n            },\n            {\n              pattern: headerValueOf(/[^:]+/.source),\n              lookbehind: true\n            }\n          ],\n          'header-name': {\n            pattern: /^[^:]+/,\n            alias: 'keyword'\n          },\n          punctuation: /^:/\n        }\n      }\n    }\n\n    // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css,\n      'text/plain': langs.plain\n    }\n\n    // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    }\n\n    // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(' +\n              /content-type:\\s*/.source +\n              pattern +\n              /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source +\n              ')' +\n              // This is a little interesting:\n              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n              // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n              // the body does not start with a [\\w-] character (as headers do).\n              /[^ \\t\\w-][\\s\\S]*/.source,\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header', options)\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\n\n/** @type {Syntax} */\nexport default function ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nicon.displayName = 'icon'\nicon.aliases = []\n\n/** @type {Syntax} */\nexport default function icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern:\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator:\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nicuMessageFormat.displayName = 'icu-message-format'\nicuMessageFormat.aliases = []\n\n/** @type {Syntax} */\nexport default function icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1)\n        })\n      }\n    }\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    }\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    }\n    var argumentSource = nested(\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\n        /<STR>/g,\n        function () {\n          return stringPattern.source\n        }\n      ),\n      8\n    )\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    }\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n                }\n              },\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern:\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:few|many|one|other|two|zero)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern:\n                  /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(\n                  /(^\\s*,\\s*(?=\\S))/.source +\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\n                    '$'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    }\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\n      'choice-style'\n    ].inside.rest = Prism.languages['icu-message-format']\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorHaskell from './haskell.js'\nidris.displayName = 'idris'\nidris.aliases = ['idr']\n\n/** @type {Syntax} */\nexport default function idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  })\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nignore.displayName = 'ignore'\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\n\n/** @type {Syntax} */\nexport default function ignore(Prism) {\n  ;(function (Prism) {\n    Prism.languages.ignore = {\n      // https://git-scm.com/docs/gitignore\n      comment: /^#.*/m,\n      entry: {\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n        alias: 'string',\n        inside: {\n          operator: /^!|\\*\\*?|\\?/,\n          regex: {\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n            lookbehind: true\n          },\n          punctuation: /\\//\n        }\n      }\n    }\n    Prism.languages.gitignore = Prism.languages.ignore\n    Prism.languages.hgignore = Prism.languages.ignore\n    Prism.languages.npmignore = Prism.languages.ignore\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ninform7.displayName = 'inform7'\ninform7.aliases = []\n\n/** @type {Syntax} */\nexport default function inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\[\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n            }\n            // See rest below\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /\\[[^\\[\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern:\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern:\n        /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern:\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern:\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern:\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern:\n        /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7\n  // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nio.displayName = 'io'\nio.aliases = []\n\n/** @type {Syntax} */\nexport default function io(Prism) {\n  Prism.languages.io = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin:\n      /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator:\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nj.displayName = 'j'\nj.aliases = []\n\n/** @type {Syntax} */\nexport default function j(Prism) {\n  Prism.languages.j = {\n    comment: {\n      pattern: /\\bNB\\..*/,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern:\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\n\n/** @type {Syntax} */\nexport default function javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJava from './java.js'\nscala.displayName = 'scala'\nscala.aliases = []\n\n/** @type {Syntax} */\nexport default function scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /<-|=>|\\b(?:abstract|case|catch|class|def|derives|do|else|enum|extends|extension|final|finally|for|forSome|given|if|implicit|import|infix|inline|lazy|match|new|null|object|opaque|open|override|package|private|protected|return|sealed|self|super|this|throw|trait|transparent|try|type|using|val|var|while|with|yield)\\b/,\n    number:\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin:\n      /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\n    'string-interpolation': {\n      pattern:\n        /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n      greedy: true,\n      inside: {\n        id: {\n          pattern: /^\\w+/,\n          greedy: true,\n          alias: 'function'\n        },\n        escape: {\n          pattern: /\\\\\\$\"|\\$[$\"]/,\n          greedy: true,\n          alias: 'symbol'\n        },\n        interpolation: {\n          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n          greedy: true,\n          inside: {\n            punctuation: /^\\$\\{?|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.scala\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n  delete Prism.languages.scala['constant']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJava from './java.js'\nimport refractorJavadoclike from './javadoclike.js'\nimport refractorMarkup from './markup.js'\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\n\n/** @type {Syntax} */\nexport default function javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\njavastacktrace.displayName = 'javastacktrace'\njavastacktrace.aliases = []\n\n/** @type {Syntax} */\nexport default function javastacktrace(Prism) {\n  // Specification:\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n\n  Prism.languages.javastacktrace = {\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: com.example.myproject.MyProjectServletException\n    // Caused by: MidLevelException: LowLevelException\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\n    summary: {\n      pattern:\n        /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern:\n            /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n          lookbehind: true\n        },\n        // the current thread if the summary starts with 'Exception in thread'\n        string: {\n          pattern: /^(\\s*)\"[^\"]*\"/,\n          lookbehind: true\n        },\n        exceptions: {\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n          lookbehind: true,\n          inside: {\n            'class-name': /[\\w$]+$/,\n            namespace: /\\b[a-z]\\w*\\b/,\n            punctuation: /\\./\n          }\n        },\n        message: {\n          pattern: /(:\\s*)\\S.*/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        punctuation: /:/\n      }\n    },\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n    // at java.base/java.lang.Class.forName0(Native Method)\n    // at Util.<init>(Unknown Source)\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n    // at MyClass.mash(MyClass.java:9)\n    //\n    // More information:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n    //\n    // A valid Java module name is defined as:\n    //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n    //\n    // A Java module version is defined by this class:\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n    // This is the implementation of the `parse` method in JDK13:\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n    'stack-frame': {\n      pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)at(?= )/,\n          lookbehind: true\n        },\n        source: [\n          // (Main.java:15)\n          // (Main.scala:15)\n          {\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n            lookbehind: true,\n            inside: {\n              file: /^\\w+\\.\\w+/,\n              punctuation: /:/,\n              'line-number': {\n                pattern: /\\b\\d+\\b/,\n                alias: 'number'\n              }\n            }\n          },\n          // (Unknown Source)\n          // (Native Method)\n          // (...something...)\n          {\n            pattern: /(\\()[^()]*(?=\\))/,\n            lookbehind: true,\n            inside: {\n              keyword: /^(?:Native Method|Unknown Source)$/\n            }\n          }\n        ],\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\n        'class-loader': {\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        module: {\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n          lookbehind: true,\n          inside: {\n            version: {\n              pattern: /(@)[\\s\\S]+/,\n              lookbehind: true,\n              alias: 'number'\n            },\n            punctuation: /[@.]/\n          }\n        },\n        namespace: {\n          pattern: /(?:\\b[a-z]\\w*\\.)+/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()/.]/\n      }\n    },\n    // ... 32 more\n    // ... 32 common frames omitted\n    more: {\n      pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\.{3}/,\n        number: /\\d+/,\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n      }\n    }\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\njexl.displayName = 'jexl'\njexl.aliases = []\n\n/** @type {Syntax} */\nexport default function jexl(Prism) {\n  Prism.languages.jexl = {\n    string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    transform: {\n      pattern:\n        /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n      alias: 'function',\n      lookbehind: true\n    },\n    function:\n      /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n    operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\bin\\b/,\n    punctuation: /[{}[\\](),.]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\njolie.displayName = 'jolie'\njolie.aliases = []\n\n/** @type {Syntax} */\nexport default function jolie(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /((?:\\b(?:as|courier|embed|in|inputPort|outputPort|service)\\b|@)[ \\t]*)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*[@(])/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[?\\/%^@|]/,\n    punctuation: /[()[\\]{},;.:]/,\n    builtin:\n      /\\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\\b/\n  })\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    aggregates: {\n      pattern:\n        /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        keyword: /\\bwith\\b/,\n        'class-name': /\\w+/,\n        punctuation: /,/\n      }\n    },\n    redirects: {\n      pattern:\n        /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /,/,\n        'class-name': /\\w+/,\n        operator: /=>/\n      }\n    },\n    property: {\n      pattern:\n        /\\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\\b(?=[ \\t]*:)/\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\njq.displayName = 'jq'\njq.aliases = []\n\n/** @type {Syntax} */\nexport default function jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\n        /__/g,\n        function () {\n          return interpolation\n        }\n      )\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\njsTemplates.displayName = 'js-templates'\njsTemplates.aliases = []\n\n/** @type {Syntax} */\nexport default function jsTemplates(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    var templateString = Prism.languages.javascript['template-string']\n\n    // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ),\n      // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\n      // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source),\n      // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:markdown|md)/.source),\n      // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ),\n      // sql`...`\n      createTemplate('sql', /\\bsql/.source),\n      // vanilla template string\n      templateString\n    ].filter(Boolean)\n\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      })\n\n      // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function (token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {\n              /* noop */\n            }\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('')\n\n      // 2. Tokenize the embedded code\n\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language)\n\n      // 3. Re-insert the interpolation\n\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */ token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavadoclike from './javadoclike.js'\nimport refractorJavascript from './javascript.js'\nimport refractorTypescript from './typescript.js'\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\n\n/** @type {Syntax} */\nexport default function jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorJavascript)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\nn4js.displayName = 'n4js'\nn4js.aliases = ['n4jsd']\n\n/** @type {Syntax} */\nexport default function n4js(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword:\n      /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\njsExtras.displayName = 'js-extras'\njsExtras.aliases = []\n\n/** @type {Syntax} */\nexport default function jsExtras(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' +\n            Prism.languages.javascript['function-variable'].pattern.source\n        ),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\n        ),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [\n        {\n          // standard built-ins\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n          pattern:\n            /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n          alias: 'class-name'\n        },\n        {\n          // errors\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function withId(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\n        }),\n        flags\n      )\n    }\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    })\n    Prism.languages.javascript['keyword'].unshift(\n      {\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\n        alias: 'module'\n      },\n      {\n        pattern:\n          /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n        alias: 'control-flow'\n      },\n      {\n        pattern: /\\bnull\\b/,\n        alias: ['null', 'nil']\n      },\n      {\n        pattern: /\\bundefined\\b/,\n        alias: 'nil'\n      }\n    )\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern:\n          /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    })\n\n    // add 'maybe-class-name' to tokens which might be a class name\n    var maybeClassNameTokens = [\n      'function',\n      'function-variable',\n      'method',\n      'method-variable',\n      'property-access'\n    ]\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i]\n      var value = Prism.languages.javascript[token]\n\n      // convert regex to object\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        }\n      }\n\n      // keep in mind that we don't support arrays\n\n      var inside = value.inside || {}\n      value.inside = inside\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJson from './json.js'\njson5.displayName = 'json5'\njson5.aliases = []\n\n/** @type {Syntax} */\nexport default function json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJson from './json.js'\njsonp.displayName = 'jsonp'\njsonp.aliases = []\n\n/** @type {Syntax} */\nexport default function jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\n\n/** @type {Syntax} */\nexport default function jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:\\d+(?::\\d+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\njulia.displayName = 'julia'\njulia.aliases = []\n\n/** @type {Syntax} */\nexport default function julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      // support one level of nested comments\n      // https://github.com/JuliaLang/julia/pull/6128\n      pattern:\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n      lookbehind: true\n    },\n    regex: {\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n      greedy: true\n    },\n    string: {\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n      pattern:\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n      greedy: true\n    },\n    char: {\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n      pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n    operator:\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n    punctuation: /::?|[{}[\\]();,.?]/,\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n    constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nkeepalived.displayName = 'keepalived'\nkeepalived.aliases = []\n\n/** @type {Syntax} */\nexport default function keepalived(Prism) {\n  Prism.languages.keepalived = {\n    comment: {\n      pattern: /[#!].*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n      lookbehind: true,\n      greedy: true\n    },\n    // support IPv4, IPv6, subnet mask\n    ip: {\n      pattern: RegExp(\n        /\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(\n          /<ipv4>/g,\n          function () {\n            return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/\n              .source\n          }\n        ),\n        'i'\n      ),\n      alias: 'number'\n    },\n    // support *nix / Windows, directory / file\n    path: {\n      pattern:\n        /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    variable: /\\$\\{?\\w+\\}?/,\n    email: {\n      pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\n      alias: 'string'\n    },\n    'conditional-configuration': {\n      pattern: /@\\^?[\\w-]+/,\n      alias: 'variable'\n    },\n    operator: /=/,\n    property:\n      /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\n    constant:\n      /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\n    number: {\n      pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n    punctuation: /[\\{\\}]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\n\n/** @type {Syntax} */\nexport default function keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: {\n      pattern: /\\bc .*/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    'virtual-key': {\n      pattern:\n        /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n      greedy: true,\n      alias: 'function' // alias for styles\n    },\n    // https://help.keyman.com/developer/language/guide/headers\n    'header-keyword': {\n      pattern: /&\\w+/,\n      alias: 'bold' // alias for styles\n    },\n    'header-statement': {\n      pattern:\n        /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n      alias: 'bold' // alias for styles\n    },\n    'rule-keyword': {\n      pattern:\n        /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n      alias: 'keyword'\n    },\n    'structural-keyword': {\n      pattern:\n        /\\b(?:ansi|begin|group|match|newcontext|nomatch|postkeystroke|readonly|unicode|using keys)\\b/i,\n      alias: 'keyword'\n    },\n    'compile-target': {\n      pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n      alias: 'property'\n    },\n    // U+####, x###, d### characters and numbers\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    operator: /[+>\\\\$]|\\.\\./,\n    punctuation: /[()=,]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nkumir.displayName = 'kumir'\nkumir.aliases = ['kum']\n\n/** @type {Syntax} */\nexport default function kumir(Prism) {\n  /* eslint-disable regexp/no-dupe-characters-character-class */\n  ;(function (Prism) {\n    /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\n\n    /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */\n    function wrapId(pattern, flags) {\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\n    }\n    Prism.languages.kumir = {\n      comment: {\n        pattern: /\\|.*/\n      },\n      prolog: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n        greedy: true\n      },\n      boolean: {\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n        lookbehind: true\n      },\n      'operator-word': {\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'system-variable': {\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: [\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\n              .source\n          ),\n          lookbehind: true,\n          alias: 'builtin'\n        },\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\n          ),\n          lookbehind: true,\n          alias: 'important'\n        }\n      ],\n      /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */\n      keyword: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for reserved words. */\n      name: {\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        pattern: wrapId(\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for names. */\n      number: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for words. */\n      punctuation: /:=|[(),:;\\[\\]]/,\n      /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */\n      'operator-char': {\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n        alias: 'operator'\n      }\n    }\n    Prism.languages.kum = Prism.languages.kumir\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nkusto.displayName = 'kusto'\nkusto.aliases = []\n\n/** @type {Syntax} */\nexport default function kusto(Prism) {\n  Prism.languages.kusto = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n      greedy: true\n    },\n    verb: {\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\n      alias: 'keyword'\n    },\n    'class-name':\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n    keyword:\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n    datetime: [\n      {\n        // RFC 822 + RFC 850\n        pattern:\n          /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n        alias: 'number'\n      },\n      {\n        // ISO 8601\n        pattern:\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n        alias: 'number'\n      }\n    ],\n    number:\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n    punctuation: /[()\\[\\]{},;.:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nlatex.displayName = 'latex'\nlatex.aliases = ['context', 'tex']\n\n/** @type {Syntax} */\nexport default function latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nimport refractorMarkupTemplating from './markup-templating.js'\nimport refractorPhp from './php.js'\nlatte.displayName = 'latte'\nlatte.aliases = []\n\n/** @type {Syntax} */\nexport default function latte(Prism) {\n  Prism.register(refractorClike)\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      'latte-tag': {\n        // https://latte.nette.org/en/tags\n        pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\n        lookbehind: true,\n        alias: 'important'\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        alias: 'punctuation'\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern =\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nscheme.displayName = 'scheme'\nscheme.aliases = []\n\n/** @type {Syntax} */\nexport default function scheme(Prism) {\n  ;(function (Prism) {\n    Prism.languages.scheme = {\n      // this supports \"normal\" single-line comments:\n      //   ; comment\n      // and (potentially nested) multiline comments:\n      //   #| comment #| nested |# still comment |#\n      // (only 1 level of nesting is supported)\n      comment:\n        /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      symbol: {\n        pattern: /'[^()\\[\\]#'\\s]+/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\n        greedy: true\n      },\n      'lambda-parameter': [\n        // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\n        {\n          pattern:\n            /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\n          lookbehind: true\n        },\n        {\n          pattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\n          lookbehind: true\n        }\n      ],\n      keyword: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      builtin: {\n        // all functions of the base library of R7RS plus some of built-ins of R5Rs\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      number: {\n        // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\n        //\n        // <number>      := <num 2>|<num 8>|<num 10>|<num 16>\n        // <num R>       := <prefix R><complex R>\n        // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\n        // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\n        // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\n        // <ureal R>     := <uint R>(?:\\/<uint R>)?\n        //                | <decimal R>\n        //\n        // <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\n        // <uint R>      := <digit R>+\n        // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\n        // <radix 2>     := #b\n        // <radix 8>     := #o\n        // <radix 10>    := (?:#d)?\n        // <radix 16>    := #x\n        // <digit 2>     := [01]\n        // <digit 8>     := [0-7]\n        // <digit 10>    := \\d\n        // <digit 16>    := [0-9a-f]\n        //\n        // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\n        // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\n        // pattern:\n        pattern: RegExp(\n          SortedBNF({\n            '<ureal dec>':\n              /\\d+(?:\\/\\d+)|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[esfdl][+-]?\\d+)?/.source,\n            '<real dec>': /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary dec>': /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\n            '<complex dec>':\n              /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/\n                .source,\n            '<num dec>': /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\n            '<ureal box>': /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\n            '<real box>': /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary box>': /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\n            '<complex box>':\n              /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/\n                .source,\n            '<num box>': /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/\n              .source,\n            '<number>': /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/\n              .source\n          }),\n          'i'\n        ),\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      function: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      identifier: {\n        pattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      punctuation: /[()\\[\\]']/\n    }\n\n    /**\n     * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\n     *\n     * @param {Record<string, string>} grammar\n     * @returns {string}\n     */\n    function SortedBNF(grammar) {\n      for (var key in grammar) {\n        grammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function (key) {\n          return '(?:' + grammar[key].trim() + ')'\n        })\n      }\n      // return the last item\n      return grammar[key]\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorScheme from './scheme.js'\nlilypond.displayName = 'lilypond'\nlilypond.aliases = ['ly']\n\n/** @type {Syntax} */\nexport default function lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source\n    // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkupTemplating from './markup-templating.js'\nliquid.displayName = 'liquid'\nliquid.aliases = []\n\n/** @type {Syntax} */\nexport default function liquid(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.liquid = {\n    comment: {\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n      lookbehind: true\n    },\n    delimiter: {\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n    object:\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n    function: [\n      {\n        pattern: /(\\|\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'filter'\n      },\n      {\n        // array functions\n        pattern: /(\\.\\s*)(?:first|last|size)/,\n        lookbehind: true\n      }\n    ],\n    boolean: /\\b(?:false|nil|true)\\b/,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n    punctuation: /[.,\\[\\]()]/,\n    empty: {\n      pattern: /\\bempty\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    var liquidPattern =\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\n    var insideRaw = false\n    Prism.languages['markup-templating'].buildPlaceholders(\n      env,\n      'liquid',\n      liquidPattern,\n      function (match) {\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\n        if (tagMatch) {\n          var tag = tagMatch[1]\n          if (tag === 'raw' && !insideRaw) {\n            insideRaw = true\n            return true\n          } else if (tag === 'endraw') {\n            insideRaw = false\n            return true\n          }\n        }\n        return !insideRaw\n      }\n    )\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nlisp.displayName = 'lisp'\nlisp.aliases = ['elisp', 'emacs', 'emacs-lisp']\n\n/** @type {Syntax} */\nexport default function lisp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Functions to construct regular expressions\n     * e.g. (interactive ... or (interactive)\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function simple_form(name) {\n      return RegExp(/(\\()/.source + '(?:' + name + ')' + /(?=[\\s\\)])/.source)\n    }\n    /**\n     * booleans and numbers\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function primitive(pattern) {\n      return RegExp(\n        /([\\s([])/.source + '(?:' + pattern + ')' + /(?=[\\s)])/.source\n      )\n    }\n\n    // Patterns in regular expressions\n\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source\n    // symbol starting with & used in function arguments\n    var marker = '&' + symbol\n    // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))'\n    // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var nestedPar =\n      /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/\n        .source\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: RegExp(\n            par +\n              '(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: RegExp(\n            par +\n              '(?:append|by|collect|concat|do|finally|for|in|return)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form(/declare/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form(/interactive/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive(/nil|t/.source),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: RegExp(par + 'def(?:const|custom|group|var)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: RegExp(\n          par +\n            /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source +\n            symbol +\n            /\\s+\\(/.source +\n            nestedPar +\n            /\\)/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: RegExp(\n          par +\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\n            symbol +\n            '(?:\\\\s+&?' +\n            symbol +\n            ')*\\\\s*)?\\\\)'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(?:['`,]?\\(|[)\\[\\]])/,\n        // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': RegExp(marker),\n      varform: {\n        pattern: RegExp(\n          /\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source\n        ),\n        inside: language\n      },\n      argument: {\n        pattern: RegExp(/(^|[\\s(])/.source + symbol),\n        lookbehind: true,\n        alias: 'variable'\n      },\n      rest: language\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: RegExp(par + nestedPar + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: RegExp('&(?:body|rest)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: RegExp('&(?:aux|optional)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\n\n/** @type {Syntax} */\nexport default function livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n            }\n            // See rest below\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern:\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern:\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      },\n      // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nllvm.displayName = 'llvm'\nllvm.aliases = []\n\n/** @type {Syntax} */\nexport default function llvm(Prism) {\n  ;(function (Prism) {\n    Prism.languages.llvm = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      boolean: /\\b(?:false|true)\\b/,\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n      type: {\n        pattern:\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n        alias: 'class-name'\n      },\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n      number:\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n      punctuation: /[{}[\\];(),.!*=<>]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nlog.displayName = 'log'\nlog.aliases = []\n\n/** @type {Syntax} */\nexport default function log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\n\n/** @type {Syntax} */\nexport default function lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmagma.displayName = 'magma'\nmagma.aliases = []\n\n/** @type {Syntax} */\nexport default function magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern:\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword:\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmata.displayName = 'mata'\nmata.aliases = []\n\n/** @type {Syntax} */\nexport default function mata(Prism) {\n  // https://www.stata.com/manuals/m.pdf\n\n  ;(function (Prism) {\n    var orgType = /\\b(?:(?:col|row)?vector|matrix|scalar)\\b/.source\n    var type =\n      /\\bvoid\\b|<org>|\\b(?:complex|numeric|pointer(?:\\s*\\([^()]*\\))?|real|string|(?:class|struct)\\s+\\w+|transmorphic)(?:\\s*<org>)?/.source.replace(\n        /<org>/g,\n        orgType\n      )\n    Prism.languages.mata = {\n      comment: {\n        pattern:\n          /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\b(?:class|extends|struct)\\s+)\\w+(?=\\s*(?:\\{|\\bextends\\b))/,\n        lookbehind: true\n      },\n      type: {\n        pattern: RegExp(type),\n        alias: 'class-name',\n        inside: {\n          punctuation: /[()]/,\n          keyword: /\\b(?:class|function|struct|void)\\b/\n        }\n      },\n      keyword:\n        /\\b(?:break|class|continue|do|else|end|extends|external|final|for|function|goto|if|pragma|private|protected|public|return|static|struct|unset|unused|version|virtual|while)\\b/,\n      constant: /\\bNULL\\b/,\n      number: {\n        pattern:\n          /(^|[^\\w.])(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|\\d[a-f0-9]*(?:\\.[a-f0-9]+)?x[+-]?\\d+)i?(?![\\w.])/i,\n        lookbehind: true\n      },\n      missing: {\n        pattern: /(^|[^\\w.])(?:\\.[a-z]?)(?![\\w.])/,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      operator: /\\.\\.|\\+\\+|--|&&|\\|\\||:?(?:[!=<>]=|[+\\-*/^<>&|:])|[!?=\\\\#’`']/,\n      punctuation: /[()[\\]{},;.]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\n\n/** @type {Syntax} */\nexport default function matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmaxscript.displayName = 'maxscript'\nmaxscript.aliases = []\n\n/** @type {Syntax} */\nexport default function maxscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i\n    Prism.languages.maxscript = {\n      comment: {\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      path: {\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n        greedy: true,\n        alias: 'string'\n      },\n      'function-call': {\n        pattern: RegExp(\n          '((?:' +\n            // start of line\n            (/^/.source +\n              '|' +\n              // operators and other language constructs\n              /[;=<>+\\-*/^({\\[]/.source +\n              '|' +\n              // keywords as part of statements\n              /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/\n                .source) +\n            ')[ \\t]*)' +\n            '(?!' +\n            keywords.source +\n            ')' +\n            /[a-z_]\\w*\\b/.source +\n            '(?=[ \\t]*(?:' +\n            // variable\n            ('(?!' +\n              keywords.source +\n              ')' +\n              /[a-z_]/.source +\n              '|' +\n              // number\n              /\\d|-\\.?\\d/.source +\n              '|' +\n              // other expressions or literals\n              /[({'\"$@#?]/.source) +\n            '))',\n          'im'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'function-definition': {\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\n        alias: 'attr-name'\n      },\n      keyword: keywords,\n      boolean: /\\b(?:false|true)\\b/,\n      time: {\n        pattern:\n          /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n        lookbehind: true,\n        alias: 'number'\n      },\n      number: [\n        {\n          pattern:\n            /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n          lookbehind: true\n        },\n        /\\b(?:e|pi)\\b/\n      ],\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n      color: {\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n        alias: 'constant'\n      },\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmel.displayName = 'mel'\nmel.aliases = []\n\n/** @type {Syntax} */\nexport default function mel(Prism) {\n  Prism.languages.mel = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        statement: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword:\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function: {\n      pattern:\n        /((?:^|[{;])[ \\t]*)[a-z_]\\w*\\b(?!\\s*(?:\\.(?!\\.)|[[{=]))|\\b[a-z_]\\w*(?=[ \\t]*\\()/im,\n      lookbehind: true,\n      greedy: true\n    },\n    'tensor-punctuation': {\n      pattern: /<<|>>/,\n      alias: 'punctuation'\n    },\n    operator: /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=?|[*\\/!=]=?|[%^]/,\n    punctuation: /[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside['statement'].inside = Prism.languages.mel\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmermaid.displayName = 'mermaid'\nmermaid.aliases = []\n\n/** @type {Syntax} */\nexport default function mermaid(Prism) {\n  Prism.languages.mermaid = {\n    comment: {\n      pattern: /%%.*/,\n      greedy: true\n    },\n    style: {\n      pattern:\n        /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n      lookbehind: true,\n      inside: {\n        property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n        operator: /:/,\n        punctuation: /,/\n      }\n    },\n    'inter-arrow-label': {\n      pattern:\n        /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        arrow: {\n          pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n          alias: 'operator'\n        },\n        label: {\n          pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'arrow-head': {\n          pattern: /^\\S+/,\n          alias: ['arrow', 'operator']\n        }\n      }\n    },\n    arrow: [\n      // This might look complex but it really isn't.\n      // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n      // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n      // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n      // arrows into different patterns.\n      {\n        // ER diagram\n        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // flow chart\n        // (?:==+|--+|-\\.*-)\n        pattern:\n          /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // sequence diagram\n        pattern:\n          /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // class diagram\n        pattern:\n          /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    ],\n    label: {\n      pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    text: {\n      pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    annotation: {\n      pattern:\n        /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n      alias: 'important'\n    },\n    keyword: [\n      // This language has both case-sensitive and case-insensitive keywords\n      {\n        pattern:\n          /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern:\n          /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    entity: /#[a-z0-9]+;/,\n    operator: {\n      pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n      lookbehind: true\n    },\n    punctuation: /[(){};]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmetafont.displayName = 'metafont'\nmetafont.aliases = []\n\n/** @type {Syntax} */\nexport default function metafont(Prism) {\n  Prism.languages.metafont = {\n    // Syntax of METAFONT with the added (public) elements of PlainMETAFONT. Except for internal quantities they are expected to be rarely redefined. Freely inspired by the syntax of Christophe Grandsire for the Crimson Editor.\n    comment: {\n      pattern: /%.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"/,\n      greedy: true\n    },\n    number: /\\d*\\.?\\d+/,\n    boolean: /\\b(?:false|true)\\b/,\n    punctuation: [\n      /[,;()]/,\n      {\n        pattern: /(^|[^{}])(?:\\{|\\})(?![{}])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^[])\\[(?!\\[)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\]])\\](?!\\])/,\n        lookbehind: true\n      }\n    ],\n    constant: [\n      {\n        pattern: /(^|[^!?])\\?\\?\\?(?![!?])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^/*\\\\])(?:\\\\|\\\\\\\\)(?![/*\\\\])/,\n        lookbehind: true\n      },\n      /\\b(?:_|blankpicture|bp|cc|cm|dd|ditto|down|eps|epsilon|fullcircle|halfcircle|identity|in|infinity|left|mm|nullpen|nullpicture|origin|pc|penrazor|penspeck|pensquare|penstroke|proof|pt|quartercircle|relax|right|smoke|unitpixel|unitsquare|up)\\b/\n    ],\n    quantity: {\n      pattern:\n        /\\b(?:autorounding|blacker|boundarychar|charcode|chardp|chardx|chardy|charext|charht|charic|charwd|currentwindow|day|designsize|displaying|fillin|fontmaking|granularity|hppp|join_radius|month|o_correction|pausing|pen_(?:bot|lft|rt|top)|pixels_per_inch|proofing|showstopping|smoothing|time|tolerance|tracingcapsules|tracingchoices|tracingcommands|tracingedges|tracingequations|tracingmacros|tracingonline|tracingoutput|tracingpens|tracingrestores|tracingspecs|tracingstats|tracingtitles|turningcheck|vppp|warningcheck|xoffset|year|yoffset)\\b/,\n      alias: 'keyword'\n    },\n    command: {\n      pattern:\n        /\\b(?:addto|batchmode|charlist|cull|display|errhelp|errmessage|errorstopmode|everyjob|extensible|fontdimen|headerbyte|inner|interim|let|ligtable|message|newinternal|nonstopmode|numspecial|openwindow|outer|randomseed|save|scrollmode|shipout|show|showdependencies|showstats|showtoken|showvariable|special)\\b/,\n      alias: 'builtin'\n    },\n    operator: [\n      {\n        pattern:\n          /(^|[^>=<:|])(?:<|<=|=|=:|\\|=:|\\|=:>|=:\\|>|=:\\||\\|=:\\||\\|=:\\|>|\\|=:\\|>>|>|>=|:|:=|<>|::|\\|\\|:)(?![>=<:|])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^+-])(?:\\+|\\+\\+|-{1,3}|\\+-\\+)(?![+-])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^/*\\\\])(?:\\*|\\*\\*|\\/)(?![/*\\\\])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^.])(?:\\.{2,3})(?!\\.)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^@#&$])&(?![@#&$])/,\n        lookbehind: true\n      },\n      /\\b(?:and|not|or)\\b/\n    ],\n    macro: {\n      pattern:\n        /\\b(?:abs|beginchar|bot|byte|capsule_def|ceiling|change_width|clear_pen_memory|clearit|clearpen|clearxy|counterclockwise|cullit|cutdraw|cutoff|decr|define_blacker_pixels|define_corrected_pixels|define_good_x_pixels|define_good_y_pixels|define_horizontal_corrected_pixels|define_pixels|define_whole_blacker_pixels|define_whole_pixels|define_whole_vertical_blacker_pixels|define_whole_vertical_pixels|dir|direction|directionpoint|div|dotprod|downto|draw|drawdot|endchar|erase|fill|filldraw|fix_units|flex|font_coding_scheme|font_extra_space|font_identifier|font_normal_shrink|font_normal_space|font_normal_stretch|font_quad|font_size|font_slant|font_x_height|gfcorners|gobble|gobbled|good\\.(?:bot|lft|rt|top|x|y)|grayfont|hide|hround|imagerules|incr|interact|interpath|intersectionpoint|inverse|italcorr|killtext|labelfont|labels|lft|loggingall|lowres_fix|makegrid|makelabel(?:\\.(?:bot|lft|rt|top)(?:\\.nodot)?)?|max|min|mod|mode_def|mode_setup|nodisplays|notransforms|numtok|openit|penlabels|penpos|pickup|proofoffset|proofrule|proofrulethickness|range|reflectedabout|rotatedabout|rotatedaround|round|rt|savepen|screenchars|screenrule|screenstrokes|shipit|showit|slantfont|softjoin|solve|stop|superellipse|tensepath|thru|titlefont|top|tracingall|tracingnone|undraw|undrawdot|unfill|unfilldraw|upto|vround)\\b/,\n      alias: 'function'\n    },\n    builtin:\n      /\\b(?:ASCII|angle|char|cosd|decimal|directiontime|floor|hex|intersectiontimes|jobname|known|length|makepath|makepen|mexp|mlog|normaldeviate|oct|odd|pencircle|penoffset|point|postcontrol|precontrol|reverse|rotated|sind|sqrt|str|subpath|substring|totalweight|turningnumber|uniformdeviate|unknown|xpart|xxpart|xypart|ypart|yxpart|yypart)\\b/,\n    keyword:\n      /\\b(?:also|at|atleast|begingroup|charexists|contour|controls|curl|cycle|def|delimiters|doublepath|dropping|dump|else|elseif|end|enddef|endfor|endgroup|endinput|exitif|exitunless|expandafter|fi|for|forever|forsuffixes|from|if|input|inwindow|keeping|kern|of|primarydef|quote|readstring|scaled|scantokens|secondarydef|shifted|skipto|slanted|step|tension|tertiarydef|to|transformed|until|vardef|withpen|withweight|xscaled|yscaled|zscaled)\\b/,\n    type: {\n      pattern:\n        /\\b(?:boolean|expr|numeric|pair|path|pen|picture|primary|secondary|string|suffix|tertiary|text|transform)\\b/,\n      alias: 'property'\n    },\n    variable: {\n      pattern:\n        /(^|[^@#&$])(?:@#|#@|#|@)(?![@#&$])|\\b(?:aspect_ratio|currentpen|currentpicture|currenttransform|d|extra_beginchar|extra_endchar|extra_setup|h|localfont|mag|mode|screen_cols|screen_rows|w|whatever|x|y|z)\\b/,\n      lookbehind: true\n    }\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmizar.displayName = 'mizar'\nmizar.aliases = []\n\n/** @type {Syntax} */\nexport default function mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword:\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\nmongodb.displayName = 'mongodb'\nmongodb.aliases = []\n\n/** @type {Syntax} */\nexport default function mongodb(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    var operators = [\n      // query and projection\n      '$eq',\n      '$gt',\n      '$gte',\n      '$in',\n      '$lt',\n      '$lte',\n      '$ne',\n      '$nin',\n      '$and',\n      '$not',\n      '$nor',\n      '$or',\n      '$exists',\n      '$type',\n      '$expr',\n      '$jsonSchema',\n      '$mod',\n      '$regex',\n      '$text',\n      '$where',\n      '$geoIntersects',\n      '$geoWithin',\n      '$near',\n      '$nearSphere',\n      '$all',\n      '$elemMatch',\n      '$size',\n      '$bitsAllClear',\n      '$bitsAllSet',\n      '$bitsAnyClear',\n      '$bitsAnySet',\n      '$comment',\n      '$elemMatch',\n      '$meta',\n      '$slice',\n      // update\n      '$currentDate',\n      '$inc',\n      '$min',\n      '$max',\n      '$mul',\n      '$rename',\n      '$set',\n      '$setOnInsert',\n      '$unset',\n      '$addToSet',\n      '$pop',\n      '$pull',\n      '$push',\n      '$pullAll',\n      '$each',\n      '$position',\n      '$slice',\n      '$sort',\n      '$bit',\n      // aggregation pipeline stages\n      '$addFields',\n      '$bucket',\n      '$bucketAuto',\n      '$collStats',\n      '$count',\n      '$currentOp',\n      '$facet',\n      '$geoNear',\n      '$graphLookup',\n      '$group',\n      '$indexStats',\n      '$limit',\n      '$listLocalSessions',\n      '$listSessions',\n      '$lookup',\n      '$match',\n      '$merge',\n      '$out',\n      '$planCacheStats',\n      '$project',\n      '$redact',\n      '$replaceRoot',\n      '$replaceWith',\n      '$sample',\n      '$set',\n      '$skip',\n      '$sort',\n      '$sortByCount',\n      '$unionWith',\n      '$unset',\n      '$unwind',\n      '$setWindowFields',\n      // aggregation pipeline operators\n      '$abs',\n      '$accumulator',\n      '$acos',\n      '$acosh',\n      '$add',\n      '$addToSet',\n      '$allElementsTrue',\n      '$and',\n      '$anyElementTrue',\n      '$arrayElemAt',\n      '$arrayToObject',\n      '$asin',\n      '$asinh',\n      '$atan',\n      '$atan2',\n      '$atanh',\n      '$avg',\n      '$binarySize',\n      '$bsonSize',\n      '$ceil',\n      '$cmp',\n      '$concat',\n      '$concatArrays',\n      '$cond',\n      '$convert',\n      '$cos',\n      '$dateFromParts',\n      '$dateToParts',\n      '$dateFromString',\n      '$dateToString',\n      '$dayOfMonth',\n      '$dayOfWeek',\n      '$dayOfYear',\n      '$degreesToRadians',\n      '$divide',\n      '$eq',\n      '$exp',\n      '$filter',\n      '$first',\n      '$floor',\n      '$function',\n      '$gt',\n      '$gte',\n      '$hour',\n      '$ifNull',\n      '$in',\n      '$indexOfArray',\n      '$indexOfBytes',\n      '$indexOfCP',\n      '$isArray',\n      '$isNumber',\n      '$isoDayOfWeek',\n      '$isoWeek',\n      '$isoWeekYear',\n      '$last',\n      '$last',\n      '$let',\n      '$literal',\n      '$ln',\n      '$log',\n      '$log10',\n      '$lt',\n      '$lte',\n      '$ltrim',\n      '$map',\n      '$max',\n      '$mergeObjects',\n      '$meta',\n      '$min',\n      '$millisecond',\n      '$minute',\n      '$mod',\n      '$month',\n      '$multiply',\n      '$ne',\n      '$not',\n      '$objectToArray',\n      '$or',\n      '$pow',\n      '$push',\n      '$radiansToDegrees',\n      '$range',\n      '$reduce',\n      '$regexFind',\n      '$regexFindAll',\n      '$regexMatch',\n      '$replaceOne',\n      '$replaceAll',\n      '$reverseArray',\n      '$round',\n      '$rtrim',\n      '$second',\n      '$setDifference',\n      '$setEquals',\n      '$setIntersection',\n      '$setIsSubset',\n      '$setUnion',\n      '$size',\n      '$sin',\n      '$slice',\n      '$split',\n      '$sqrt',\n      '$stdDevPop',\n      '$stdDevSamp',\n      '$strcasecmp',\n      '$strLenBytes',\n      '$strLenCP',\n      '$substr',\n      '$substrBytes',\n      '$substrCP',\n      '$subtract',\n      '$sum',\n      '$switch',\n      '$tan',\n      '$toBool',\n      '$toDate',\n      '$toDecimal',\n      '$toDouble',\n      '$toInt',\n      '$toLong',\n      '$toObjectId',\n      '$toString',\n      '$toLower',\n      '$toUpper',\n      '$trim',\n      '$trunc',\n      '$type',\n      '$week',\n      '$year',\n      '$zip',\n      '$count',\n      '$dateAdd',\n      '$dateDiff',\n      '$dateSubtract',\n      '$dateTrunc',\n      '$getField',\n      '$rand',\n      '$sampleRate',\n      '$setField',\n      '$unsetField',\n      // aggregation pipeline query modifiers\n      '$comment',\n      '$explain',\n      '$hint',\n      '$max',\n      '$maxTimeMS',\n      '$min',\n      '$orderby',\n      '$query',\n      '$returnKey',\n      '$showDiskLoc',\n      '$natural'\n    ]\n    var builtinFunctions = [\n      'ObjectId',\n      'Code',\n      'BinData',\n      'DBRef',\n      'Timestamp',\n      'NumberLong',\n      'NumberDecimal',\n      'MaxKey',\n      'MinKey',\n      'RegExp',\n      'ISODate',\n      'UUID'\n    ]\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$')\n    })\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern:\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    })\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern:\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern:\n          /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n        greedy: true\n      }\n    }\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmonkey.displayName = 'monkey'\nmonkey.aliases = []\n\n/** @type {Syntax} */\nexport default function monkey(Prism) {\n  Prism.languages.monkey = {\n    comment: {\n      pattern: /^#Rem\\s[\\s\\S]*?^#End|'.+/im,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    function: /\\b\\w+(?=\\()/,\n    'type-char': {\n      pattern: /\\b[?%#$]/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\\b/i,\n    operator:\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nmoonscript.displayName = 'moonscript'\nmoonscript.aliases = ['moon']\n\n/** @type {Syntax} */\nexport default function moonscript(Prism) {\n  Prism.languages.moonscript = {\n    comment: /--.*/,\n    string: [\n      {\n        pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n        greedy: true\n      },\n      {\n        pattern: /\"[^\"]*\"/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /#\\{[^{}]*\\}/,\n            inside: {\n              moonscript: {\n                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                lookbehind: true,\n                inside: null // see beow\n              },\n              'interpolation-punctuation': {\n                pattern: /#\\{|\\}/,\n                alias: 'punctuation'\n              }\n            }\n          }\n        }\n      }\n    ],\n    'class-name': [\n      {\n        pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      // class-like names start with a capital letter\n      /\\b[A-Z]\\w*/\n    ],\n    keyword:\n      /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n    variable: /@@?\\w*/,\n    property: {\n      pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n      lookbehind: true\n    },\n    function: {\n      pattern:\n        /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:create|resume|running|status|wrap|yield)|debug\\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n    operator:\n      /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n    punctuation: /[.,()[\\]{}\\\\]/\n  }\n  Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside =\n    Prism.languages.moonscript\n  Prism.languages.moon = Prism.languages.moonscript\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nn1ql.displayName = 'n1ql'\nn1ql.aliases = []\n\n/** @type {Syntax} */\nexport default function n1ql(Prism) {\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\n\n  Prism.languages.n1ql = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n      greedy: true\n    },\n    parameter: /\\$[\\w.]+/,\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\n    keyword:\n      /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n    punctuation: /[;[\\](),.{}:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nnand2tetrisHdl.displayName = 'nand2tetris-hdl'\nnand2tetrisHdl.aliases = []\n\n/** @type {Syntax} */\nexport default function nand2tetrisHdl(Prism) {\n  Prism.languages['nand2tetris-hdl'] = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    keyword: /\\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n    number: /\\b\\d+\\b/,\n    operator: /=|\\.\\./,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nnaniscript.displayName = 'naniscript'\nnaniscript.aliases = ['nani']\n\n/** @type {Syntax} */\nexport default function naniscript(Prism) {\n  ;(function (Prism) {\n    var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/\n    var params = {\n      'quoted-string': {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        alias: 'operator'\n      },\n      'command-param-id': {\n        pattern: /(\\s)\\w+:/,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'command-param-value': [\n        {\n          pattern: expressionDef,\n          alias: 'selector'\n        },\n        {\n          pattern: /([\\t ])\\S+/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'operator'\n        },\n        {\n          pattern: /\\S(?:.*\\S)?/,\n          alias: 'operator'\n        }\n      ]\n    }\n    Prism.languages.naniscript = {\n      // ; ...\n      comment: {\n        pattern: /^([\\t ]*);.*/m,\n        lookbehind: true\n      },\n      // > ...\n      // Define is a control line starting with '>' followed by a word, a space and a text.\n      define: {\n        pattern: /^>.+/m,\n        alias: 'tag',\n        inside: {\n          value: {\n            pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          key: {\n            pattern: /(^>)\\w+/,\n            lookbehind: true\n          }\n        }\n      },\n      // # ...\n      label: {\n        pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n        lookbehind: true,\n        alias: 'regex'\n      },\n      command: {\n        pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          'command-name': /^@\\w+/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'command-params': {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            inside: params\n          }\n        }\n      },\n      // Generic is any line that doesn't start with operators: ;>#@\n      'generic-text': {\n        pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n        lookbehind: true,\n        alias: 'punctuation',\n        inside: {\n          // \\{ ... \\} ... \\[ ... \\] ... \\\"\n          'escaped-char': /\\\\[{}\\[\\]\"]/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'inline-command': {\n            pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n            greedy: true,\n            alias: 'function',\n            inside: {\n              'command-params': {\n                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                lookbehind: true,\n                inside: params\n              },\n              'command-param-name': {\n                pattern: /^(\\[[\\t ]*)\\w+/,\n                lookbehind: true,\n                alias: 'name'\n              },\n              'start-stop-char': /[\\[\\]]/\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.nani = Prism.languages['naniscript']\n\n    /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */\n\n    /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */\n    Prism.hooks.add('after-tokenize', function (env) {\n      /** @type {(Token | string)[]} */\n      var tokens = env.tokens\n      tokens.forEach(function (token) {\n        if (typeof token !== 'string' && token.type === 'generic-text') {\n          var content = getTextContent(token)\n          if (!isBracketsBalanced(content)) {\n            token.type = 'bad-line'\n            token.content = content\n          }\n        }\n      })\n    })\n\n    /**\n     * @param {string} input\n     * @returns {boolean}\n     */\n    function isBracketsBalanced(input) {\n      var brackets = '[]{}'\n      var stack = []\n      for (var i = 0; i < input.length; i++) {\n        var bracket = input[i]\n        var bracketsIndex = brackets.indexOf(bracket)\n        if (bracketsIndex !== -1) {\n          if (bracketsIndex % 2 === 0) {\n            stack.push(bracketsIndex + 1)\n          } else if (stack.pop() !== bracketsIndex) {\n            return false\n          }\n        }\n      }\n      return stack.length === 0\n    }\n\n    /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */\n    function getTextContent(token) {\n      if (typeof token === 'string') {\n        return token\n      } else if (Array.isArray(token)) {\n        return token.map(getTextContent).join('')\n      } else {\n        return getTextContent(token.content)\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nnasm.displayName = 'nasm'\nnasm.aliases = []\n\n/** @type {Syntax} */\nexport default function nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [\n      /\\[?BITS (?:16|32|64)\\]?/,\n      {\n        pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n        lookbehind: true\n      },\n      /(?:extern|global)[^;\\r\\n]*/i,\n      /(?:CPU|DEFAULT|FLOAT).*$/m\n    ],\n    register: {\n      pattern:\n        /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number:\n      /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nneon.displayName = 'neon'\nneon.aliases = []\n\n/** @type {Syntax} */\nexport default function neon(Prism) {\n  Prism.languages.neon = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    datetime: {\n      pattern:\n        /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    key: {\n      pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    number: {\n      pattern:\n        /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[[{(=:,\\s])(?:false|no|true|yes)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true\n    },\n    null: {\n      pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    string: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    literal: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    punctuation: /[,:=[\\]{}()-]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nnevod.displayName = 'nevod'\nnevod.aliases = []\n\n/** @type {Syntax} */\nexport default function nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern:\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword:\n      /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n    'standard-pattern': {\n      pattern:\n        /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /=/,\n        alias: 'pattern-def'\n      },\n      {\n        pattern: /&/,\n        alias: 'conjunction'\n      },\n      {\n        pattern: /~/,\n        alias: 'exception'\n      },\n      {\n        pattern: /\\?/,\n        alias: 'optionality'\n      },\n      {\n        pattern: /[[\\]]/,\n        alias: 'repetition'\n      },\n      {\n        pattern: /[{}]/,\n        alias: 'variation'\n      },\n      {\n        pattern: /[+_]/,\n        alias: 'sequence'\n      },\n      {\n        pattern: /\\.{2,3}/,\n        alias: 'span'\n      }\n    ],\n    'field-capture': [\n      {\n        pattern:\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      },\n      {\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      }\n    ],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nnginx.displayName = 'nginx'\nnginx.aliases = []\n\n/** @type {Syntax} */\nexport default function nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nnim.displayName = 'nim'\nnim.aliases = []\n\n/** @type {Syntax} */\nexport default function nim(Prism) {\n  Prism.languages.nim = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n      pattern:\n        /(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/,\n      greedy: true\n    },\n    char: {\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\n      pattern: /'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|.)|[^'])'/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        operator: /\\*$/\n      }\n    },\n    // We don't want to highlight operators (and anything really) inside backticks\n    identifier: {\n      pattern: /`[^`\\r\\n]+`/,\n      greedy: true,\n      inside: {\n        punctuation: /`/\n      }\n    },\n    // The negative look ahead prevents wrong highlighting of the .. operator\n    number:\n      /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n    keyword:\n      /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n    operator: {\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n      // but allow the slice operator .. to take precedence over them\n      // One can define his own operators in Nim so all combination of operators might be an operator.\n      pattern:\n        /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m,\n      lookbehind: true\n    },\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nnix.displayName = 'nix'\nnix.aliases = []\n\n/** @type {Syntax} */\nexport default function nix(Prism) {\n  Prism.languages.nix = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n          lookbehind: true,\n          inside: null // see below\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern:\n          /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'important'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function:\n      /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside = Prism.languages.nix\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nnsis.displayName = 'nsis'\nnsis.aliases = []\n\n/** @type {Syntax} */\nexport default function nsis(Prism) {\n  /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.08\n   */\n  Prism.languages.nsis = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|KnownFolderPath|LabelAddress|TempFileName|WinVer)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|RtlLanguage|ShellVarContextAll|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Target|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\\b/m,\n      lookbehind: true\n    },\n    property:\n      /\\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\\b/,\n    constant: /\\$\\{[!\\w\\.:\\^-]+\\}|\\$\\([!\\w\\.:\\^-]+\\)/,\n    variable: /\\$\\w[\\w\\.]*/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n    punctuation: /[{}[\\];(),.:]/,\n    important: {\n      pattern:\n        /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n      lookbehind: true\n    }\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nocaml.displayName = 'ocaml'\nocaml.aliases = []\n\n/** @type {Syntax} */\nexport default function ocaml(Prism) {\n  // https://ocaml.org/manual/lex.html\n\n  Prism.languages.ocaml = {\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n      greedy: true\n    },\n    string: [\n      {\n        pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      {\n        pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n        greedy: true\n      }\n    ],\n    number: [\n      // binary and octal\n      /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i,\n      // hexadecimal\n      /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i,\n      // decimal\n      /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i\n    ],\n    directive: {\n      pattern: /\\B#\\w+/,\n      alias: 'property'\n    },\n    label: {\n      pattern: /\\B~\\w+/,\n      alias: 'property'\n    },\n    'type-variable': {\n      pattern: /\\B'\\w+/,\n      alias: 'function'\n    },\n    variant: {\n      pattern: /`\\w+/,\n      alias: 'symbol'\n    },\n    // For the list of keywords and operators,\n    // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n    keyword:\n      /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'operator-like-punctuation': {\n      pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n      alias: 'punctuation'\n    },\n    // Custom operators are allowed\n    operator:\n      /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n    punctuation: /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nodin.displayName = 'odin'\nodin.aliases = []\n\n/** @type {Syntax} */\nexport default function odin(Prism) {\n  ;(function (Prism) {\n    var escapes =\n      /\\\\(?:[\"'\\\\abefnrtv]|0[0-7]{2}|U[\\dA-Fa-f]{6}|u[\\dA-Fa-f]{4}|x[\\dA-Fa-f]{2})/\n    Prism.languages.odin = {\n      /**\n       * The current implementation supports only 1 level of nesting.\n       *\n       * @author Michael Schmidt\n       * @author edukisto\n       */\n      comment: [\n        {\n          pattern:\n            /\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:\\*(?!\\/)|[^*])*(?:\\*\\/|$))*(?:\\*\\/|$)/,\n          greedy: true\n        },\n        {\n          pattern: /#![^\\n\\r]*/,\n          greedy: true\n        },\n        {\n          pattern: /\\/\\/[^\\n\\r]*/,\n          greedy: true\n        }\n      ],\n      /**\n       * Should be found before strings because of '\"'\"- and '`'`-like sequences.\n       */\n      char: {\n        pattern: /'(?:\\\\(?:.|[0Uux][0-9A-Fa-f]{1,6})|[^\\n\\r'\\\\])'/,\n        greedy: true,\n        inside: {\n          symbol: escapes\n        }\n      },\n      string: [\n        {\n          pattern: /`[^`]*`/,\n          greedy: true\n        },\n        {\n          pattern: /\"(?:\\\\.|[^\\n\\r\"\\\\])*\"/,\n          greedy: true,\n          inside: {\n            symbol: escapes\n          }\n        }\n      ],\n      directive: {\n        pattern: /#\\w+/,\n        alias: 'property'\n      },\n      number:\n        /\\b0(?:b[01_]+|d[\\d_]+|h_*(?:(?:(?:[\\dA-Fa-f]_*){8}){1,2}|(?:[\\dA-Fa-f]_*){4})|o[0-7_]+|x[\\dA-F_a-f]+|z[\\dAB_ab]+)\\b|(?:\\b\\d+(?:\\.(?!\\.)\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d*)?[ijk]?(?!\\w)/,\n      discard: {\n        pattern: /\\b_\\b/,\n        alias: 'keyword'\n      },\n      'procedure-definition': {\n        pattern: /\\b\\w+(?=[ \\t]*(?::\\s*){2}proc\\b)/,\n        alias: 'function'\n      },\n      keyword:\n        /\\b(?:asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|matrix|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where)\\b/,\n      /**\n       * false, nil, true can be used as procedure names. \"_\" and keywords can't.\n       */\n      'procedure-name': {\n        pattern: /\\b\\w+(?=[ \\t]*\\()/,\n        alias: 'function'\n      },\n      boolean: /\\b(?:false|nil|true)\\b/,\n      'constant-parameter-sign': {\n        pattern: /\\$/,\n        alias: 'important'\n      },\n      undefined: {\n        pattern: /---/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /->/,\n        alias: 'punctuation'\n      },\n      operator: /\\+\\+|--|\\.\\.[<=]?|(?:&~|[-!*+/=~]|[%&<>|]{1,2})=?|[?^]/,\n      punctuation: /[(),.:;@\\[\\]{}]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorC from './c.js'\nopencl.displayName = 'opencl'\nopencl.aliases = []\n\n/** @type {Syntax} */\nexport default function opencl(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    /* OpenCL kernel language */\n    Prism.languages.opencl = Prism.languages.extend('c', {\n      // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n      keyword:\n        /\\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n      // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\n      // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\n      number:\n        /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\n      boolean: /\\b(?:false|true)\\b/,\n      'constant-opencl-kernel': {\n        pattern:\n          /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\\b/,\n        alias: 'constant'\n      }\n    })\n    Prism.languages.insertBefore('opencl', 'class-name', {\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\n      'builtin-type': {\n        pattern:\n          /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\n        alias: 'keyword'\n      }\n    })\n    var attributes = {\n      // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n      'type-opencl-host': {\n        pattern:\n          /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n        alias: 'keyword'\n      },\n      'boolean-opencl-host': {\n        pattern: /\\bCL_(?:FALSE|TRUE)\\b/,\n        alias: 'boolean'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n      'constant-opencl-host': {\n        pattern:\n          /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n        alias: 'constant'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n      'function-opencl-host': {\n        pattern:\n          /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n        alias: 'function'\n      }\n    }\n\n    /* OpenCL host API */\n    Prism.languages.insertBefore('c', 'keyword', attributes)\n\n    // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n    if (Prism.languages.cpp) {\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n      attributes['type-opencl-host-cpp'] = {\n        pattern:\n          /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\\b/,\n        alias: 'keyword'\n      }\n      Prism.languages.insertBefore('cpp', 'keyword', attributes)\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nopenqasm.displayName = 'openqasm'\nopenqasm.aliases = ['qasm']\n\n/** @type {Syntax} */\nexport default function openqasm(Prism) {\n  // https://qiskit.github.io/openqasm/grammar/index.html\n\n  Prism.languages.openqasm = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\n    'class-name':\n      /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n    function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\n    constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\n    number: {\n      pattern:\n        /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n      lookbehind: true\n    },\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n    punctuation: /[(){}\\[\\];,:.]/\n  }\n  Prism.languages.qasm = Prism.languages.openqasm\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\noz.displayName = 'oz'\noz.aliases = []\n\n/** @type {Syntax} */\nexport default function oz(Prism) {\n  Prism.languages.oz = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [\n      /\\b[a-z][A-Za-z\\d]*(?=\\()/,\n      {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n        lookbehind: true\n      }\n    ],\n    number:\n      /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\b\\w+(?=[ \\t]*:(?![:=]))/,\n    operator:\n      /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nparigp.displayName = 'parigp'\nparigp.aliases = []\n\n/** @type {Syntax} */\nexport default function parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function () {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function (keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern:\n        /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator:\n      /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkup from './markup.js'\nparser.displayName = 'parser'\nparser.aliases = []\n\n/** @type {Syntax} */\nexport default function parser(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    var parser = (Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern:\n          /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    }))\n    parser = Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: parser.keyword,\n          variable: parser.variable,\n          function: parser.function,\n          boolean: /\\b(?:false|true)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\n          escape: parser.escape,\n          operator:\n            /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: parser.punctuation\n        }\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        expression: parser.expression,\n        keyword: parser.keyword,\n        variable: parser.variable,\n        function: parser.function,\n        escape: parser.escape,\n        'parser-punctuation': {\n          pattern: parser.punctuation,\n          alias: 'punctuation'\n        }\n      },\n      parser['tag'].inside['attr-value']\n    )\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\n\n/** @type {Syntax} */\nexport default function pascal(Prism) {\n  // Based on Free Pascal\n\n  /* TODO\nSupport inline asm ?\n*/\n\n  Prism.languages.pascal = {\n    directive: {\n      pattern: /\\{\\$[\\s\\S]*?\\}/,\n      greedy: true,\n      alias: ['marco', 'property']\n    },\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    asm: {\n      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern:\n          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern:\n          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern:\n          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n      // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n      {\n        pattern:\n          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\n    asm: undefined,\n    keyword: undefined,\n    operator: undefined\n  })\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\n\n/** @type {Syntax} */\nexport default function pascaligo(Prism) {\n  ;(function (Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      function () {\n        return braces\n      }\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n              /<type>/g,\n              function () {\n                return type\n              }\n            ),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n              return type\n            }),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\n              return type\n            })\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      keyword: {\n        pattern:\n          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i,\n        // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator:\n        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function (accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function (p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npsl.displayName = 'psl'\npsl.aliases = []\n\n/** @type {Syntax} */\nexport default function psl(Prism) {\n  Prism.languages.psl = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        symbol: /\\\\[ntrbA-Z\"\\\\]/\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<([a-zA-Z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\1\\b/,\n      alias: 'string',\n      greedy: true\n    },\n    keyword:\n      /\\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\\b/,\n    constant:\n      /\\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\\b/,\n    boolean: /\\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\\b/,\n    variable: /\\b(?:PslDebug|errno|exit_status)\\b/,\n    builtin: {\n      pattern:\n        /\\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\\b/,\n      alias: 'builtin-function'\n    },\n    'foreach-variable': {\n      pattern:\n        /(\\bforeach\\s+(?:(?:\\w+\\b|\"(?:\\\\.|[^\\\\\"])*\")\\s+){0,2})[_a-zA-Z]\\w*(?=\\s*\\()/,\n      lookbehind: true,\n      greedy: true\n    },\n    function: /\\b[_a-z]\\w*\\b(?=\\s*\\()/i,\n    number: /\\b(?:0x[0-9a-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator: /--|\\+\\+|&&=?|\\|\\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\\.|[:?]/,\n    punctuation: /[(){}\\[\\];,]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npcaxis.displayName = 'pcaxis'\npcaxis.aliases = ['px']\n\n/** @type {Syntax} */\nexport default function pcaxis(Prism) {\n  Prism.languages.pcaxis = {\n    string: /\"[^\"]*\"/,\n    keyword: {\n      pattern:\n        /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        keyword: /^[-A-Z\\d]+/,\n        language: {\n          pattern: /^(\\s*)\\[[-\\w]+\\]/,\n          lookbehind: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            property: /[-\\w]+/\n          }\n        },\n        'sub-key': {\n          pattern: /^(\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          inside: {\n            parameter: {\n              pattern: /\"[^\"]*\"/,\n              alias: 'property'\n            },\n            punctuation: /^\\(|\\)$|,/\n          }\n        }\n      }\n    },\n    operator: /=/,\n    tlist: {\n      pattern:\n        /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n      greedy: true,\n      inside: {\n        function: /^TLIST/,\n        property: {\n          pattern: /^(\\s*\\(\\s*)\\w+/,\n          lookbehind: true\n        },\n        string: /\"[^\"]*\"/,\n        punctuation: /[(),]/,\n        operator: /-/\n      }\n    },\n    punctuation: /[;,]/,\n    number: {\n      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n      lookbehind: true\n    },\n    boolean: /NO|YES/\n  }\n  Prism.languages.px = Prism.languages.pcaxis\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npeoplecode.displayName = 'peoplecode'\npeoplecode.aliases = ['pcode']\n\n/** @type {Syntax} */\nexport default function peoplecode(Prism) {\n  Prism.languages.peoplecode = {\n    comment: RegExp(\n      [\n        // C-style multiline comments\n        /\\/\\*[\\s\\S]*?\\*\\//.source,\n        // REM comments\n        /\\bREM[^;]*;/.source,\n        // Nested <* *> comments\n        /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source,\n        // /+ +/ comments\n        /\\/\\+[\\s\\S]*?\\+\\//.source\n      ].join('|')\n    ),\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    variable: /%\\w+/,\n    'function-definition': {\n      pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'class-name': {\n      pattern:\n        /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /:/\n      }\n    },\n    keyword:\n      /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n    'operator-keyword': {\n      pattern: /\\b(?:and|not|or)\\b/i,\n      alias: 'operator'\n    },\n    function: /[_a-z]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n    punctuation: /[:.;,()[\\]]/\n  }\n  Prism.languages.pcode = Prism.languages.peoplecode\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavadoclike from './javadoclike.js'\nimport refractorPhp from './php.js'\nphpdoc.displayName = 'phpdoc'\nphpdoc.aliases = []\n\n/** @type {Syntax} */\nexport default function phpdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    var typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source\n    Prism.languages.phpdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        pattern: RegExp(\n          '(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' +\n            typeExpression +\n            '\\\\s+)?)\\\\$\\\\w+'\n        ),\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('phpdoc', 'keyword', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            '(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' +\n              typeExpression\n          ),\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\\b/,\n            punctuation: /[|\\\\[\\]()]/\n          }\n        }\n      ]\n    })\n    Prism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc)\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorPhp from './php.js'\nphpExtras.displayName = 'php-extras'\nphpExtras.aliases = []\n\n/** @type {Syntax} */\nexport default function phpExtras(Prism) {\n  Prism.register(refractorPhp)\n  Prism.languages.insertBefore('php', 'variable', {\n    this: {\n      pattern: /\\$this\\b/,\n      alias: 'keyword'\n    },\n    global:\n      /\\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\\b/,\n    scope: {\n      pattern: /\\b[\\w\\\\]+::/,\n      inside: {\n        keyword: /\\b(?:parent|self|static)\\b/,\n        punctuation: /::|\\\\/\n      }\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nplantUml.displayName = 'plant-uml'\nplantUml.aliases = ['plantuml']\n\n/** @type {Syntax} */\nexport default function plantUml(Prism) {\n  ;(function (Prism) {\n    var variable = /\\$\\w+|%[a-z]+%/\n    var arrowAttr = /\\[[^[\\]]*\\]/.source\n    var arrowDirection = /(?:[drlu]|do|down|le|left|ri|right|up)/.source\n    var arrowBody =\n      '(?:-+' +\n      arrowDirection +\n      '-+|\\\\.+' +\n      arrowDirection +\n      '\\\\.+|-+(?:' +\n      arrowAttr +\n      '-*)?|' +\n      arrowAttr +\n      '-+|\\\\.+(?:' +\n      arrowAttr +\n      '\\\\.*)?|' +\n      arrowAttr +\n      '\\\\.+)'\n    var arrowLeft = /(?:<{1,2}|\\/{1,2}|\\\\{1,2}|<\\||[#*^+}xo])/.source\n    var arrowRight = /(?:>{1,2}|\\/{1,2}|\\\\{1,2}|\\|>|[#*^+{xo])/.source\n    var arrowPrefix = /[[?]?[ox]?/.source\n    var arrowSuffix = /[ox]?[\\]?]?/.source\n    var arrow =\n      arrowPrefix +\n      '(?:' +\n      arrowBody +\n      arrowRight +\n      '|' +\n      arrowLeft +\n      arrowBody +\n      '(?:' +\n      arrowRight +\n      ')?' +\n      ')' +\n      arrowSuffix\n    Prism.languages['plant-uml'] = {\n      comment: {\n        pattern: /(^[ \\t]*)(?:'.*|\\/'[\\s\\S]*?'\\/)/m,\n        lookbehind: true,\n        greedy: true\n      },\n      preprocessor: {\n        pattern: /(^[ \\t]*)!.*/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'property',\n        inside: {\n          variable: variable\n        }\n      },\n      delimiter: {\n        pattern: /(^[ \\t]*)@(?:end|start)uml\\b/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'punctuation'\n      },\n      arrow: {\n        pattern: RegExp(\n          /(^|[^-.<>?|\\\\[\\]ox])/.source + arrow + /(?![-.<>?|\\\\\\]ox])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'operator',\n        inside: {\n          expression: {\n            pattern: /(\\[)[^[\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /\\[(?=$|\\])|^\\]/\n        }\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      text: {\n        pattern: /(\\[[ \\t]*[\\r\\n]+(?![\\r\\n]))[^\\]]*(?=\\])/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string'\n      },\n      keyword: [\n        {\n          pattern:\n            /^([ \\t]*)(?:abstract\\s+class|end\\s+(?:box|fork|group|merge|note|ref|split|title)|(?:fork|split)(?:\\s+again)?|activate|actor|agent|alt|annotation|artifact|autoactivate|autonumber|backward|binary|boundary|box|break|caption|card|case|circle|class|clock|cloud|collections|component|concise|control|create|critical|database|deactivate|destroy|detach|diamond|else|elseif|end|end[hr]note|endif|endswitch|endwhile|entity|enum|file|folder|footer|frame|group|[hr]?note|header|hexagon|hide|if|interface|label|legend|loop|map|namespace|network|newpage|node|nwdiag|object|opt|package|page|par|participant|person|queue|rectangle|ref|remove|repeat|restore|return|robust|scale|set|show|skinparam|stack|start|state|stop|storage|switch|title|together|usecase|usecase\\/|while)(?=\\s|$)/m,\n          lookbehind: true,\n          greedy: true\n        },\n        /\\b(?:elseif|equals|not|while)(?=\\s*\\()/,\n        /\\b(?:as|is|then)\\b/\n      ],\n      divider: {\n        pattern: /^==.+==$/m,\n        greedy: true,\n        alias: 'important'\n      },\n      time: {\n        pattern: /@(?:\\d+(?:[:/]\\d+){2}|[+-]?\\d+|:[a-z]\\w*(?:[+-]\\d+)?)\\b/i,\n        greedy: true,\n        alias: 'number'\n      },\n      color: {\n        pattern: /#(?:[a-z_]+|[a-fA-F0-9]+)\\b/,\n        alias: 'symbol'\n      },\n      variable: variable,\n      punctuation: /[:,;()[\\]{}]|\\.{3}/\n    }\n    Prism.languages['plant-uml'].arrow.inside.expression.inside =\n      Prism.languages['plant-uml']\n    Prism.languages['plantuml'] = Prism.languages['plant-uml']\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorSql from './sql.js'\nplsql.displayName = 'plsql'\nplsql.aliases = []\n\n/** @type {Syntax} */\nexport default function plsql(Prism) {\n  Prism.register(refractorSql)\n  Prism.languages.plsql = Prism.languages.extend('sql', {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|--.*/,\n      greedy: true\n    },\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html\n    keyword:\n      /\\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\\b/i,\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E\n    operator: /:=?|=>|[<>^~!]=|\\.\\.|\\|\\||\\*\\*|[-+*/%<>=@]/\n  })\n  Prism.languages.insertBefore('plsql', 'operator', {\n    label: {\n      pattern: /<<\\s*\\w+\\s*>>/,\n      alias: 'symbol'\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npowerquery.displayName = 'powerquery'\npowerquery.aliases = ['mscript', 'pq']\n\n/** @type {Syntax} */\nexport default function powerquery(Prism) {\n  // https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\n\n  Prism.languages.powerquery = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'quoted-identifier': {\n      pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:#!)?\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    constant: [\n      /\\bDay\\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\\b/,\n      /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/,\n      /\\bOccurrence\\.(?:All|First|Last)\\b/,\n      /\\bOrder\\.(?:Ascending|Descending)\\b/,\n      /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/,\n      /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/,\n      /\\bQuoteStyle\\.(?:Csv|None)\\b/,\n      /\\bJoinKind\\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\\b/,\n      /\\bGroupKind\\.(?:Global|Local)\\b/,\n      /\\bExtraValues\\.(?:Error|Ignore|List)\\b/,\n      /\\bJoinAlgorithm\\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\\b/,\n      /\\bJoinSide\\.(?:Left|Right)\\b/,\n      /\\bPrecision\\.(?:Decimal|Double)\\b/,\n      /\\bRelativePosition\\.From(?:End|Start)\\b/,\n      /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\\b/,\n      /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/,\n      /\\bnull\\b/\n    ],\n    boolean: /\\b(?:false|true)\\b/,\n    keyword:\n      /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\n    function: {\n      pattern: /(^|[^#\\w.])[a-z_][\\w.]*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    'data-type': {\n      pattern:\n        /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\\b/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n      lookbehind: true\n    },\n    operator: /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\n    punctuation: /[,;\\[\\](){}]/\n  }\n  Prism.languages.pq = Prism.languages['powerquery']\n  Prism.languages.mscript = Prism.languages['powerquery']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npowershell.displayName = 'powershell'\npowershell.aliases = []\n\n/** @type {Syntax} */\nexport default function powershell(Prism) {\n  ;(function (Prism) {\n    var powershell = (Prism.languages.powershell = {\n      comment: [\n        {\n          pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^`])#.*/,\n          lookbehind: true\n        }\n      ],\n      string: [\n        {\n          pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern: /'(?:[^']|'')*'/,\n          greedy: true\n        }\n      ],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\n      boolean: /\\$(?:false|true)\\b/i,\n      variable: /\\$\\w+\\b/,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [\n        /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\n        /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n      ],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword:\n        /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern:\n          /(^|\\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n    })\n\n    // Variable interpolation inside strings, and nested expressions\n    powershell.string[0].inside = {\n      function: {\n        // Allow for one level of nesting\n        pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n        lookbehind: true,\n        inside: powershell\n      },\n      boolean: powershell.boolean,\n      variable: powershell.variable\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nprocessing.displayName = 'processing'\nprocessing.aliases = []\n\n/** @type {Syntax} */\nexport default function processing(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword:\n      /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nprolog.displayName = 'prolog'\nprolog.aliases = []\n\n/** @type {Syntax} */\nexport default function prolog(Prism) {\n  Prism.languages.prolog = {\n    // Syntax depends on the implementation\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\n    string: {\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\n      greedy: true\n    },\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n    number: /\\b\\d+(?:\\.\\d*)?/,\n    // Custom operators are allowed\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n    punctuation: /[(){}\\[\\],]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npromql.displayName = 'promql'\npromql.aliases = []\n\n/** @type {Syntax} */\nexport default function promql(Prism) {\n  // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\n  // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\n\n  ;(function (Prism) {\n    // PromQL Aggregation Operators\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\n    var aggregations = [\n      'sum',\n      'min',\n      'max',\n      'avg',\n      'group',\n      'stddev',\n      'stdvar',\n      'count',\n      'count_values',\n      'bottomk',\n      'topk',\n      'quantile'\n    ]\n\n    // PromQL vector matching + the by and without clauses\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\n    var vectorMatching = [\n      'on',\n      'ignoring',\n      'group_right',\n      'group_left',\n      'by',\n      'without'\n    ]\n\n    // PromQL offset modifier\n    // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\n    var offsetModifier = ['offset']\n    var keywords = aggregations.concat(vectorMatching, offsetModifier)\n    Prism.languages.promql = {\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      'vector-match': {\n        // Match the comma-separated label lists inside vector matching:\n        pattern: new RegExp(\n          '((?:' + vectorMatching.join('|') + ')\\\\s*)\\\\([^)]*\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          'label-key': {\n            pattern: /\\b[^,]+\\b/,\n            alias: 'attr-name'\n          },\n          punctuation: /[(),]/\n        }\n      },\n      'context-labels': {\n        pattern: /\\{[^{}]*\\}/,\n        inside: {\n          'label-key': {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n            alias: 'attr-name'\n          },\n          'label-value': {\n            pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n            greedy: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\{|\\}|=~?|![=~]|,/\n        }\n      },\n      'context-range': [\n        {\n          pattern: /\\[[\\w\\s:]+\\]/,\n          // [1m]\n          inside: {\n            punctuation: /\\[|\\]|:/,\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        },\n        {\n          pattern: /(\\boffset\\s+)\\w+/,\n          // offset 1m\n          lookbehind: true,\n          inside: {\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        }\n      ],\n      keyword: new RegExp('\\\\b(?:' + keywords.join('|') + ')\\\\b', 'i'),\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      number:\n        /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n      operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\n      punctuation: /[{};()`,.[\\]]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nproperties.displayName = 'properties'\nproperties.aliases = []\n\n/** @type {Syntax} */\nexport default function properties(Prism) {\n  Prism.languages.properties = {\n    comment: /^[ \\t]*[#!].*$/m,\n    value: {\n      pattern:\n        /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?: *[=:] *(?! )| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    key: {\n      pattern: /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?= *[=:]| )/m,\n      alias: 'attr-name'\n    },\n    punctuation: /[=:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nprotobuf.displayName = 'protobuf'\nprotobuf.aliases = []\n\n/** @type {Syntax} */\nexport default function protobuf(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var builtinTypes =\n      /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n          lookbehind: true\n        }\n      ],\n      keyword:\n        /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n    })\n    Prism.languages.insertBefore('protobuf', 'operator', {\n      map: {\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /[<>.,]/,\n          builtin: builtinTypes\n        }\n      },\n      builtin: builtinTypes,\n      'positional-class-name': {\n        pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      annotation: {\n        pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n        lookbehind: true\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nstylus.displayName = 'stylus'\nstylus.aliases = []\n\n/** @type {Syntax} */\nexport default function stylus(Prism) {\n  ;(function (Prism) {\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n      lookbehind: true\n    }\n    // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    var inside = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n        greedy: true\n      },\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      color: [\n        /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      number: number,\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      'atrule-declaration': {\n        pattern: /(^[ \\t]*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern:\n          /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern:\n          /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          comment: inside.comment,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkupTemplating from './markup-templating.js'\ntwig.displayName = 'twig'\ntwig.aliases = []\n\n/** @type {Syntax} */\nexport default function twig(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.twig = {\n    comment: /^\\{#[\\s\\S]*?#\\}$/,\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      }\n    },\n    keyword: /\\b(?:even|if|odd)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (env.language !== 'twig') {\n      return\n    }\n    var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'twig', pattern)\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'twig')\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\nimport refractorMarkup from './markup.js'\npug.displayName = 'pug'\npug.aliases = []\n\n/** @type {Syntax} */\nexport default function pug(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    // TODO:\n    // - Add CSS highlighting inside <style> tags\n    // - Add support for multi-line code blocks\n    // - Add support for interpolation #{} and !{}\n    // - Add support for tag interpolation #[]\n    // - Add explicit support for plain text using |\n    // - Add support for markup embedded in plain text\n\n    Prism.languages.pug = {\n      // Multiline stuff should appear before the rest\n\n      // This handles both single-line and multi-line comments\n      comment: {\n        pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n        lookbehind: true\n      },\n      // All the tag-related part is in lookbehind\n      // so that it can be highlighted by the \"tag\" pattern\n      'multiline-script': {\n        pattern:\n          /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          },\n          text: /\\S[\\s\\S]*/\n        }\n      },\n      'multiline-plain-text': {\n        pattern:\n          /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true\n      },\n      markup: {\n        pattern: /(^[\\t ]*)<.+/m,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n        lookbehind: true\n      },\n      // This handle all conditional and loop keywords\n      'flow-control': {\n        pattern:\n          /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n        lookbehind: true,\n        inside: {\n          each: {\n            pattern: /^each .+? in\\b/,\n            inside: {\n              keyword: /\\b(?:each|in)\\b/,\n              punctuation: /,/\n            }\n          },\n          branch: {\n            pattern: /^(?:case|default|else|if|unless|when|while)\\b/,\n            alias: 'keyword'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      keyword: {\n        pattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\n        lookbehind: true\n      },\n      mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        },\n        // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }\n      ],\n      script: {\n        pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      'plain-text': {\n        pattern:\n          /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: Prism.languages.javascript\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: Prism.languages.javascript\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }\n          ],\n          punctuation: /:/,\n          'attr-id': /#[\\w\\-]+/,\n          'attr-class': /\\.[\\w\\-]+/\n        }\n      },\n      code: [\n        {\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: Prism.languages.javascript\n        }\n      ],\n      punctuation: /[.\\-!=|]+/\n    }\n    var filter_pattern =\n      /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/\n        .source\n\n    // Non exhaustive list of available filters and associated languages\n    var filters = [\n      {\n        filter: 'atpl',\n        language: 'twig'\n      },\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'ejs',\n      'handlebars',\n      'less',\n      'livescript',\n      'markdown',\n      {\n        filter: 'sass',\n        language: 'scss'\n      },\n      'stylus'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('<filter_name>', function () {\n              return filter.filter\n            }),\n            'm'\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            text: {\n              pattern: /\\S[\\s\\S]*/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('pug', 'filter', all_filters)\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npuppet.displayName = 'puppet'\npuppet.aliases = []\n\n/** @type {Syntax} */\nexport default function puppet(Prism) {\n  ;(function (Prism) {\n    Prism.languages.puppet = {\n      heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern:\n            /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n            // See interpolation below\n          }\n        },\n        // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern:\n            /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        },\n        // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }\n      ],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern:\n          /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern:\n          /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {\n              // See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n      function: [\n        {\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n      ],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:false|true)\\b/,\n      // Includes words reserved for future use\n      keyword:\n        /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern:\n          /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator:\n        /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    }\n    var interpolation = [\n      {\n        // Allow for one nested level of braces inside interpolation\n        pattern:\n          /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      },\n      {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }\n    ]\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\n    Prism.languages.puppet['string'].inside[\n      'double-quoted'\n    ].inside.interpolation = interpolation\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npure.displayName = 'pure'\npure.aliases = []\n\n/** @type {Syntax} */\nexport default function pure(Prism) {\n  ;(function (Prism) {\n    // https://agraef.github.io/pure-docs/pure.html#lexical-matters\n\n    Prism.languages.pure = {\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        },\n        /#!.+/\n      ],\n      'inline-lang': {\n        pattern: /%<[\\s\\S]+?%>/,\n        greedy: true,\n        inside: {\n          lang: {\n            pattern: /(^%< *)-\\*-.+?-\\*-/,\n            lookbehind: true,\n            alias: 'comment'\n          },\n          delimiter: {\n            pattern: /^%<.*|%>$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      number: {\n        // The look-behind prevents wrong highlighting of the .. operator\n        pattern:\n          /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?L?)/i,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n      function:\n        /\\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n      special: {\n        pattern: /\\b__[a-z]+__\\b/i,\n        alias: 'builtin'\n      },\n      // Any combination of operator chars can be an operator\n      // eslint-disable-next-line no-misleading-character-class\n      operator:\n        /(?:[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\n      // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n      punctuation: /[(){}\\[\\];,|]/\n    }\n    var inlineLanguages = [\n      'c',\n      {\n        lang: 'c++',\n        alias: 'cpp'\n      },\n      'fortran'\n    ]\n    var inlineLanguageRe = /%< *-\\*- *<lang>\\d* *-\\*-[\\s\\S]+?%>/.source\n    inlineLanguages.forEach(function (lang) {\n      var alias = lang\n      if (typeof lang !== 'string') {\n        alias = lang.alias\n        lang = lang.lang\n      }\n      if (Prism.languages[alias]) {\n        var o = {}\n        o['inline-lang-' + alias] = {\n          pattern: RegExp(\n            inlineLanguageRe.replace(\n              '<lang>',\n              lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')\n            ),\n            'i'\n          ),\n          inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n        }\n        o['inline-lang-' + alias].inside.rest = Prism.util.clone(\n          Prism.languages[alias]\n        )\n        Prism.languages.insertBefore('pure', 'inline-lang', o)\n      }\n    })\n\n    // C is the default inline language\n    if (Prism.languages.c) {\n      Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(\n        Prism.languages.c\n      )\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\npurebasic.displayName = 'purebasic'\npurebasic.aliases = ['pbfasm']\n\n/** @type {Syntax} */\nexport default function purebasic(Prism) {\n  Prism.register(refractorClike)\n  /*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n\n  // PureBasic support, steal stuff from ansi-c\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\n    comment: /;.*/,\n    keyword:\n      /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n    number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n    operator:\n      /(?:@\\*?|\\?|\\*)\\w+\\$?|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n  })\n  Prism.languages.insertBefore('purebasic', 'keyword', {\n    tag: /#\\w+\\$?/,\n    asm: {\n      pattern: /(^[\\t ]*)!.*/m,\n      lookbehind: true,\n      alias: 'tag',\n      inside: {\n        comment: /;.*/,\n        string: {\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        // Anonymous label references, i.e.: jmp @b\n        'label-reference-anonymous': {\n          pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        // Named label reference, i.e.: jne label1\n        'label-reference-addressed': {\n          pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        keyword: [\n          /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n          /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\n        ],\n        function: {\n          pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n          lookbehind: true\n        },\n        'function-inline': {\n          pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n          lookbehind: true,\n          alias: 'function'\n        },\n        label: {\n          pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        register:\n          /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\n        number:\n          /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n      }\n    }\n  })\n  delete Prism.languages.purebasic['class-name']\n  delete Prism.languages.purebasic['boolean']\n  Prism.languages.pbfasm = Prism.languages['purebasic']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorHaskell from './haskell.js'\npurescript.displayName = 'purescript'\npurescript.aliases = ['purs']\n\n/** @type {Syntax} */\nexport default function purescript(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.purescript = Prism.languages.extend('haskell', {\n    keyword:\n      /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b|∀/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin functions only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\n    operator: [\n      // Infix operators\n      Prism.languages.haskell.operator[0],\n      // ASCII operators\n      Prism.languages.haskell.operator[2],\n      // All UTF16 Unicode operator symbols\n      // This regex is equivalent to /(?=[\\x80-\\uFFFF])[\\p{gc=Math_Symbol}\\p{gc=Currency_Symbol}\\p{Modifier_Symbol}\\p{Other_Symbol}]/u\n      // See https://github.com/PrismJS/prism/issues/3006 for more details.\n      /[\\xa2-\\xa6\\xa8\\xa9\\xac\\xae-\\xb1\\xb4\\xb8\\xd7\\xf7\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u03f6\\u0482\\u058d-\\u058f\\u0606-\\u0608\\u060b\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u07fe\\u07ff\\u09f2\\u09f3\\u09fa\\u09fb\\u0af1\\u0b70\\u0bf3-\\u0bfa\\u0c7f\\u0d4f\\u0d79\\u0e3f\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1390-\\u1399\\u166d\\u17db\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u20a0-\\u20bf\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u218a\\u218b\\u2190-\\u2307\\u230c-\\u2328\\u232b-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b73\\u2b76-\\u2b95\\u2b97-\\u2bff\\u2ce5-\\u2cea\\u2e50\\u2e51\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u309b\\u309c\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ua828-\\ua82b\\ua836-\\ua839\\uaa77-\\uaa79\\uab5b\\uab6a\\uab6b\\ufb29\\ufbb2-\\ufbc1\\ufdfc\\ufdfd\\ufe62\\ufe64-\\ufe66\\ufe69\\uff04\\uff0b\\uff1c-\\uff1e\\uff3e\\uff40\\uff5c\\uff5e\\uffe0-\\uffe6\\uffe8-\\uffee\\ufffc\\ufffd]/\n    ]\n  })\n  Prism.languages.purs = Prism.languages.purescript\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nqsharp.displayName = 'qsharp'\nqsharp.aliases = ['qs']\n\n/** @type {Syntax} */\nexport default function qsharp(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    }\n\n    // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\n    // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero',\n      // all other keywords\n      other:\n        'Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within'\n    }\n    // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var keywords = RegExp(\n      keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.other)\n    )\n\n    // types\n    var identifier = /\\b[A-Za-z_]\\w*\\b/.source\n    var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [identifier])\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    }\n\n    // strings\n    var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source\n    Prism.languages.qsharp = Prism.languages.extend('clike', {\n      comment: /\\/\\/.*/,\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // open Microsoft.Quantum.Canon;\n          // open Microsoft.Quantum.Canon as CN;\n          pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\n            qualifiedName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // namespace Quantum.App1;\n          pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [qualifiedName]),\n          lookbehind: true,\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      number:\n        /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n      operator:\n        /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n      punctuation: /::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('qsharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n\n    // single line\n    var interpolationExpr = nested(\n      replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [regularString]),\n      2\n    )\n    Prism.languages.insertBefore('qsharp', 'string', {\n      'interpolation-string': {\n        pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [interpolationExpr]),\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\n              interpolationExpr\n            ]),\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\{|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                alias: 'language-qsharp',\n                inside: Prism.languages.qsharp\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n  })(Prism)\n  Prism.languages.qs = Prism.languages.qsharp\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nq.displayName = 'q'\nq.aliases = []\n\n/** @type {Syntax} */\nexport default function q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern:\n          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      },\n      {\n        pattern: /^#!.+/m,\n        greedy: true\n      }\n    ],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern:\n        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number:\n      /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword:\n      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\nqml.displayName = 'qml'\nqml.aliases = []\n\n/** @type {Syntax} */\nexport default function qml(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\n    var jsExpr =\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\n        .replace(/<string>/g, function () {\n          return jsString\n        })\n        .replace(/<comment>/g, function () {\n          return jsComment\n        })\n\n    // the pattern will blow up, so only a few iterations\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr\n      })\n    }\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [\n        {\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^property/,\n            property: /\\w+(?:\\.\\w+)*/\n          }\n        }\n      ],\n      'javascript-expression': {\n        pattern: RegExp(\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nqore.displayName = 'qore'\nqore.aliases = []\n\n/** @type {Syntax} */\nexport default function qore(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\n    number:\n      /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorScheme from './scheme.js'\nracket.displayName = 'racket'\nracket.aliases = ['rkt']\n\n/** @type {Syntax} */\nexport default function racket(Prism) {\n  Prism.register(refractorScheme)\n  Prism.languages.racket = Prism.languages.extend('scheme', {\n    'lambda-parameter': {\n      // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n      // this will just prevent false positives of the `function` pattern\n      pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('racket', 'string', {\n    lang: {\n      pattern: /^#lang.+/m,\n      greedy: true,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.rkt = Prism.languages.racket\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorCsharp from './csharp.js'\nimport refractorMarkup from './markup.js'\ncshtml.displayName = 'cshtml'\ncshtml.aliases = ['razor']\n\n/** @type {Syntax} */\nexport default function cshtml(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.register(refractorMarkup)\n  // Docs:\n  // https://docs.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-5.0&tabs=visual-studio\n  // https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-5.0\n\n  ;(function (Prism) {\n    var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//\n      .source\n    var stringLike =\n      /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source +\n      '|' +\n      /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source\n\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<self>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern\n        .replace(/<self>/g, '[^\\\\s\\\\S]')\n        .replace(/<str>/g, '(?:' + stringLike + ')')\n        .replace(/<comment>/g, '(?:' + commentLike + ')')\n    }\n    var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2)\n    var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 1)\n    var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2)\n    var angle = nested(/<(?:[^<>'\"@/]|<comment>|<self>)*>/.source, 1)\n    var inlineCs =\n      /@/.source +\n      /(?:await\\b\\s*)?/.source +\n      '(?:' +\n      /(?!await\\b)\\w+\\b/.source +\n      '|' +\n      round +\n      ')' +\n      '(?:' +\n      /[?!]?\\.\\w+\\b/.source +\n      '|' +\n      '(?:' +\n      angle +\n      ')?' +\n      round +\n      '|' +\n      square +\n      ')*' +\n      /(?![?!\\.(\\[]|<(?!\\/))/.source\n\n    // Note about the above bracket patterns:\n    // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\n    // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\n    // messes up the bracket and string counting implemented by the above patterns.\n    //\n    // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\n    // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\n    // complexity of an HTML expression.\n    //\n    // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\n    // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\n\n    var tagAttrInlineCs = /@(?![\\w()])/.source + '|' + inlineCs\n    var tagAttrValue =\n      '(?:' +\n      /\"[^\"@]*\"|'[^'@]*'|[^\\s'\"@>=]+(?=[\\s>])/.source +\n      '|' +\n      '[\"\\'][^\"\\'@]*(?:(?:' +\n      tagAttrInlineCs +\n      ')[^\"\\'@]*)+[\"\\']' +\n      ')'\n    var tagAttrs =\n      /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*<tagAttrValue>|(?=[\\s/>])))+)?/.source.replace(\n        /<tagAttrValue>/,\n        tagAttrValue\n      )\n    var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source\n    var tagRegion =\n      /\\B@?/.source +\n      '(?:' +\n      /<([a-zA-Z][\\w:]*)/.source +\n      tagAttrs +\n      /\\s*>/.source +\n      '(?:' +\n      (/[^<]/.source +\n        '|' +\n        // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source +\n        tagContent +\n        '|' +\n        // nested start tag\n        nested(\n          // eslint-disable-next-line regexp/strict\n          /<\\1/.source +\n            tagAttrs +\n            /\\s*>/.source +\n            '(?:' +\n            (/[^<]/.source +\n              '|' +\n              // all tags that are not the start tag\n              // eslint-disable-next-line regexp/strict\n              /<\\/?(?!\\1\\b)/.source +\n              tagContent +\n              '|' +\n              '<self>') +\n            ')*' +\n            // eslint-disable-next-line regexp/strict\n            /<\\/\\1\\s*>/.source,\n          2\n        )) +\n      ')*' +\n      // eslint-disable-next-line regexp/strict\n      /<\\/\\1\\s*>/.source +\n      '|' +\n      /</.source +\n      tagContent +\n      ')'\n\n    // Now for the actual language definition(s):\n    //\n    // Razor as a language has 2 parts:\n    //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\n    //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\n    //\n    // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\n    // other. However, only CSHTML will be exported via `Prism.languages`.\n\n    Prism.languages.cshtml = Prism.languages.extend('markup', {})\n    var csharpWithHtml = Prism.languages.insertBefore(\n      'csharp',\n      'string',\n      {\n        html: {\n          pattern: RegExp(tagRegion),\n          greedy: true,\n          inside: Prism.languages.cshtml\n        }\n      },\n      {\n        csharp: Prism.languages.extend('csharp', {})\n      }\n    )\n    var cs = {\n      pattern: /\\S[\\s\\S]*/,\n      alias: 'language-csharp',\n      inside: csharpWithHtml\n    }\n    var inlineValue = {\n      pattern: RegExp(/(^|[^@])/.source + inlineCs),\n      lookbehind: true,\n      greedy: true,\n      alias: 'variable',\n      inside: {\n        keyword: /^@/,\n        csharp: cs\n      }\n    }\n    Prism.languages.cshtml.tag.pattern = RegExp(/<\\/?/.source + tagContent)\n    Prism.languages.cshtml.tag.inside['attr-value'].pattern = RegExp(\n      /=\\s*/.source + tagAttrValue\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        value: inlineValue\n      },\n      Prism.languages.cshtml.tag.inside['attr-value']\n    )\n    Prism.languages.insertBefore('cshtml', 'prolog', {\n      'razor-comment': {\n        pattern: /@\\*[\\s\\S]*?\\*@/,\n        greedy: true,\n        alias: 'comment'\n      },\n      block: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            '(?:' +\n            [\n              // @{ ... }\n              curly,\n              // @code{ ... }\n              /(?:code|functions)\\s*/.source + curly,\n              // @for (...) { ... }\n              /(?:for|foreach|lock|switch|using|while)\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly,\n              // @do { ... } while (...);\n              /do\\s*/.source +\n                curly +\n                /\\s*while\\s*/.source +\n                round +\n                /(?:\\s*;)?/.source,\n              // @try { ... } catch (...) { ... } finally { ... }\n              /try\\s*/.source +\n                curly +\n                /\\s*catch\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                /\\s*finally\\s*/.source +\n                curly,\n              // @if (...) {...} else if (...) {...} else {...}\n              /if\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                '(?:' +\n                /\\s*else/.source +\n                '(?:' +\n                /\\s+if\\s*/.source +\n                round +\n                ')?' +\n                /\\s*/.source +\n                curly +\n                ')*',\n              // @helper Ident(params) { ... }\n              /helper\\s+\\w+\\s*/.source + round + /\\s*/.source + curly\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w*/,\n          csharp: cs\n        }\n      },\n      directive: {\n        pattern:\n          /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w+/,\n          csharp: cs\n        }\n      },\n      value: inlineValue,\n      'delegate-operator': {\n        pattern: /(^|[^@])@(?=<)/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.razor = Prism.languages.cshtml\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\nimport refractorMarkup from './markup.js'\njsx.displayName = 'jsx'\njsx.aliases = []\n\n/** @type {Syntax} */\nexport default function jsx(Prism) {\n  Prism.register(refractorJavascript)\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript)\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source\n\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<S>/g, function () {\n          return space\n        })\n        .replace(/<BRACES>/g, function () {\n          return braces\n        })\n        .replace(/<SPREAD>/g, function () {\n          return spread\n        })\n      return RegExp(source, flags)\n    }\n    spread = re(spread).source\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n    Prism.languages.jsx.tag.pattern = re(\n      /<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/\n        .source\n    )\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/\n    Prism.languages.jsx.tag.inside['attr-value'].pattern =\n      /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] =\n      /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment']\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-name',\n      {\n        spread: {\n          pattern: re(/<SPREAD>/.source),\n          inside: Prism.languages.jsx\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'special-attr',\n      {\n        script: {\n          // Allow for two levels of nesting\n          pattern: re(/=<BRACES>/.source),\n          alias: 'language-javascript',\n          inside: {\n            'script-punctuation': {\n              pattern: /^=(?=\\{)/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.jsx\n          }\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n\n    // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (!token) {\n        return ''\n      }\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{'\n          ) {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token)\n\n            // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            tokens[i] = new Prism.Token(\n              'plain-text',\n              plainText,\n              null,\n              plainText\n            )\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJsx from './jsx.js'\nimport refractorTypescript from './typescript.js'\ntsx.displayName = 'tsx'\ntsx.aliases = []\n\n/** @type {Syntax} */\nexport default function tsx(Prism) {\n  Prism.register(refractorJsx)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript)\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript)\n\n    // doesn't work with TS because TS is too complex\n    delete Prism.languages.tsx['parameter']\n    delete Prism.languages.tsx['literal-property']\n\n    // This will prevent collisions between TSX tags and TS generic types.\n    // Idea by https://github.com/karlhorky\n    // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n    var tag = Prism.languages.tsx.tag\n    tag.pattern = RegExp(\n      /(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')',\n      tag.pattern.flags\n    )\n    tag.lookbehind = true\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nreason.displayName = 'reason'\nreason.aliases = []\n\n/** @type {Syntax} */\nexport default function reason(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword:\n      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    char: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      greedy: true\n    },\n    // Negative look-ahead prevents from matching things like String.capitalize\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  })\n\n  // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nrego.displayName = 'rego'\nrego.aliases = []\n\n/** @type {Syntax} */\nexport default function rego(Prism) {\n  // https://www.openpolicyagent.org/docs/latest/policy-reference/\n\n  Prism.languages.rego = {\n    comment: /#.*/,\n    property: {\n      pattern:\n        /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|default|else|import|not|null|package|set(?=\\s*\\()|some|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n      inside: {\n        namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n        punctuation: /\\./\n      }\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n    punctuation: /[,;.\\[\\]{}()]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nrenpy.displayName = 'renpy'\nrenpy.aliases = ['rpy']\n\n/** @type {Syntax} */\nexport default function renpy(Prism) {\n  Prism.languages.renpy = {\n    comment: {\n      pattern: /(^|[^\\\\])#.+/,\n      lookbehind: true\n    },\n    string: {\n      pattern:\n        /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\])*\\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,\n      greedy: true\n    },\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    property:\n      /\\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\\b/,\n    tag: /\\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\\b|\\$/,\n    keyword:\n      /\\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\\b/,\n    boolean: /\\b(?:[Ff]alse|[Tt]rue)\\b/,\n    number:\n      /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n    operator:\n      /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:and|at|not|or|with)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.rpy = Prism.languages.renpy\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nrescript.displayName = 'rescript'\nrescript.aliases = ['res']\n\n/** @type {Syntax} */\nexport default function rescript(Prism) {\n  Prism.languages.rescript = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\r\\n\\\\]|\\\\(?:.|\\w+))'/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    'class-name': /\\b[A-Z]\\w*|@[a-z.]*|#[A-Za-z]\\w*|#\\d/,\n    function: {\n      pattern: /[a-zA-Z]\\w*(?=\\()|(\\.)[a-z]\\w*/,\n      lookbehind: true\n    },\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    boolean: /\\b(?:false|true)\\b/,\n    'attr-value': /[A-Za-z]\\w*(?==)/,\n    constant: {\n      pattern: /(\\btype\\s+)[a-z]\\w*/,\n      lookbehind: true\n    },\n    tag: {\n      pattern: /(<)[a-z]\\w*|(?:<\\/)[a-z]\\w*/,\n      lookbehind: true,\n      inside: {\n        operator: /<|>|\\//\n      }\n    },\n    keyword:\n      /\\b(?:and|as|assert|begin|bool|class|constraint|do|done|downto|else|end|exception|external|float|for|fun|function|if|in|include|inherit|initializer|int|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|string|switch|then|to|try|type|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]?|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/,\n    punctuation: /[(){}[\\],;.]/\n  }\n  Prism.languages.insertBefore('rescript', 'string', {\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.rescript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.res = Prism.languages.rescript\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nrest.displayName = 'rest'\nrest.aliases = []\n\n/** @type {Syntax} */\nexport default function rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern:\n          /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n\n    'substitution-def': {\n      pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( )(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern:\n        /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern:\n          /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation:\n            /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      },\n      // Underlined only\n      {\n        pattern:\n          /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern:\n        /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern:\n        /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern:\n        /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern:\n        /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern:\n          /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern:\n          /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nrip.displayName = 'rip'\nrip.aliases = []\n\n/** @type {Syntax} */\nexport default function rip(Prism) {\n  Prism.languages.rip = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    regex: {\n      pattern:\n        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nroboconf.displayName = 'roboconf'\nroboconf.aliases = []\n\n/** @type {Syntax} */\nexport default function roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern:\n        /(^|\\s)(?:(?:external|import)\\b|(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{))/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*(?![ \\t]))[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = ['robot']\n\n/** @type {Syntax} */\nexport default function robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      }\n\n      // copy inside tokens\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nsas.displayName = 'sas'\nsas.aliases = []\n\n/** @type {Syntax} */\nexport default function sas(Prism) {\n  ;(function (Prism) {\n    var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source\n    var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i\n    var numericConstant = {\n      pattern: RegExp(stringPattern + '[bx]'),\n      alias: 'number'\n    }\n    var macroVariable = {\n      pattern: /&[a-z_]\\w*/i\n    }\n    var macroKeyword = {\n      pattern:\n        /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var step = {\n      pattern: /(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,\n      alias: 'keyword',\n      lookbehind: true\n    }\n    var comment = [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n        lookbehind: true\n      }\n    ]\n    var string = {\n      pattern: RegExp(stringPattern),\n      greedy: true\n    }\n    var punctuation = /[$%@.(){}\\[\\];,\\\\]/\n    var func = {\n      pattern: /%?\\b\\w+(?=\\()/,\n      alias: 'keyword'\n    }\n    var args = {\n      function: func,\n      'arg-value': {\n        pattern: /(=\\s*)[A-Z\\.]+/i,\n        lookbehind: true\n      },\n      operator: /=/,\n      'macro-variable': macroVariable,\n      arg: {\n        pattern: /[A-Z]+/i,\n        alias: 'keyword'\n      },\n      number: number,\n      'numeric-constant': numericConstant,\n      punctuation: punctuation,\n      string: string\n    }\n    var format = {\n      pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/i,\n      inside: {\n        keyword: /^(?:format|put)(?==)/i,\n        equals: /=/,\n        format: {\n          pattern: /(?:\\w|\\$\\d)+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var altformat = {\n      pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n      inside: {\n        keyword: /^(?:format|put)/i,\n        format: {\n          pattern: /[\\w$]+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var globalStatements = {\n      pattern:\n        /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var submitStatement = {\n      pattern: /(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var actionSets =\n      /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/\n        .source\n    var casActions = {\n      pattern: RegExp(\n        /(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(\n          /<act>/g,\n          function () {\n            return actionSets\n          }\n        ),\n        'i'\n      ),\n      lookbehind: true,\n      inside: {\n        keyword: RegExp(\n          /(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\n            return actionSets\n          }),\n          'i'\n        ),\n        action: {\n          pattern: /(?:action)/i,\n          alias: 'keyword'\n        },\n        comment: comment,\n        function: func,\n        'arg-value': args['arg-value'],\n        operator: args.operator,\n        argument: args.arg,\n        number: number,\n        'numeric-constant': numericConstant,\n        punctuation: punctuation,\n        string: string\n      }\n    }\n    var keywords = {\n      pattern:\n        /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\n      lookbehind: true\n    }\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(?:cards|(?:data)?lines)/i\n          },\n          punctuation: /;/\n        }\n      },\n      'proc-sql': {\n        pattern:\n          /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          sql: {\n            pattern: RegExp(\n              /^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            alias: 'language-sql',\n            inside: Prism.languages.sql\n          },\n          'global-statements': globalStatements,\n          'sql-statements': {\n            pattern:\n              /(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-groovy': {\n        pattern:\n          /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          groovy: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-groovy',\n            inside: Prism.languages.groovy\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-lua': {\n        pattern:\n          /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          lua: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-lua',\n            inside: Prism.languages.lua\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-cas': {\n        pattern:\n          /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          'statement-var': {\n            pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n            lookbehind: true,\n            inside: {\n              statement: {\n                pattern: /^saveresult\\s+\\S+/i,\n                inside: {\n                  keyword: /^(?:saveresult)/i\n                }\n              },\n              rest: args\n            }\n          },\n          'cas-actions': casActions,\n          statement: {\n            pattern:\n              /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n            lookbehind: true,\n            inside: args\n          },\n          step: step,\n          keyword: keywords,\n          function: func,\n          format: format,\n          altformat: altformat,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-args': {\n        pattern: RegExp(\n          /(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(\n            /<str>/g,\n            function () {\n              return stringPattern\n            }\n          ),\n          'im'\n        ),\n        lookbehind: true,\n        inside: args\n      },\n      /*Special keywords within macros*/\n      'macro-keyword': macroKeyword,\n      'macro-variable': macroVariable,\n      'macro-string-functions': {\n        pattern:\n          /((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\n            alias: 'keyword'\n          },\n          'macro-keyword': macroKeyword,\n          'macro-variable': macroVariable,\n          'escaped-char': {\n            pattern: /%['\"()<>=¬^~;,#]/\n          },\n          punctuation: punctuation\n        }\n      },\n      'macro-declaration': {\n        pattern: /^%macro[^;]+(?=;)/im,\n        inside: {\n          keyword: /%macro/i\n        }\n      },\n      'macro-end': {\n        pattern: /^%mend[^;]+(?=;)/im,\n        inside: {\n          keyword: /%mend/i\n        }\n      },\n      /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n      macro: {\n        pattern: /%_\\w+(?=\\()/,\n        alias: 'keyword'\n      },\n      input: {\n        pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n        inside: {\n          input: {\n            alias: 'keyword',\n            pattern: /^input/i\n          },\n          comment: comment,\n          number: number,\n          'numeric-constant': numericConstant\n        }\n      },\n      'options-args': {\n        pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n        lookbehind: true,\n        inside: args\n      },\n      'cas-actions': casActions,\n      comment: comment,\n      function: func,\n      format: format,\n      altformat: altformat,\n      'numeric-constant': numericConstant,\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: RegExp(stringPattern + '(?:dt?|t)'),\n        alias: 'number'\n      },\n      string: string,\n      step: step,\n      keyword: keywords,\n      // In SAS Studio syntax highlighting, these operators are styled like keywords\n      'operator-keyword': {\n        pattern: /\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\n        alias: 'operator'\n      },\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: number,\n      operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,\n      punctuation: punctuation\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorBash from './bash.js'\nshellSession.displayName = 'shell-session'\nshellSession.aliases = ['sh-session', 'shellsession']\n\n/** @type {Syntax} */\nexport default function shellSession(Prism) {\n  Prism.register(refractorBash)\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n\n    var strings = [\n      // normal string\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n      /'[^']*'/.source,\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source,\n      // here doc\n      // 2 capturing groups\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp(\n          // user info\n          /^/.source +\n            '(?:' +\n            // <user> \":\" ( <path> )?\n            (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/\n              .source +\n              '|' +\n              // <path>\n              // Since the path pattern is quite general, we will require it to start with a special character to\n              // prevent false positives.\n              /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) +\n            ')?' +\n            // shell symbol\n            /[$#%](?=\\s)/.source +\n            // bash command\n            /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(\n              /<<str>>/g,\n              function () {\n                return strings\n              }\n            ),\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    }\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\n      Prism.languages['shell-session']\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nsmali.displayName = 'smali'\nsmali.aliases = []\n\n/** @type {Syntax} */\nexport default function smali(Prism) {\n  // Test files for the parser itself:\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n\n  Prism.languages.smali = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n      lookbehind: true,\n      inside: {\n        'class-name': {\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n          lookbehind: true\n        },\n        namespace: {\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\//\n          }\n        },\n        builtin: /^L/\n      }\n    },\n    builtin: [\n      {\n        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n        pattern: /([();\\[])[BCDFIJSVZ]+/,\n        lookbehind: true\n      },\n      {\n        // e.g. .field mWifiOnUid:I\n        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /(\\.end\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n      lookbehind: true\n    },\n    field: {\n      pattern: /[\\w$]+(?=:)/,\n      alias: 'variable'\n    },\n    register: {\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    boolean: {\n      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n      lookbehind: true\n    },\n    label: {\n      pattern: /(:)\\w+/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    operator: /->|\\.\\.|[\\[=]/,\n    punctuation: /[{}(),;:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nsmalltalk.displayName = 'smalltalk'\nsmalltalk.aliases = []\n\n/** @type {Syntax} */\nexport default function smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$./,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'])*'/,\n      greedy: true\n    },\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:new|nil|self|super)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: [\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n    ],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkupTemplating from './markup-templating.js'\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\n\n/** @type {Syntax} */\nexport default function smarty(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.smarty = {\n      comment: {\n        pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n        greedy: true\n      },\n      'embedded-php': {\n        pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n        greedy: true,\n        inside: {\n          smarty: {\n            pattern: /^\\{php\\}|\\{\\/php\\}$/,\n            inside: null // see below\n          },\n          php: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-php',\n            inside: Prism.languages.php\n          }\n        }\n      },\n      string: [\n        {\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: /\\{[^{}]*\\}|`[^`]*`/,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^[{`]|[`}]$/,\n                  alias: 'punctuation'\n                },\n                expression: {\n                  pattern: /[\\s\\S]+/,\n                  inside: null // see below\n                }\n              }\n            },\n            variable: /\\$\\w+/\n          }\n        },\n        {\n          pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n          greedy: true\n        }\n      ],\n      keyword: {\n        pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n        lookbehind: true,\n        greedy: true\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        greedy: true,\n        alias: 'punctuation'\n      },\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n        lookbehind: true\n      },\n      'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\n      boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n      punctuation: /[\\[\\](){}.,:`]|->/,\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n      ]\n    }\n    Prism.languages.smarty['embedded-php'].inside.smarty.inside =\n      Prism.languages.smarty\n    Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside =\n      Prism.languages.smarty\n    var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/\n    var smartyPattern = RegExp(\n      // comments\n      /\\{\\*[\\s\\S]*?\\*\\}/.source +\n        '|' +\n        // php tags\n        /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source +\n        '|' +\n        // smarty blocks\n        /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(\n          /<str>/g,\n          function () {\n            return string.source\n          }\n        ),\n      'g'\n    )\n\n    // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var smartyLiteralStart = '{literal}'\n      var smartyLiteralEnd = '{/literal}'\n      var smartyLiteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLiteralEnd) {\n            smartyLiteralMode = false\n          }\n          if (!smartyLiteralMode) {\n            if (match === smartyLiteralStart) {\n              smartyLiteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    })\n\n    // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nsml.displayName = 'sml'\nsml.aliases = ['smlnj']\n\n/** @type {Syntax} */\nexport default function sml(Prism) {\n  // https://smlfamily.github.io/sml97-defn.pdf\n  // https://people.mpi-sws.org/~rossberg/sml.html\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i\n    Prism.languages.sml = {\n      // allow one level of nesting\n      comment:\n        /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n      string: {\n        pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': [\n        {\n          // This is only an approximation since the real grammar is context-free\n          //\n          // Why the main loop so complex?\n          // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n          // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n          // followed by a long identifier.\n          pattern: RegExp(\n            /((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source\n              .replace(/<NOT-LAST>/g, function () {\n                return /\\s*(?:[*,]|->)/.source\n              })\n              .replace(/<TERMINAL>/g, function () {\n                return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/\n                  .source\n              })\n              .replace(/<LONG-ID>/g, function () {\n                return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source\n              })\n              .replace(/<KEYWORD>/g, function () {\n                return keywords.source\n              }),\n            'i'\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern:\n            /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n        lookbehind: true\n      },\n      keyword: keywords,\n      variable: {\n        pattern: /(^|[^\\w'])'[\\w']*/,\n        lookbehind: true\n      },\n      number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n      word: {\n        pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n        alias: 'constant'\n      },\n      boolean: /\\b(?:false|true)\\b/i,\n      operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n      punctuation: /[(){}\\[\\].:,;]/\n    }\n    Prism.languages.sml['class-name'][0].inside = Prism.languages.sml\n    Prism.languages.smlnj = Prism.languages.sml\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nsolidity.displayName = 'solidity'\nsolidity.aliases = ['sol']\n\n/** @type {Syntax} */\nexport default function solidity(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.solidity = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern:\n        /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n    operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n  })\n  Prism.languages.insertBefore('solidity', 'keyword', {\n    builtin:\n      /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n  })\n  Prism.languages.insertBefore('solidity', 'number', {\n    version: {\n      pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n      lookbehind: true,\n      alias: 'number'\n    }\n  })\n  Prism.languages.sol = Prism.languages.solidity\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nsolutionFile.displayName = 'solution-file'\nsolutionFile.aliases = ['sln']\n\n/** @type {Syntax} */\nexport default function solutionFile(Prism) {\n  ;(function (Prism) {\n    var guid = {\n      // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format\n      pattern: /\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,\n      alias: 'constant',\n      inside: {\n        punctuation: /[{}]/\n      }\n    }\n    Prism.languages['solution-file'] = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n        greedy: true,\n        inside: {\n          guid: guid\n        }\n      },\n      object: {\n        // Foo\n        //   Bar(\"abs\") = 9\n        //   EndBar\n        //   Prop = TRUE\n        // EndFoo\n        pattern:\n          /^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'keyword'\n      },\n      property: {\n        pattern: /^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,\n        lookbehind: true,\n        inside: {\n          guid: guid\n        }\n      },\n      guid: guid,\n      number: /\\b\\d+(?:\\.\\d+)*\\b/,\n      boolean: /\\b(?:FALSE|TRUE)\\b/,\n      operator: /=/,\n      punctuation: /[(),]/\n    }\n    Prism.languages['sln'] = Prism.languages['solution-file']\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkupTemplating from './markup-templating.js'\nsoy.displayName = 'soy'\nsoy.aliases = []\n\n/** @type {Syntax} */\nexport default function soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern:\n          /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^\\{+\\/?|\\/?\\}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    }\n\n    // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function (match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    })\n\n    // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nturtle.displayName = 'turtle'\nturtle.aliases = ['trig']\n\n/** @type {Syntax} */\nexport default function turtle(Prism) {\n  Prism.languages.turtle = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'multiline-string': {\n      pattern:\n        /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        comment: /#.*/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    url: {\n      pattern:\n        /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n      greedy: true,\n      inside: {\n        punctuation: /[<>]/\n      }\n    },\n    function: {\n      pattern:\n        /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n      inside: {\n        'local-name': {\n          pattern: /([^:]*:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        prefix: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    },\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:base|graph|prefix)\\b/i],\n    tag: {\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n      inside: {\n        punctuation: /@/\n      }\n    }\n  }\n  Prism.languages.trig = Prism.languages['turtle']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorTurtle from './turtle.js'\nsparql.displayName = 'sparql'\nsparql.aliases = ['rq']\n\n/** @type {Syntax} */\nexport default function sparql(Prism) {\n  Prism.register(refractorTurtle)\n  Prism.languages.sparql = Prism.languages.extend('turtle', {\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: {\n      pattern: /[?$]\\w+/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('sparql', 'punctuation', {\n    keyword: [\n      /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n      /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n      /\\b(?:BASE|GRAPH|PREFIX)\\b/i\n    ]\n  })\n  Prism.languages.rq = Prism.languages.sparql\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nsplunkSpl.displayName = 'splunk-spl'\nsplunkSpl.aliases = []\n\n/** @type {Syntax} */\nexport default function splunkSpl(Prism) {\n  Prism.languages['splunk-spl'] = {\n    comment: /`comment\\(\"(?:\\\\.|[^\\\\\"])*\"\\)`/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true\n    },\n    // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands\n    keyword:\n      /\\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b/i,\n    'operator-word': {\n      pattern: /\\b(?:and|as|by|not|or|xor)\\b/i,\n      alias: 'operator'\n    },\n    function: /\\b\\w+(?=\\s*\\()/,\n    property: /\\b\\w+(?=\\s*=(?!=))/,\n    date: {\n      // MM/DD/YYYY(:HH:MM:SS)?\n      pattern: /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{1,4}(?:(?::\\d{1,2}){3})?\\b/,\n      alias: 'number'\n    },\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    boolean: /\\b(?:f|false|t|true)\\b/i,\n    operator: /[<>=]=?|[-+*/%|]/,\n    punctuation: /[()[\\],]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nsqf.displayName = 'sqf'\nsqf.aliases = []\n\n/** @type {Syntax} */\nexport default function sqf(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.sqf = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:(?:\"\")?[^\"])*\"(?!\")|'(?:[^'])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function:\n      /\\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\\b/i,\n    number:\n      /(?:\\$|\\b0x)[\\da-f]+\\b|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+)?)(?:e[+-]?\\d+)?\\b/i,\n    operator: /##|>>|&&|\\|\\||[!=<>]=?|[-+*/%#^]|\\b(?:and|mod|not|or)\\b/i,\n    'magic-variable': {\n      pattern:\n        /\\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\\b/i,\n      alias: 'keyword'\n    },\n    constant: /\\bDIK(?:_[a-z\\d]+)+\\b/i\n  })\n  Prism.languages.insertBefore('sqf', 'string', {\n    macro: {\n      pattern: /(^[ \\t]*)#[a-z](?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /#[a-z]+\\b/i,\n          alias: 'keyword'\n        },\n        comment: Prism.languages.sqf.comment\n      }\n    }\n  })\n  delete Prism.languages.sqf['class-name']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nsquirrel.displayName = 'squirrel'\nsquirrel.aliases = []\n\n/** @type {Syntax} */\nexport default function squirrel(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.squirrel = Prism.languages.extend('clike', {\n    comment: [\n      Prism.languages.clike['comment'][0],\n      {\n        pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\\b/,\n    number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n    operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n    punctuation: /[(){}\\[\\],;.]/\n  })\n  Prism.languages.insertBefore('squirrel', 'string', {\n    char: {\n      pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n      lookbehind: true,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('squirrel', 'operator', {\n    'attribute-punctuation': {\n      pattern: /<\\/|\\/>/,\n      alias: 'important'\n    },\n    lambda: {\n      pattern: /@(?=\\()/,\n      alias: 'operator'\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nstan.displayName = 'stan'\nstan.aliases = []\n\n/** @type {Syntax} */\nexport default function stan(Prism) {\n  ;(function (Prism) {\n    // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\n\n    var higherOrderFunctions =\n      /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/\n    Prism.languages.stan = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n      string: {\n        // String literals can contain spaces and any printable ASCII characters except for \" and \\\n        // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n        pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n        greedy: true\n      },\n      directive: {\n        pattern: /^([ \\t]*)#include\\b.*/m,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'function-arg': {\n        pattern: RegExp(\n          '(' +\n            higherOrderFunctions.source +\n            /\\s*\\(\\s*/.source +\n            ')' +\n            /[a-zA-Z]\\w*/.source\n        ),\n        lookbehind: true,\n        alias: 'function'\n      },\n      constraint: {\n        pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          property: /\\b[a-z]\\w*(?=\\s*=)/i,\n          operator: /=/,\n          punctuation: /^<|>$|,/\n        }\n      },\n      keyword: [\n        {\n          pattern:\n            /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\n          alias: 'program-block'\n        },\n        /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/,\n        // these are functions that are known to take another function as their first argument.\n        higherOrderFunctions\n      ],\n      function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n      number:\n        /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n      punctuation: /[()\\[\\]{},;]/\n    }\n    Prism.languages.stan.constraint.inside.expression.inside =\n      Prism.languages.stan\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJava from './java.js'\nimport refractorMata from './mata.js'\nimport refractorPython from './python.js'\nstata.displayName = 'stata'\nstata.aliases = []\n\n/** @type {Syntax} */\nexport default function stata(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorMata)\n  Prism.register(refractorPython)\n  // https://www.stata.com/manuals/u.pdf\n  // https://www.stata.com/manuals/p.pdf\n\n  Prism.languages.stata = {\n    comment: [\n      {\n        pattern: /(^[ \\t]*)\\*.*/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|\\s)\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'string-literal': {\n      pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n          inside: {\n            punctuation: /^\\$\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    mata: {\n      pattern: /(^[ \\t]*mata[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-mata',\n      inside: Prism.languages.mata\n    },\n    java: {\n      pattern: /(^[ \\t]*java[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-java',\n      inside: Prism.languages.java\n    },\n    python: {\n      pattern: /(^[ \\t]*python[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'language-python',\n      inside: Prism.languages.python\n    },\n    command: {\n      pattern:\n        /(^[ \\t]*(?:\\.[ \\t]+)?(?:(?:bayes|bootstrap|by|bysort|capture|collect|fmm|fp|frame|jackknife|mfp|mi|nestreg|noisily|permute|quietly|rolling|simulate|statsby|stepwise|svy|version|xi)\\b[^:\\r\\n]*:[ \\t]*|(?:capture|noisily|quietly|version)[ \\t]+)?)[a-zA-Z]\\w*/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'keyword'\n    },\n    variable: /\\$\\w+|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n    keyword:\n      /\\b(?:bayes|bootstrap|by|bysort|capture|clear|collect|fmm|fp|frame|if|in|jackknife|mi[ \\t]+estimate|mfp|nestreg|noisily|of|permute|quietly|rolling|simulate|sort|statsby|stepwise|svy|varlist|version|xi)\\b/,\n    boolean: /\\b(?:off|on)\\b/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+/,\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    operator: /\\+\\+|--|##?|[<>!=~]=?|[+\\-*^&|/]/,\n    punctuation: /[(){}[\\],:]/\n  }\n  Prism.languages.stata[\n    'string-literal'\n  ].inside.interpolation.inside.expression.inside = Prism.languages.stata\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\niecst.displayName = 'iecst'\niecst.aliases = []\n\n/** @type {Syntax} */\nexport default function iecst(Prism) {\n  Prism.languages.iecst = {\n    comment: [\n      {\n        pattern:\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: [\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\n      /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\n    ],\n    'class-name':\n      /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\n    address: {\n      pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n      alias: 'symbol'\n    },\n    number:\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\n    operator:\n      /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    punctuation: /[()[\\].,;]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nsupercollider.displayName = 'supercollider'\nsupercollider.aliases = ['sclang']\n\n/** @type {Syntax} */\nexport default function supercollider(Prism) {\n  Prism.languages.supercollider = {\n    comment: {\n      pattern:\n        /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$(?:[^\\\\\\r\\n]|\\\\.)/,\n      greedy: true\n    },\n    symbol: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'|\\\\\\w+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /\\b(?:_|arg|classvar|const|nil|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    label: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*:)/,\n      alias: 'property'\n    },\n    number:\n      /\\b(?:inf|pi|0x[0-9a-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(?:pi)?|\\d+r[0-9a-zA-Z]+(?:\\.[0-9a-zA-Z]+)?|\\d+[sb]{1,4}\\d*)\\b/,\n    'class-name': /\\b[A-Z]\\w*\\b/,\n    operator:\n      /\\.{2,3}|#(?![[{])|&&|[!=]==?|\\+>>|\\+{1,3}|-[->]|=>|>>|\\?\\?|@\\|?@|\\|(?:@|[!=]=)?\\||!\\?|<[!=>]|\\*{1,2}|<{2,3}\\*?|[-!%&/<>?@|=`]/,\n    punctuation: /[{}()[\\].:,;]|#[[{]/\n  }\n  Prism.languages.sclang = Prism.languages.supercollider\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nsystemd.displayName = 'systemd'\nsystemd.aliases = []\n\n/** @type {Syntax} */\nexport default function systemd(Prism) {\n  // https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n\n  ;(function (Prism) {\n    var comment = {\n      pattern: /^[;#].*/m,\n      greedy: true\n    }\n    var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source\n    Prism.languages.systemd = {\n      comment: comment,\n      section: {\n        pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'section-name': {\n            pattern: /[\\s\\S]+/,\n            alias: 'selector'\n          }\n        }\n      },\n      key: {\n        pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n        greedy: true,\n        alias: 'attr-name'\n      },\n      value: {\n        // This pattern is quite complex because of two properties:\n        //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n        //     the lookbehind. You will see this in the main loop where spaces are handled separately.\n        //  2) Line continuations.\n        //     After line continuations, empty lines and comments are ignored so we have to consume them.\n        pattern: RegExp(\n          /(=[ \\t]*(?!\\s))/.source +\n            // the value either starts with quotes or not\n            '(?:' +\n            quotesSource +\n            '|(?=[^\"\\r\\n]))' +\n            // main loop\n            '(?:' +\n            (/[^\\s\\\\]/.source +\n              // handle spaces separately because of quotes\n              '|' +\n              '[ \\t]+(?:(?![ \\t\"])|' +\n              quotesSource +\n              ')' +\n              // line continuation\n              '|' +\n              /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'attr-value',\n        inside: {\n          comment: comment,\n          quoted: {\n            pattern: RegExp(/(^|\\s)/.source + quotesSource),\n            lookbehind: true,\n            greedy: true\n          },\n          punctuation: /\\\\$/m,\n          boolean: {\n            pattern: /^(?:false|no|off|on|true|yes)$/,\n            greedy: true\n          }\n        }\n      },\n      punctuation: /=/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nt4Templating.displayName = 't4-templating'\nt4Templating.aliases = []\n\n/** @type {Syntax} */\nexport default function t4Templating(Prism) {\n  ;(function (Prism) {\n    function createBlock(prefix, inside, contentAlias) {\n      return {\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n        alias: 'block',\n        inside: {\n          delimiter: {\n            pattern: RegExp('^<#' + prefix + '|#>$'),\n            alias: 'important'\n          },\n          content: {\n            pattern: /[\\s\\S]+/,\n            inside: inside,\n            alias: contentAlias\n          }\n        }\n      }\n    }\n    function createT4(insideLang) {\n      var grammar = Prism.languages[insideLang]\n      var className = 'language-' + insideLang\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: createBlock('@', {\n              'attr-value': {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\b\\w+(?=\\s)/,\n              'attr-name': /\\b\\w+/\n            }),\n            expression: createBlock('=', grammar, className),\n            'class-feature': createBlock('\\\\+', grammar, className),\n            standard: createBlock('', grammar, className)\n          }\n        }\n      }\n    }\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n      value: createT4\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorCsharp from './csharp.js'\nimport refractorT4Templating from './t4-templating.js'\nt4Cs.displayName = 't4-cs'\nt4Cs.aliases = ['t4']\n\n/** @type {Syntax} */\nexport default function t4Cs(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.register(refractorT4Templating)\n  Prism.languages.t4 = Prism.languages['t4-cs'] =\n    Prism.languages['t4-templating'].createT4('csharp')\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorT4Templating from './t4-templating.js'\nimport refractorVbnet from './vbnet.js'\nt4Vb.displayName = 't4-vb'\nt4Vb.aliases = []\n\n/** @type {Syntax} */\nexport default function t4Vb(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorVbnet)\n  Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('vbnet')\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorYaml from './yaml.js'\ntap.displayName = 'tap'\ntap.aliases = []\n\n/** @type {Syntax} */\nexport default function tap(Prism) {\n  Prism.register(refractorYaml)\n  // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ntcl.displayName = 'tcl'\ntcl.aliases = []\n\n/** @type {Syntax} */\nexport default function tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\$)\\{[^}]+\\}/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n      lookbehind: true\n    },\n    builtin: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\n        lookbehind: true\n      },\n      /\\b(?:else|elseif)\\b/\n    ],\n    scope: {\n      pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator:\n      /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nimport refractorMarkupTemplating from './markup-templating.js'\ntt2.displayName = 'tt2'\ntt2.aliases = []\n\n/** @type {Syntax} */\nexport default function tt2(Prism) {\n  Prism.register(refractorClike)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword:\n        /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    })\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n      variable: {\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    })\n\n    // The different types of TT2 strings \"replace\" the C-like standard string\n    delete Prism.languages.tt2.string\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'tt2',\n        tt2Pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ntoml.displayName = 'toml'\ntoml.aliases = []\n\n/** @type {Syntax} */\nexport default function toml(Prism) {\n  ;(function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\n\n    /**\n     * @param {string} pattern\n     */\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key\n      })\n    }\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          insertKey(\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern:\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern:\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n          alias: 'number'\n        }\n      ],\n      number:\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ntremor.displayName = 'tremor'\ntremor.aliases = ['trickle', 'troy']\n\n/** @type {Syntax} */\nexport default function tremor(Prism) {\n  ;(function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword:\n        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number:\n        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator:\n        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    }\n    var interpolationPattern =\n      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(\n        /(^|[^\\\\])/.source +\n          '(?:' +\n          '\"\"\"(?:' +\n          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"\"\"' +\n          '|' +\n          '\"(?:' +\n          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"' +\n          ')'\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.troy = Prism.languages['tremor']\n    Prism.languages.trickle = Prism.languages['tremor']\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ntyposcript.displayName = 'typoscript'\ntyposcript.aliases = ['tsconfig']\n\n/** @type {Syntax} */\nexport default function typoscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/\n    Prism.languages.typoscript = {\n      comment: [\n        {\n          // multiline comments /* */\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true\n        },\n        {\n          // double-slash comments - ignored when backslashes or colon is found in front\n          // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n          pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // hash comments - ignored when leading quote is found for hex colors in strings\n          pattern: /(^|[^\"'])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      function: [\n        {\n          // old include style\n          pattern:\n            /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n          inside: {\n            string: {\n              pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n              inside: {\n                keyword: keywords\n              }\n            },\n            keyword: {\n              pattern: /INCLUDE_TYPOSCRIPT/\n            }\n          }\n        },\n        {\n          // new include style\n          pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n          inside: {\n            string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n          }\n        }\n      ],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^\\d+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b\\d+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    }\n    Prism.languages.tsconfig = Prism.languages.typoscript\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nunrealscript.displayName = 'unrealscript'\nunrealscript.aliases = ['uc', 'uscript']\n\n/** @type {Syntax} */\nexport default function unrealscript(Prism) {\n  Prism.languages.unrealscript = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    category: {\n      pattern:\n        /(\\b(?:(?:autoexpand|hide|show)categories|var)\\s*\\()[^()]+(?=\\))/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /(\\w\\s*)<\\s*\\w+\\s*=[^<>|=\\r\\n]+(?:\\|\\s*\\w+\\s*=[^<>|=\\r\\n]+)*>/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        property: /\\b\\w+(?=\\s*=)/,\n        operator: /=/,\n        punctuation: /[<>|]/\n      }\n    },\n    macro: {\n      pattern: /`\\w+/,\n      alias: 'property'\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|enum|extends|interface|state(?:\\(\\))?|struct|within)\\s+)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html\n    operator:\n      />>|<<|--|\\+\\+|\\*\\*|[-+*/~!=<>$@]=?|&&?|\\|\\|?|\\^\\^?|[?:%]|\\b(?:ClockwiseFrom|Cross|Dot)\\b/,\n    punctuation: /[()[\\]{};,.]/\n  }\n  Prism.languages.uc = Prism.languages.uscript = Prism.languages.unrealscript\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nuorazor.displayName = 'uorazor'\nuorazor.aliases = []\n\n/** @type {Syntax} */\nexport default function uorazor(Prism) {\n  Prism.languages.uorazor = {\n    'comment-hash': {\n      pattern: /#.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    'comment-slash': {\n      pattern: /\\/\\/.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      },\n      greedy: true\n    },\n    'source-layers': {\n      pattern:\n        /\\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\\b/i,\n      alias: 'function'\n    },\n    'source-commands': {\n      pattern:\n        /\\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\\b/,\n      alias: 'function'\n    },\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    function:\n      /\\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\\b/,\n    keyword:\n      /\\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nv.displayName = 'v'\nv.aliases = []\n\n/** @type {Syntax} */\nexport default function v(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var interpolationExpr = {\n      pattern: /[\\s\\S]+/,\n      inside: null\n    }\n    Prism.languages.v = Prism.languages.extend('clike', {\n      string: {\n        pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        alias: 'quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n            lookbehind: true,\n            inside: {\n              'interpolation-variable': {\n                pattern: /^\\$\\w[\\s\\S]*$/,\n                alias: 'variable'\n              },\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              'interpolation-expression': interpolationExpr\n            }\n          }\n        }\n      },\n      'class-name': {\n        pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\n      number:\n        /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n      operator:\n        /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n      builtin:\n        /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n    })\n    interpolationExpr.inside = Prism.languages.v\n    Prism.languages.insertBefore('v', 'string', {\n      char: {\n        pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n        // using {1,2} instead of `u` flag for compatibility\n        alias: 'rune'\n      }\n    })\n    Prism.languages.insertBefore('v', 'operator', {\n      attribute: {\n        pattern:\n          /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\n        lookbehind: true,\n        alias: 'annotation',\n        inside: {\n          punctuation: /[\\[\\]]/,\n          keyword: /\\w+/\n        }\n      },\n      generic: {\n        pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n        inside: {\n          punctuation: /[<>]/,\n          'class-name': /\\w+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('v', 'function', {\n      'generic-function': {\n        // e.g. foo<T>( ...\n        pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<\\w+>/,\n            inside: Prism.languages.v.generic.inside\n          }\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nvala.displayName = 'vala'\nvala.aliases = []\n\n/** @type {Syntax} */\nexport default function vala(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkup from './markup.js'\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\n\n/** @type {Syntax} */\nexport default function velocity(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|\\]\\]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nverilog.displayName = 'verilog'\nverilog.aliases = []\n\n/** @type {Syntax} */\nexport default function verilog(Prism) {\n  Prism.languages.verilog = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'kernel-function': {\n      // support for any kernel function (ex: $display())\n      pattern: /\\B\\$\\w+\\b/,\n      alias: 'property'\n    },\n    // support for user defined constants (ex: `define)\n    constant: /\\B`\\w+\\b/,\n    function: /\\b\\w+(?=\\()/,\n    // support for verilog and system verilog keywords\n    keyword:\n      /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n    // bold highlighting for all verilog and system verilog logic blocks\n    important: /\\b(?:always|always_comb|always_ff|always_latch)\\b(?: *@)?/,\n    // support for time ticks, vectors, and real numbers\n    number:\n      /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b(?:\\d*[._])?\\d+(?:e[-+]?\\d+)?/i,\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\n    punctuation: /[[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nvhdl.displayName = 'vhdl'\nvhdl.aliases = []\n\n/** @type {Syntax} */\nexport default function vhdl(Prism) {\n  Prism.languages.vhdl = {\n    comment: /--.+/,\n    // support for all logic vectors\n    'vhdl-vectors': {\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n      alias: 'number'\n    },\n    // support for operator overloading included\n    'quoted-function': {\n      pattern: /\"\\S+?\"(?=\\()/,\n      alias: 'function'\n    },\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    attribute: {\n      pattern: /\\b'\\w+/,\n      alias: 'attr-name'\n    },\n    // support for predefined attributes included\n    keyword:\n      /\\b(?:access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|private|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|view|wait|when|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\w+(?=\\()/,\n    // decimal, based, physical, and exponential numbers supported\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n    operator:\n      /[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nvim.displayName = 'vim'\nvim.aliases = []\n\n/** @type {Syntax} */\nexport default function vim(Prism) {\n  Prism.languages.vim = {\n    string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n    comment: /\".*/,\n    function: /\\b\\w+(?=\\()/,\n    keyword:\n      /\\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n    builtin:\n      /\\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator:\n      /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n    punctuation: /[{}[\\](),;:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nvisualBasic.displayName = 'visual-basic'\nvisualBasic.aliases = ['vb', 'vba']\n\n/** @type {Syntax} */\nexport default function visualBasic(Prism) {\n  Prism.languages['visual-basic'] = {\n    comment: {\n      pattern: /(?:['‘’]|REM\\b)(?:[^\\r\\n_]|_(?:\\r\\n?|\\n)?)*/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    directive: {\n      pattern:\n        /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\\b_[ \\t]*(?:\\r\\n?|\\n)|.)+/i,\n      alias: 'property',\n      greedy: true\n    },\n    string: {\n      pattern: /\\$?[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n      greedy: true\n    },\n    date: {\n      pattern:\n        /#[ \\t]*(?:\\d+([/-])\\d+\\1\\d+(?:[ \\t]+(?:\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?))?|\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?)[ \\t]*#/i,\n      alias: 'number'\n    },\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:[FRD]|U?[ILS])?/i,\n    boolean: /\\b(?:False|Nothing|True)\\b/i,\n    keyword:\n      /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n    operator: /[+\\-*/\\\\^<=>&#@$%!]|\\b_(?=[ \\t]*[\\r\\n])/,\n    punctuation: /[{}().,:?]/\n  }\n  Prism.languages.vb = Prism.languages['visual-basic']\n  Prism.languages.vba = Prism.languages['visual-basic']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nwarpscript.displayName = 'warpscript'\nwarpscript.aliases = []\n\n/** @type {Syntax} */\nexport default function warpscript(Prism) {\n  Prism.languages.warpscript = {\n    comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern:\n        /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\n      greedy: true\n    },\n    variable: /\\$\\S+/,\n    macro: {\n      pattern: /@\\S+/,\n      alias: 'property'\n    },\n    // WarpScript doesn't have any keywords, these are all functions under the control category\n    // https://www.warp10.io/tags/control\n    keyword:\n      /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\n    number:\n      /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\n    boolean: /\\b(?:F|T|false|true)\\b/,\n    punctuation: /<%|%>|[{}[\\]()]/,\n    // Some operators from the \"operators\" category\n    // https://www.warp10.io/tags/operators\n    operator:\n      /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nwasm.displayName = 'wasm'\nwasm.aliases = []\n\n/** @type {Syntax} */\nexport default function wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [\n      /\\(;[\\s\\S]*?;\\)/,\n      {\n        pattern: /;;.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [\n      {\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      },\n      {\n        pattern:\n          /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n    ],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n    number:\n      /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nwebIdl.displayName = 'web-idl'\nwebIdl.aliases = ['webidl']\n\n/** @type {Syntax} */\nexport default function webIdl(Prism) {\n  ;(function (Prism) {\n    var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source\n    var type =\n      '(?:' +\n      /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source +\n      '|' +\n      /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source +\n      '|' +\n      /(?!(?:unrestricted|unsigned)\\b)/.source +\n      id +\n      /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source +\n      ')' +\n      /(?:\\s*\\?)?/.source\n    var typeInside = {}\n    Prism.languages['web-idl'] = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      namespace: {\n        pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source +\n              type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // callback return type\n          pattern: RegExp(\n            '(' + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + ')' + type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // typedef\n          pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/\n              .source + id\n          ),\n          lookbehind: true\n        },\n        {\n          // inheritance\n          pattern: RegExp(/(:\\s*)/.source + id),\n          lookbehind: true\n        },\n        // includes and implements\n        RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source),\n        {\n          pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\n          lookbehind: true\n        },\n        {\n          // function return type, parameter types, and dictionary members\n          pattern: RegExp(\n            type +\n              '(?=' +\n              /\\s*(?:\\.{3}\\s*)?/.source +\n              id +\n              /\\s*[(),;=]/.source +\n              ')'\n          ),\n          inside: typeInside\n        }\n      ],\n      builtin:\n        /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\n      keyword: [\n        /\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/,\n        // type keywords\n        /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: {\n        pattern:\n          /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\n        lookbehind: true\n      },\n      operator: /\\.{3}|[=:?<>-]/,\n      punctuation: /[(){}[\\].,;]/\n    }\n    for (var key in Prism.languages['web-idl']) {\n      if (key !== 'class-name') {\n        typeInside[key] = Prism.languages['web-idl'][key]\n      }\n    }\n    Prism.languages['webidl'] = Prism.languages['web-idl']\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nwgsl.displayName = 'wgsl'\nwgsl.aliases = []\n\n/** @type {Syntax} */\nexport default function wgsl(Prism) {\n  Prism.languages.wgsl = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    'builtin-attribute': {\n      pattern: /(@)builtin\\(.*?\\)/,\n      lookbehind: true,\n      inside: {\n        attribute: {\n          pattern: /^builtin/,\n          alias: 'attr-name'\n        },\n        punctuation: /[(),]/,\n        'built-in-values': {\n          pattern:\n            /\\b(?:frag_depth|front_facing|global_invocation_id|instance_index|local_invocation_id|local_invocation_index|num_workgroups|position|sample_index|sample_mask|vertex_index|workgroup_id)\\b/,\n          alias: 'attr-value'\n        }\n      }\n    },\n    attributes: {\n      pattern:\n        /(@)(?:align|binding|compute|const|fragment|group|id|interpolate|invariant|location|size|vertex|workgroup_size)/i,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    functions: {\n      pattern: /\\b(fn\\s+)[_a-zA-Z]\\w*(?=[(<])/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:bitcast|break|case|const|continue|continuing|default|discard|else|enable|fallthrough|fn|for|function|if|let|loop|private|return|storage|struct|switch|type|uniform|var|while|workgroup)\\b/,\n    builtin:\n      /\\b(?:abs|acos|acosh|all|any|array|asin|asinh|atan|atan2|atanh|atomic|atomicAdd|atomicAnd|atomicCompareExchangeWeak|atomicExchange|atomicLoad|atomicMax|atomicMin|atomicOr|atomicStore|atomicSub|atomicXor|bool|ceil|clamp|cos|cosh|countLeadingZeros|countOneBits|countTrailingZeros|cross|degrees|determinant|distance|dot|dpdx|dpdxCoarse|dpdxFine|dpdy|dpdyCoarse|dpdyFine|exp|exp2|extractBits|f32|f64|faceForward|firstLeadingBit|floor|fma|fract|frexp|fwidth|fwidthCoarse|fwidthFine|i32|i64|insertBits|inverseSqrt|ldexp|length|log|log2|mat[2-4]x[2-4]|max|min|mix|modf|normalize|override|pack2x16float|pack2x16snorm|pack2x16unorm|pack4x8snorm|pack4x8unorm|pow|ptr|quantizeToF16|radians|reflect|refract|reverseBits|round|sampler|sampler_comparison|select|shiftLeft|shiftRight|sign|sin|sinh|smoothstep|sqrt|staticAssert|step|storageBarrier|tan|tanh|textureDimensions|textureGather|textureGatherCompare|textureLoad|textureNumLayers|textureNumLevels|textureNumSamples|textureSample|textureSampleBias|textureSampleCompare|textureSampleCompareLevel|textureSampleGrad|textureSampleLevel|textureStore|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|transpose|trunc|u32|u64|unpack2x16float|unpack2x16snorm|unpack2x16unorm|unpack4x8snorm|unpack4x8unorm|vec[2-4]|workgroupBarrier)\\b/,\n    'function-calls': {\n      pattern: /\\b[_a-z]\\w*(?=\\()/i,\n      alias: 'function'\n    },\n    'class-name': /\\b(?:[A-Z][A-Za-z0-9]*)\\b/,\n    'bool-literal': {\n      pattern: /\\b(?:false|true)\\b/,\n      alias: 'boolean'\n    },\n    'hex-int-literal': {\n      pattern: /\\b0[xX][0-9a-fA-F]+[iu]?\\b(?![.pP])/,\n      alias: 'number'\n    },\n    'hex-float-literal': {\n      pattern: /\\b0[xX][0-9a-fA-F]*(?:\\.[0-9a-fA-F]*)?(?:[pP][+-]?\\d+[fh]?)?/,\n      alias: 'number'\n    },\n    'decimal-float-literal': [\n      {\n        pattern: /\\d*\\.\\d+(?:[eE](?:\\+|-)?\\d+)?[fh]?/,\n        alias: 'number'\n      },\n      {\n        pattern: /\\d+\\.\\d*(?:[eE](?:\\+|-)?\\d+)?[fh]?/,\n        alias: 'number'\n      },\n      {\n        pattern: /\\d+[eE](?:\\+|-)?\\d+[fh]?/,\n        alias: 'number'\n      },\n      {\n        pattern: /\\b\\d+[fh]\\b/,\n        alias: 'number'\n      }\n    ],\n    'int-literal': {\n      pattern: /\\b\\d+[iu]?\\b/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /(?:\\^|~|\\|(?!\\|)|\\|\\||&&|<<|>>|!)(?!=)/\n      },\n      {\n        pattern: /&(?![&=])/\n      },\n      {\n        pattern: /(?:\\+=|-=|\\*=|\\/=|%=|\\^=|&=|\\|=|<<=|>>=)/\n      },\n      {\n        pattern: /(^|[^<>=!])=(?![=>])/,\n        lookbehind: true\n      },\n      {\n        pattern: /(?:==|!=|<=|\\+\\+|--|(^|[^=])>=)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(?:(?:[+%]|(?:\\*(?!\\w)))(?!=))|(?:-(?!>))|(?:\\/(?!\\/))/\n      },\n      {\n        pattern: /->/\n      }\n    ],\n    punctuation: /[@(){}[\\],;<>:.]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkup from './markup.js'\nwiki.displayName = 'wiki'\nwiki.aliases = []\n\n/** @type {Syntax} */\nexport default function wiki(Prism) {\n  Prism.register(refractorMarkup)\n  Prism.languages.wiki = Prism.languages.extend('markup', {\n    'block-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    heading: {\n      pattern: /^(=+)[^=\\r\\n].*?\\1/m,\n      inside: {\n        punctuation: /^=+|=+$/,\n        important: /.+/\n      }\n    },\n    emphasis: {\n      // TODO Multi-line\n      pattern: /('{2,5}).+?\\1/,\n      inside: {\n        'bold-italic': {\n          pattern: /(''''').+?(?=\\1)/,\n          lookbehind: true,\n          alias: ['bold', 'italic']\n        },\n        bold: {\n          pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        punctuation: /^''+|''+$/\n      }\n    },\n    hr: {\n      pattern: /^-{4,}/m,\n      alias: 'punctuation'\n    },\n    url: [\n      /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:PMID|RFC) +\\d+/i,\n      /\\[\\[.+?\\]\\]|\\[.+?\\]/\n    ],\n    variable: [\n      /__[A-Z]+__/,\n      // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/,\n      /\\{\\{.+?\\}\\}/\n    ],\n    symbol: [/^#redirect/im, /~{3,5}/],\n    // Handle table attrs:\n    // {|\n    // ! style=\"text-align:left;\"| Item\n    // |}\n    'table-tag': {\n      pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n      lookbehind: true,\n      inside: {\n        'table-bar': {\n          pattern: /\\|$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.markup['tag'].inside\n      }\n    },\n    punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n  })\n  Prism.languages.insertBefore('wiki', 'tag', {\n    // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n    nowiki: {\n      pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\n      inside: {\n        tag: {\n          pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\n          inside: Prism.languages.markup['tag'].inside\n        }\n      }\n    }\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nwolfram.displayName = 'wolfram'\nwolfram.aliases = ['mathematica', 'nb', 'wl']\n\n/** @type {Syntax} */\nexport default function wolfram(Prism) {\n  Prism.languages.wolfram = {\n    comment:\n      // Allow one level of nesting - note: regex taken from applescipt\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\\b/,\n    context: {\n      pattern: /\\b\\w+`+\\w*/,\n      alias: 'class-name'\n    },\n    blank: {\n      pattern: /\\b\\w+_\\b/,\n      alias: 'regex'\n    },\n    'global-variable': {\n      pattern: /\\$\\w+/,\n      alias: 'variable'\n    },\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    operator:\n      /\\/\\.|;|=\\.|\\^=|\\^:=|:=|<<|>>|<\\||\\|>|:>|\\|->|->|<-|@@@|@@|@|\\/@|=!=|===|==|=|\\+|-|\\[\\/-+%=\\]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.mathematica = Prism.languages.wolfram\n  Prism.languages.wl = Prism.languages.wolfram\n  Prism.languages.nb = Prism.languages.wolfram\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nwren.displayName = 'wren'\nwren.aliases = []\n\n/** @type {Syntax} */\nexport default function wren(Prism) {\n  // https://wren.io/\n\n  Prism.languages.wren = {\n    // Multiline comments in Wren can have nested multiline comments\n    // Comments: // and /* */\n    comment: [\n      {\n        // support 3 levels of nesting\n        // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\n        pattern:\n          /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    // Triple quoted strings are multiline but cannot have interpolation (raw strings)\n    // Based on prism-python.js\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    // see below\n    'string-literal': null,\n    // #!/usr/bin/env wren on the first line\n    hashbang: {\n      pattern: /^#!\\/.+/,\n      greedy: true,\n      alias: 'comment'\n    },\n    // Attributes are special keywords to add meta data to classes\n    attribute: {\n      // #! attributes are stored in class properties\n      // #!myvar = true\n      // #attributes are not stored and dismissed at compilation\n      pattern: /#!?[ \\t\\u3000]*\\w+/,\n      alias: 'keyword'\n    },\n    'class-name': [\n      {\n        // class definition\n        // class Meta {}\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      // A class must always start with an uppercase.\n      // File.read\n      /\\b[A-Z][a-z\\d_]*\\b/\n    ],\n    // A constant can be a variable, class, property or method. Just named in all uppercase letters\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    keyword:\n      /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    // Functions can be Class.method()\n    function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\n    operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\n    punctuation: /[\\[\\](){}.,;]/\n  }\n  Prism.languages.wren['string-literal'] = {\n    // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\n    pattern:\n      /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      interpolation: {\n        // \"%(interpolation)\"\n        pattern:\n          /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: Prism.languages.wren\n          },\n          'interpolation-punctuation': {\n            pattern: /^%\\(|\\)$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkup from './markup.js'\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\n\n/** @type {Syntax} */\nexport default function xeora(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern:\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern:\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern:\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkup from './markup.js'\nxmlDoc.displayName = 'xml-doc'\nxmlDoc.aliases = []\n\n/** @type {Syntax} */\nexport default function xmlDoc(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nxojo.displayName = 'xojo'\nxojo.aliases = []\n\n/** @type {Syntax} */\nexport default function xojo(Prism) {\n  Prism.languages.xojo = {\n    comment: {\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    number: [/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n    directive: {\n      pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\\b/i,\n      alias: 'property'\n    },\n    keyword:\n      /\\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\\b/i,\n    operator:\n      /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\\b/i,\n    punctuation: /[.,;:()]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkup from './markup.js'\nxquery.displayName = 'xquery'\nxquery.aliases = []\n\n/** @type {Syntax} */\nexport default function xquery(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    Prism.languages.xquery = Prism.languages.extend('markup', {\n      'xquery-comment': {\n        pattern: /\\(:[\\s\\S]*?:\\)/,\n        greedy: true,\n        alias: 'comment'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      extension: {\n        pattern: /\\(#.+?#\\)/,\n        alias: 'symbol'\n      },\n      variable: /\\$[-\\w:]+/,\n      axis: {\n        pattern:\n          /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      'keyword-operator': {\n        pattern:\n          /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern:\n          /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n      'xquery-element': {\n        pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'tag'\n      },\n      'xquery-attribute': {\n        pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      builtin: {\n        pattern:\n          /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n      operator: [\n        /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n        {\n          pattern: /(\\s)-(?=\\s)/,\n          lookbehind: true\n        }\n      ],\n      punctuation: /[[\\](){},;:/]/\n    })\n    Prism.languages.xquery.tag.pattern =\n      /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\n    Prism.languages.xquery['tag'].inside['attr-value'].pattern =\n      /=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] =\n      /^=\"|\"$/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n      // Allow for two levels of nesting\n      pattern: /\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}/,\n      inside: Prism.languages.xquery,\n      alias: 'language-xquery'\n    }\n\n    // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{' &&\n            // Ignore `{{`\n            (!tokens[i + 1] ||\n              tokens[i + 1].type !== 'punctuation' ||\n              tokens[i + 1].content !== '{') &&\n            (!tokens[i - 1] ||\n              tokens[i - 1].type !== 'plain-text' ||\n              tokens[i - 1].content !== '{')\n          ) {\n            // Here we might have entered an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else if (token.type !== 'comment') {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside an XQuery expression.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token)\n\n            // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            if (/^\\s+$/.test(plainText)) {\n              tokens[i] = plainText\n            } else {\n              tokens[i] = new Prism.Token(\n                'plain-text',\n                plainText,\n                null,\n                plainText\n              )\n            }\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'xquery') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nyang.displayName = 'yang'\nyang.aliases = []\n\n/** @type {Syntax} */\nexport default function yang(Prism) {\n  Prism.languages.yang = {\n    // https://tools.ietf.org/html/rfc6020#page-34\n    // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n      lookbehind: true\n    },\n    namespace: {\n      pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /\\+/,\n    punctuation: /[{};:]/\n  }\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nzig.displayName = 'zig'\nzig.aliases = []\n\n/** @type {Syntax} */\nexport default function zig(Prism) {\n  ;(function (Prism) {\n    function literal(str) {\n      return function () {\n        return str\n      }\n    }\n    var keyword =\n      /\\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/\n    var IDENTIFIER = '\\\\b(?!' + keyword.source + ')(?!\\\\d)\\\\w+\\\\b'\n    var ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var PREFIX_TYPE_OP =\n      /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(\n        /<ALIGN>/g,\n        literal(ALIGN)\n      )\n    var SUFFIX_EXPR =\n      /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(\n        /<ID>/g,\n        literal(IDENTIFIER)\n      )\n    var TYPE =\n      '(?!\\\\s)(?:!?\\\\s*(?:' + PREFIX_TYPE_OP + '\\\\s*)*' + SUFFIX_EXPR + ')+'\n\n    /*\n     * A simplified grammar for Zig compile time type literals:\n     *\n     * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\n     *\n     * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\n     *\n     * PREFIX_TYPE_OP = \"?\"\n     *                | \\b \"promise\" \"->\"\n     *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\n     *\n     * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\n     *\n     * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\n     *\n     */\n\n    Prism.languages.zig = {\n      comment: [\n        {\n          pattern: /\\/\\/[/!].*/,\n          alias: 'doc-comment'\n        },\n        /\\/{2}.*/\n      ],\n      string: [\n        {\n          // \"string\" and c\"string\"\n          pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // multiline strings and c-strings\n          pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      char: {\n        // characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\n        pattern:\n          /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|[\\uD800-\\uDFFF]{2}|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n        lookbehind: true,\n        greedy: true\n      },\n      builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n      label: {\n        pattern:\n          /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n        lookbehind: true\n      },\n      'class-name': [\n        // const Foo = struct {};\n        /\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\n        {\n          // const x: i32 = 9;\n          // var x: Bar;\n          // fn foo(x: bool, y: f32) void {}\n          pattern: RegExp(\n            /(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          // extern fn foo(x: f64) f64; (optional alignment)\n          pattern: RegExp(\n            /(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      'builtin-type': {\n        pattern:\n          /\\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\\b/,\n        alias: 'keyword'\n      },\n      keyword: keyword,\n      function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n      number:\n        /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n      punctuation: /[.:,;(){}[\\]]/\n    }\n    Prism.languages.zig['class-name'].forEach(function (obj) {\n      if (obj.inside === null) {\n        obj.inside = Prism.languages.zig\n      }\n    })\n  })(Prism)\n}\n","/**\n * @import {\n *   Grammar,\n *   RefractorElement,\n *   RefractorRoot,\n *   Syntax,\n *   Text\n * } from './core.js'\n */\nimport markup from '../lang/markup.js'\nimport css from '../lang/css.js'\nimport clike from '../lang/clike.js'\nimport regex from '../lang/regex.js'\nimport javascript from '../lang/javascript.js'\nimport abap from '../lang/abap.js'\nimport abnf from '../lang/abnf.js'\nimport actionscript from '../lang/actionscript.js'\nimport ada from '../lang/ada.js'\nimport agda from '../lang/agda.js'\nimport al from '../lang/al.js'\nimport antlr4 from '../lang/antlr4.js'\nimport apacheconf from '../lang/apacheconf.js'\nimport sql from '../lang/sql.js'\nimport apex from '../lang/apex.js'\nimport apl from '../lang/apl.js'\nimport applescript from '../lang/applescript.js'\nimport aql from '../lang/aql.js'\nimport c from '../lang/c.js'\nimport cpp from '../lang/cpp.js'\nimport arduino from '../lang/arduino.js'\nimport arff from '../lang/arff.js'\nimport armasm from '../lang/armasm.js'\nimport bash from '../lang/bash.js'\nimport yaml from '../lang/yaml.js'\nimport markdown from '../lang/markdown.js'\nimport arturo from '../lang/arturo.js'\nimport asciidoc from '../lang/asciidoc.js'\nimport csharp from '../lang/csharp.js'\nimport aspnet from '../lang/aspnet.js'\nimport asm6502 from '../lang/asm6502.js'\nimport asmatmel from '../lang/asmatmel.js'\nimport autohotkey from '../lang/autohotkey.js'\nimport autoit from '../lang/autoit.js'\nimport avisynth from '../lang/avisynth.js'\nimport avroIdl from '../lang/avro-idl.js'\nimport awk from '../lang/awk.js'\nimport basic from '../lang/basic.js'\nimport batch from '../lang/batch.js'\nimport bbcode from '../lang/bbcode.js'\nimport bbj from '../lang/bbj.js'\nimport bicep from '../lang/bicep.js'\nimport birb from '../lang/birb.js'\nimport bison from '../lang/bison.js'\nimport bnf from '../lang/bnf.js'\nimport bqn from '../lang/bqn.js'\nimport brainfuck from '../lang/brainfuck.js'\nimport brightscript from '../lang/brightscript.js'\nimport bro from '../lang/bro.js'\nimport bsl from '../lang/bsl.js'\nimport cfscript from '../lang/cfscript.js'\nimport chaiscript from '../lang/chaiscript.js'\nimport cil from '../lang/cil.js'\nimport cilkc from '../lang/cilkc.js'\nimport cilkcpp from '../lang/cilkcpp.js'\nimport clojure from '../lang/clojure.js'\nimport cmake from '../lang/cmake.js'\nimport cobol from '../lang/cobol.js'\nimport coffeescript from '../lang/coffeescript.js'\nimport concurnas from '../lang/concurnas.js'\nimport csp from '../lang/csp.js'\nimport cooklang from '../lang/cooklang.js'\nimport coq from '../lang/coq.js'\nimport ruby from '../lang/ruby.js'\nimport crystal from '../lang/crystal.js'\nimport cssExtras from '../lang/css-extras.js'\nimport csv from '../lang/csv.js'\nimport cue from '../lang/cue.js'\nimport cypher from '../lang/cypher.js'\nimport d from '../lang/d.js'\nimport dart from '../lang/dart.js'\nimport dataweave from '../lang/dataweave.js'\nimport dax from '../lang/dax.js'\nimport dhall from '../lang/dhall.js'\nimport diff from '../lang/diff.js'\nimport markupTemplating from '../lang/markup-templating.js'\nimport django from '../lang/django.js'\nimport dnsZoneFile from '../lang/dns-zone-file.js'\nimport docker from '../lang/docker.js'\nimport dot from '../lang/dot.js'\nimport ebnf from '../lang/ebnf.js'\nimport editorconfig from '../lang/editorconfig.js'\nimport eiffel from '../lang/eiffel.js'\nimport ejs from '../lang/ejs.js'\nimport elixir from '../lang/elixir.js'\nimport elm from '../lang/elm.js'\nimport lua from '../lang/lua.js'\nimport etlua from '../lang/etlua.js'\nimport erb from '../lang/erb.js'\nimport erlang from '../lang/erlang.js'\nimport excelFormula from '../lang/excel-formula.js'\nimport fsharp from '../lang/fsharp.js'\nimport factor from '../lang/factor.js'\nimport $false from '../lang/false.js'\nimport firestoreSecurityRules from '../lang/firestore-security-rules.js'\nimport flow from '../lang/flow.js'\nimport fortran from '../lang/fortran.js'\nimport ftl from '../lang/ftl.js'\nimport gml from '../lang/gml.js'\nimport gap from '../lang/gap.js'\nimport gcode from '../lang/gcode.js'\nimport gdscript from '../lang/gdscript.js'\nimport gedcom from '../lang/gedcom.js'\nimport gettext from '../lang/gettext.js'\nimport gherkin from '../lang/gherkin.js'\nimport git from '../lang/git.js'\nimport glsl from '../lang/glsl.js'\nimport gn from '../lang/gn.js'\nimport linkerScript from '../lang/linker-script.js'\nimport go from '../lang/go.js'\nimport goModule from '../lang/go-module.js'\nimport gradle from '../lang/gradle.js'\nimport graphql from '../lang/graphql.js'\nimport groovy from '../lang/groovy.js'\nimport less from '../lang/less.js'\nimport scss from '../lang/scss.js'\nimport textile from '../lang/textile.js'\nimport haml from '../lang/haml.js'\nimport handlebars from '../lang/handlebars.js'\nimport haskell from '../lang/haskell.js'\nimport haxe from '../lang/haxe.js'\nimport hcl from '../lang/hcl.js'\nimport hlsl from '../lang/hlsl.js'\nimport hoon from '../lang/hoon.js'\nimport hpkp from '../lang/hpkp.js'\nimport hsts from '../lang/hsts.js'\nimport json from '../lang/json.js'\nimport uri from '../lang/uri.js'\nimport http from '../lang/http.js'\nimport ichigojam from '../lang/ichigojam.js'\nimport icon from '../lang/icon.js'\nimport icuMessageFormat from '../lang/icu-message-format.js'\nimport idris from '../lang/idris.js'\nimport ignore from '../lang/ignore.js'\nimport inform7 from '../lang/inform7.js'\nimport ini from '../lang/ini.js'\nimport io from '../lang/io.js'\nimport j from '../lang/j.js'\nimport java from '../lang/java.js'\nimport php from '../lang/php.js'\nimport javadoclike from '../lang/javadoclike.js'\nimport scala from '../lang/scala.js'\nimport javadoc from '../lang/javadoc.js'\nimport javastacktrace from '../lang/javastacktrace.js'\nimport jexl from '../lang/jexl.js'\nimport jolie from '../lang/jolie.js'\nimport jq from '../lang/jq.js'\nimport jsTemplates from '../lang/js-templates.js'\nimport typescript from '../lang/typescript.js'\nimport jsdoc from '../lang/jsdoc.js'\nimport n4js from '../lang/n4js.js'\nimport jsExtras from '../lang/js-extras.js'\nimport json5 from '../lang/json5.js'\nimport jsonp from '../lang/jsonp.js'\nimport jsstacktrace from '../lang/jsstacktrace.js'\nimport julia from '../lang/julia.js'\nimport keepalived from '../lang/keepalived.js'\nimport keyman from '../lang/keyman.js'\nimport kotlin from '../lang/kotlin.js'\nimport kumir from '../lang/kumir.js'\nimport kusto from '../lang/kusto.js'\nimport latex from '../lang/latex.js'\nimport latte from '../lang/latte.js'\nimport scheme from '../lang/scheme.js'\nimport lilypond from '../lang/lilypond.js'\nimport liquid from '../lang/liquid.js'\nimport lisp from '../lang/lisp.js'\nimport livescript from '../lang/livescript.js'\nimport llvm from '../lang/llvm.js'\nimport log from '../lang/log.js'\nimport lolcode from '../lang/lolcode.js'\nimport magma from '../lang/magma.js'\nimport makefile from '../lang/makefile.js'\nimport mata from '../lang/mata.js'\nimport matlab from '../lang/matlab.js'\nimport maxscript from '../lang/maxscript.js'\nimport mel from '../lang/mel.js'\nimport mermaid from '../lang/mermaid.js'\nimport metafont from '../lang/metafont.js'\nimport mizar from '../lang/mizar.js'\nimport mongodb from '../lang/mongodb.js'\nimport monkey from '../lang/monkey.js'\nimport moonscript from '../lang/moonscript.js'\nimport n1ql from '../lang/n1ql.js'\nimport nand2tetrisHdl from '../lang/nand2tetris-hdl.js'\nimport naniscript from '../lang/naniscript.js'\nimport nasm from '../lang/nasm.js'\nimport neon from '../lang/neon.js'\nimport nevod from '../lang/nevod.js'\nimport nginx from '../lang/nginx.js'\nimport nim from '../lang/nim.js'\nimport nix from '../lang/nix.js'\nimport nsis from '../lang/nsis.js'\nimport objectivec from '../lang/objectivec.js'\nimport ocaml from '../lang/ocaml.js'\nimport odin from '../lang/odin.js'\nimport opencl from '../lang/opencl.js'\nimport openqasm from '../lang/openqasm.js'\nimport oz from '../lang/oz.js'\nimport parigp from '../lang/parigp.js'\nimport parser from '../lang/parser.js'\nimport pascal from '../lang/pascal.js'\nimport pascaligo from '../lang/pascaligo.js'\nimport psl from '../lang/psl.js'\nimport pcaxis from '../lang/pcaxis.js'\nimport peoplecode from '../lang/peoplecode.js'\nimport perl from '../lang/perl.js'\nimport phpdoc from '../lang/phpdoc.js'\nimport phpExtras from '../lang/php-extras.js'\nimport plantUml from '../lang/plant-uml.js'\nimport plsql from '../lang/plsql.js'\nimport powerquery from '../lang/powerquery.js'\nimport powershell from '../lang/powershell.js'\nimport processing from '../lang/processing.js'\nimport prolog from '../lang/prolog.js'\nimport promql from '../lang/promql.js'\nimport properties from '../lang/properties.js'\nimport protobuf from '../lang/protobuf.js'\nimport stylus from '../lang/stylus.js'\nimport twig from '../lang/twig.js'\nimport pug from '../lang/pug.js'\nimport puppet from '../lang/puppet.js'\nimport pure from '../lang/pure.js'\nimport purebasic from '../lang/purebasic.js'\nimport purescript from '../lang/purescript.js'\nimport python from '../lang/python.js'\nimport qsharp from '../lang/qsharp.js'\nimport q from '../lang/q.js'\nimport qml from '../lang/qml.js'\nimport qore from '../lang/qore.js'\nimport r from '../lang/r.js'\nimport racket from '../lang/racket.js'\nimport cshtml from '../lang/cshtml.js'\nimport jsx from '../lang/jsx.js'\nimport tsx from '../lang/tsx.js'\nimport reason from '../lang/reason.js'\nimport rego from '../lang/rego.js'\nimport renpy from '../lang/renpy.js'\nimport rescript from '../lang/rescript.js'\nimport rest from '../lang/rest.js'\nimport rip from '../lang/rip.js'\nimport roboconf from '../lang/roboconf.js'\nimport robotframework from '../lang/robotframework.js'\nimport rust from '../lang/rust.js'\nimport sas from '../lang/sas.js'\nimport sass from '../lang/sass.js'\nimport shellSession from '../lang/shell-session.js'\nimport smali from '../lang/smali.js'\nimport smalltalk from '../lang/smalltalk.js'\nimport smarty from '../lang/smarty.js'\nimport sml from '../lang/sml.js'\nimport solidity from '../lang/solidity.js'\nimport solutionFile from '../lang/solution-file.js'\nimport soy from '../lang/soy.js'\nimport turtle from '../lang/turtle.js'\nimport sparql from '../lang/sparql.js'\nimport splunkSpl from '../lang/splunk-spl.js'\nimport sqf from '../lang/sqf.js'\nimport squirrel from '../lang/squirrel.js'\nimport stan from '../lang/stan.js'\nimport stata from '../lang/stata.js'\nimport iecst from '../lang/iecst.js'\nimport supercollider from '../lang/supercollider.js'\nimport swift from '../lang/swift.js'\nimport systemd from '../lang/systemd.js'\nimport t4Templating from '../lang/t4-templating.js'\nimport t4Cs from '../lang/t4-cs.js'\nimport vbnet from '../lang/vbnet.js'\nimport t4Vb from '../lang/t4-vb.js'\nimport tap from '../lang/tap.js'\nimport tcl from '../lang/tcl.js'\nimport tt2 from '../lang/tt2.js'\nimport toml from '../lang/toml.js'\nimport tremor from '../lang/tremor.js'\nimport typoscript from '../lang/typoscript.js'\nimport unrealscript from '../lang/unrealscript.js'\nimport uorazor from '../lang/uorazor.js'\nimport v from '../lang/v.js'\nimport vala from '../lang/vala.js'\nimport velocity from '../lang/velocity.js'\nimport verilog from '../lang/verilog.js'\nimport vhdl from '../lang/vhdl.js'\nimport vim from '../lang/vim.js'\nimport visualBasic from '../lang/visual-basic.js'\nimport warpscript from '../lang/warpscript.js'\nimport wasm from '../lang/wasm.js'\nimport webIdl from '../lang/web-idl.js'\nimport wgsl from '../lang/wgsl.js'\nimport wiki from '../lang/wiki.js'\nimport wolfram from '../lang/wolfram.js'\nimport wren from '../lang/wren.js'\nimport xeora from '../lang/xeora.js'\nimport xmlDoc from '../lang/xml-doc.js'\nimport xojo from '../lang/xojo.js'\nimport xquery from '../lang/xquery.js'\nimport yang from '../lang/yang.js'\nimport zig from '../lang/zig.js'\nimport {refractor} from './core.js'\n\nrefractor.register(markup)\nrefractor.register(css)\nrefractor.register(clike)\nrefractor.register(regex)\nrefractor.register(javascript)\nrefractor.register(abap)\nrefractor.register(abnf)\nrefractor.register(actionscript)\nrefractor.register(ada)\nrefractor.register(agda)\nrefractor.register(al)\nrefractor.register(antlr4)\nrefractor.register(apacheconf)\nrefractor.register(sql)\nrefractor.register(apex)\nrefractor.register(apl)\nrefractor.register(applescript)\nrefractor.register(aql)\nrefractor.register(c)\nrefractor.register(cpp)\nrefractor.register(arduino)\nrefractor.register(arff)\nrefractor.register(armasm)\nrefractor.register(bash)\nrefractor.register(yaml)\nrefractor.register(markdown)\nrefractor.register(arturo)\nrefractor.register(asciidoc)\nrefractor.register(csharp)\nrefractor.register(aspnet)\nrefractor.register(asm6502)\nrefractor.register(asmatmel)\nrefractor.register(autohotkey)\nrefractor.register(autoit)\nrefractor.register(avisynth)\nrefractor.register(avroIdl)\nrefractor.register(awk)\nrefractor.register(basic)\nrefractor.register(batch)\nrefractor.register(bbcode)\nrefractor.register(bbj)\nrefractor.register(bicep)\nrefractor.register(birb)\nrefractor.register(bison)\nrefractor.register(bnf)\nrefractor.register(bqn)\nrefractor.register(brainfuck)\nrefractor.register(brightscript)\nrefractor.register(bro)\nrefractor.register(bsl)\nrefractor.register(cfscript)\nrefractor.register(chaiscript)\nrefractor.register(cil)\nrefractor.register(cilkc)\nrefractor.register(cilkcpp)\nrefractor.register(clojure)\nrefractor.register(cmake)\nrefractor.register(cobol)\nrefractor.register(coffeescript)\nrefractor.register(concurnas)\nrefractor.register(csp)\nrefractor.register(cooklang)\nrefractor.register(coq)\nrefractor.register(ruby)\nrefractor.register(crystal)\nrefractor.register(cssExtras)\nrefractor.register(csv)\nrefractor.register(cue)\nrefractor.register(cypher)\nrefractor.register(d)\nrefractor.register(dart)\nrefractor.register(dataweave)\nrefractor.register(dax)\nrefractor.register(dhall)\nrefractor.register(diff)\nrefractor.register(markupTemplating)\nrefractor.register(django)\nrefractor.register(dnsZoneFile)\nrefractor.register(docker)\nrefractor.register(dot)\nrefractor.register(ebnf)\nrefractor.register(editorconfig)\nrefractor.register(eiffel)\nrefractor.register(ejs)\nrefractor.register(elixir)\nrefractor.register(elm)\nrefractor.register(lua)\nrefractor.register(etlua)\nrefractor.register(erb)\nrefractor.register(erlang)\nrefractor.register(excelFormula)\nrefractor.register(fsharp)\nrefractor.register(factor)\nrefractor.register($false)\nrefractor.register(firestoreSecurityRules)\nrefractor.register(flow)\nrefractor.register(fortran)\nrefractor.register(ftl)\nrefractor.register(gml)\nrefractor.register(gap)\nrefractor.register(gcode)\nrefractor.register(gdscript)\nrefractor.register(gedcom)\nrefractor.register(gettext)\nrefractor.register(gherkin)\nrefractor.register(git)\nrefractor.register(glsl)\nrefractor.register(gn)\nrefractor.register(linkerScript)\nrefractor.register(go)\nrefractor.register(goModule)\nrefractor.register(gradle)\nrefractor.register(graphql)\nrefractor.register(groovy)\nrefractor.register(less)\nrefractor.register(scss)\nrefractor.register(textile)\nrefractor.register(haml)\nrefractor.register(handlebars)\nrefractor.register(haskell)\nrefractor.register(haxe)\nrefractor.register(hcl)\nrefractor.register(hlsl)\nrefractor.register(hoon)\nrefractor.register(hpkp)\nrefractor.register(hsts)\nrefractor.register(json)\nrefractor.register(uri)\nrefractor.register(http)\nrefractor.register(ichigojam)\nrefractor.register(icon)\nrefractor.register(icuMessageFormat)\nrefractor.register(idris)\nrefractor.register(ignore)\nrefractor.register(inform7)\nrefractor.register(ini)\nrefractor.register(io)\nrefractor.register(j)\nrefractor.register(java)\nrefractor.register(php)\nrefractor.register(javadoclike)\nrefractor.register(scala)\nrefractor.register(javadoc)\nrefractor.register(javastacktrace)\nrefractor.register(jexl)\nrefractor.register(jolie)\nrefractor.register(jq)\nrefractor.register(jsTemplates)\nrefractor.register(typescript)\nrefractor.register(jsdoc)\nrefractor.register(n4js)\nrefractor.register(jsExtras)\nrefractor.register(json5)\nrefractor.register(jsonp)\nrefractor.register(jsstacktrace)\nrefractor.register(julia)\nrefractor.register(keepalived)\nrefractor.register(keyman)\nrefractor.register(kotlin)\nrefractor.register(kumir)\nrefractor.register(kusto)\nrefractor.register(latex)\nrefractor.register(latte)\nrefractor.register(scheme)\nrefractor.register(lilypond)\nrefractor.register(liquid)\nrefractor.register(lisp)\nrefractor.register(livescript)\nrefractor.register(llvm)\nrefractor.register(log)\nrefractor.register(lolcode)\nrefractor.register(magma)\nrefractor.register(makefile)\nrefractor.register(mata)\nrefractor.register(matlab)\nrefractor.register(maxscript)\nrefractor.register(mel)\nrefractor.register(mermaid)\nrefractor.register(metafont)\nrefractor.register(mizar)\nrefractor.register(mongodb)\nrefractor.register(monkey)\nrefractor.register(moonscript)\nrefractor.register(n1ql)\nrefractor.register(nand2tetrisHdl)\nrefractor.register(naniscript)\nrefractor.register(nasm)\nrefractor.register(neon)\nrefractor.register(nevod)\nrefractor.register(nginx)\nrefractor.register(nim)\nrefractor.register(nix)\nrefractor.register(nsis)\nrefractor.register(objectivec)\nrefractor.register(ocaml)\nrefractor.register(odin)\nrefractor.register(opencl)\nrefractor.register(openqasm)\nrefractor.register(oz)\nrefractor.register(parigp)\nrefractor.register(parser)\nrefractor.register(pascal)\nrefractor.register(pascaligo)\nrefractor.register(psl)\nrefractor.register(pcaxis)\nrefractor.register(peoplecode)\nrefractor.register(perl)\nrefractor.register(phpdoc)\nrefractor.register(phpExtras)\nrefractor.register(plantUml)\nrefractor.register(plsql)\nrefractor.register(powerquery)\nrefractor.register(powershell)\nrefractor.register(processing)\nrefractor.register(prolog)\nrefractor.register(promql)\nrefractor.register(properties)\nrefractor.register(protobuf)\nrefractor.register(stylus)\nrefractor.register(twig)\nrefractor.register(pug)\nrefractor.register(puppet)\nrefractor.register(pure)\nrefractor.register(purebasic)\nrefractor.register(purescript)\nrefractor.register(python)\nrefractor.register(qsharp)\nrefractor.register(q)\nrefractor.register(qml)\nrefractor.register(qore)\nrefractor.register(r)\nrefractor.register(racket)\nrefractor.register(cshtml)\nrefractor.register(jsx)\nrefractor.register(tsx)\nrefractor.register(reason)\nrefractor.register(rego)\nrefractor.register(renpy)\nrefractor.register(rescript)\nrefractor.register(rest)\nrefractor.register(rip)\nrefractor.register(roboconf)\nrefractor.register(robotframework)\nrefractor.register(rust)\nrefractor.register(sas)\nrefractor.register(sass)\nrefractor.register(shellSession)\nrefractor.register(smali)\nrefractor.register(smalltalk)\nrefractor.register(smarty)\nrefractor.register(sml)\nrefractor.register(solidity)\nrefractor.register(solutionFile)\nrefractor.register(soy)\nrefractor.register(turtle)\nrefractor.register(sparql)\nrefractor.register(splunkSpl)\nrefractor.register(sqf)\nrefractor.register(squirrel)\nrefractor.register(stan)\nrefractor.register(stata)\nrefractor.register(iecst)\nrefractor.register(supercollider)\nrefractor.register(swift)\nrefractor.register(systemd)\nrefractor.register(t4Templating)\nrefractor.register(t4Cs)\nrefractor.register(vbnet)\nrefractor.register(t4Vb)\nrefractor.register(tap)\nrefractor.register(tcl)\nrefractor.register(tt2)\nrefractor.register(toml)\nrefractor.register(tremor)\nrefractor.register(typoscript)\nrefractor.register(unrealscript)\nrefractor.register(uorazor)\nrefractor.register(v)\nrefractor.register(vala)\nrefractor.register(velocity)\nrefractor.register(verilog)\nrefractor.register(vhdl)\nrefractor.register(vim)\nrefractor.register(visualBasic)\nrefractor.register(warpscript)\nrefractor.register(wasm)\nrefractor.register(webIdl)\nrefractor.register(wgsl)\nrefractor.register(wiki)\nrefractor.register(wolfram)\nrefractor.register(wren)\nrefractor.register(xeora)\nrefractor.register(xmlDoc)\nrefractor.register(xojo)\nrefractor.register(xquery)\nrefractor.register(yang)\nrefractor.register(zig)\n\nexport {refractor} from './core.js'\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\n\n/** @type {Syntax} */\nexport default function yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/\n    // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag =\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/\n    // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)'\n    // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey =\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n        /<PLAIN>/g,\n        function () {\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n            .source\n        }\n      )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern =\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n          .replace(/<<prop>>/g, function () {\n            return properties\n          })\n          .replace(/<<value>>/g, function () {\n            return value\n          })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nrust.displayName = 'rust'\nrust.aliases = []\n\n/** @type {Syntax} */\nexport default function rust(Prism) {\n  ;(function (Prism) {\n    var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source\n    for (var i = 0; i < 2; i++) {\n      // support 4 levels of nested comments\n      multilineComment = multilineComment.replace(/<self>/g, function () {\n        return multilineComment\n      })\n    }\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return /[^\\s\\S]/.source\n    })\n    Prism.languages.rust = {\n      comment: [\n        {\n          pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      string: {\n        pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n        greedy: true\n      },\n      attribute: {\n        pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n        greedy: true,\n        alias: 'attr-name',\n        inside: {\n          string: null // see below\n        }\n      },\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'closure-punctuation': {\n            pattern: /^\\||\\|$/,\n            alias: 'punctuation'\n          },\n          rest: null // see below\n        }\n      },\n      'lifetime-annotation': {\n        pattern: /'\\w+/,\n        alias: 'symbol'\n      },\n      'fragment-specifier': {\n        pattern: /(\\$\\w+:)[a-z]+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      variable: /\\$\\w+/,\n      'function-definition': {\n        pattern: /(\\bfn\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'type-definition': {\n        pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'module-declaration': [\n        {\n          pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n          lookbehind: true,\n          alias: 'namespace'\n        },\n        {\n          pattern:\n            /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /::/\n          }\n        }\n      ],\n      keyword: [\n        // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n        /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n        // primitives and str\n        // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n        /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n      ],\n      // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n      // and Rust's naming conventions recommend snake_case anyway.\n      // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n      macro: {\n        pattern: /\\b\\w+!/,\n        alias: 'property'\n      },\n      constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n      'class-name': /\\b[A-Z]\\w*\\b/,\n      namespace: {\n        pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n    }\n    Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust\n    Prism.languages.rust['attribute'].inside['string'] =\n      Prism.languages.rust['string']\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nbash.displayName = 'bash'\nbash.aliases = ['sh', 'shell']\n\n/** @type {Syntax} */\nexport default function bash(Prism) {\n  ;(function (Prism) {\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\n    // + make sure PS1..4 are here as they are not always set,\n    // - some useless things.\n    var envVars =\n      '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b'\n    var commandAfterHeredoc = {\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n      lookbehind: true,\n      alias: 'punctuation',\n      // this looks reasonably well in all themes\n      inside: null // see below\n    }\n    var insideString = {\n      bash: commandAfterHeredoc,\n      environment: {\n        pattern: RegExp('\\\\$' + envVars),\n        alias: 'constant'\n      },\n      variable: [\n        // [0]: Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          greedy: true,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [\n              {\n                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                lookbehind: true\n              },\n              /^\\$\\(\\(/\n            ],\n            number:\n              /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator:\n              /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        },\n        // [1]: Command Substitution\n        {\n          pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        },\n        // [2]: Brace expansion\n        {\n          pattern: /\\$\\{[^}]+\\}/,\n          greedy: true,\n          inside: {\n            operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n            punctuation: /[\\[\\]]/,\n            environment: {\n              pattern: RegExp('(\\\\{)' + envVars),\n              lookbehind: true,\n              alias: 'constant'\n            }\n          }\n        },\n        /\\$(?:\\w+|[#?*!@$])/\n      ],\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\n      entity:\n        /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n    }\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/.*/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\$])#.*/,\n        lookbehind: true\n      },\n      'function-name': [\n        // a) function foo {\n        // b) foo() {\n        // c) function foo() {\n        // but not “foo {”\n        {\n          // a) and c)\n          pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n          lookbehind: true,\n          alias: 'function'\n        },\n        {\n          // b)\n          pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n          alias: 'function'\n        }\n      ],\n      // Highlight variable names as variables in for and select beginnings.\n      'for-or-select': {\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight variable names as variables in the left-hand part\n      // of assignments (“=” and “+=”).\n      'assign-left': {\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,\n        inside: {\n          environment: {\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        },\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight parameter names as variables\n      parameter: {\n        pattern: /(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      string: [\n        // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        // Here-document with quotes around the tag\n        // → No expansion (so no “inside”).\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            bash: commandAfterHeredoc\n          }\n        },\n        // “Normal” string\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n          pattern:\n            /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n          pattern: /(^|[^$\\\\])'[^']*'/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n          pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n          greedy: true,\n          inside: {\n            entity: insideString.entity\n          }\n        }\n      ],\n      environment: {\n        pattern: RegExp('\\\\$?' + envVars),\n        alias: 'constant'\n      },\n      variable: insideString.variable,\n      function: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      builtin: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n        lookbehind: true,\n        // Alias added to make those easier to distinguish from strings.\n        alias: 'class-name'\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      'file-descriptor': {\n        pattern: /\\B&\\d\\b/,\n        alias: 'important'\n      },\n      operator: {\n        // Lots of redirections here, but not just that.\n        pattern:\n          /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n        inside: {\n          'file-descriptor': {\n            pattern: /^\\d/,\n            alias: 'important'\n          }\n        }\n      },\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n      number: {\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n        lookbehind: true\n      }\n    }\n    commandAfterHeredoc.inside = Prism.languages.bash\n\n    /* Patterns in command substitution. */\n    var toBeCopied = [\n      'comment',\n      'function-name',\n      'for-or-select',\n      'assign-left',\n      'parameter',\n      'string',\n      'environment',\n      'function',\n      'keyword',\n      'builtin',\n      'boolean',\n      'file-descriptor',\n      'operator',\n      'punctuation',\n      'number'\n    ]\n    var inside = insideString.variable[1].inside\n    for (var i = 0; i < toBeCopied.length; i++) {\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]]\n    }\n    Prism.languages.sh = Prism.languages.bash\n    Prism.languages.shell = Prism.languages.bash\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorMarkup from './markup.js'\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = ['md']\n\n/** @type {Syntax} */\nexport default function markdown(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\n\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner\n      })\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\n    }\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\n      .source\n    var tableRow =\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\n        /__/g,\n        function () {\n          return tableCell\n        }\n      )\n    var tableLine =\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\n        .source\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'front-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp(\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\n          'm'\n        ),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp(\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\n            ),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [\n        {\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n          pattern:\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        {\n          // ```optional language\n          // code block\n          // ```\n          pattern: /^```[\\s\\S]*?^```$/m,\n          greedy: true,\n          inside: {\n            'code-block': {\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n              lookbehind: true\n            },\n            'code-language': {\n              pattern: /^(```).+/,\n              lookbehind: true\n            },\n            punctuation: /```/\n          }\n        }\n      ],\n      title: [\n        {\n          // title 1\n          // =======\n\n          // title 2\n          // -------\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n          alias: 'important',\n          inside: {\n            punctuation: /==+$|--+$/\n          }\n        },\n        {\n          // # title 1\n          // ###### title 6\n          pattern: /(^\\s*)#.+/m,\n          lookbehind: true,\n          alias: 'important',\n          inside: {\n            punctuation: /^#+|#+$/\n          }\n        }\n      ],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern:\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string:\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern:\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    })\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(\n        function (inside) {\n          if (token !== inside) {\n            Prism.languages.markdown[token].inside.content.inside[inside] =\n              Prism.languages.markdown[inside]\n          }\n        }\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return\n      }\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return\n        }\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (token.type !== 'code') {\n            walkTokens(token.content)\n            continue\n          }\n\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n\n          var codeLang = token.content[1]\n          var codeBlock = token.content[3]\n          if (\n            codeLang &&\n            codeBlock &&\n            codeLang.type === 'code-language' &&\n            codeBlock.type === 'code-block' &&\n            typeof codeLang.content === 'string'\n          ) {\n            // this might be a language that Prism does not support\n\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content\n              .replace(/\\b#/g, 'sharp')\n              .replace(/\\b\\+\\+/g, 'pp')\n            // only use the first word\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\n            var alias = 'language-' + lang\n\n            // add alias\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias]\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias]\n            } else {\n              codeBlock.alias.push(alias)\n            }\n          }\n        }\n      }\n      walkTokens(env.tokens)\n    })\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return\n      }\n      var codeLang = ''\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i]\n        var match = /language-(.+)/.exec(cls)\n        if (match) {\n          codeLang = match[1]\n          break\n        }\n      }\n      var grammar = Prism.languages[codeLang]\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id =\n            'md-' +\n            new Date().valueOf() +\n            '-' +\n            Math.floor(Math.random() * 1e16)\n          env.attributes['id'] = id\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id)\n            if (ele) {\n              ele.innerHTML = Prism.highlight(\n                ele.textContent,\n                Prism.languages[codeLang],\n                codeLang\n              )\n            }\n          })\n        }\n      } else {\n        env.content = Prism.highlight(env.content.value, grammar, codeLang)\n      }\n    })\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\n\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    }\n\n    // IE 11 doesn't support `String.fromCodePoint`\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\n\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, '')\n\n      // decode known entities\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase()\n        if (code[0] === '#') {\n          var value\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16)\n          } else {\n            value = Number(code.slice(1))\n          }\n          return fromCodePoint(value)\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code]\n          if (known) {\n            return known\n          }\n\n          // unable to decode\n          return m\n        }\n      })\n      return text\n    }\n    Prism.languages.md = Prism.languages.markdown\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorJavascript from './javascript.js'\ntypescript.displayName = 'typescript'\ntypescript.aliases = ['ts']\n\n/** @type {Syntax} */\nexport default function typescript(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      'class-name': {\n        pattern:\n          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      builtin:\n        /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n    })\n\n    // The keywords TypeScript adds to JavaScript\n    Prism.languages.typescript.keyword.push(\n      /\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n      // keywords that have to be followed by an identifier\n      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n      // This is for `import type *, {}`\n      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\n    )\n\n    // doesn't work with TS because TS is too complex\n    delete Prism.languages.typescript['parameter']\n    delete Prism.languages.typescript['literal-property']\n\n    // a version of typescript specifically for highlighting types\n    var typeInside = Prism.languages.extend('typescript', {})\n    delete typeInside['class-name']\n    Prism.languages.typescript['class-name'].inside = typeInside\n    Prism.languages.insertBefore('typescript', 'function', {\n      decorator: {\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n        inside: {\n          at: {\n            pattern: /^@/,\n            alias: 'operator'\n          },\n          function: /^[\\s\\S]+/\n        }\n      },\n      'generic-function': {\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n        pattern:\n          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n        greedy: true,\n        inside: {\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            // everything after the first <\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      }\n    })\n    Prism.languages.ts = Prism.languages.typescript\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\njava.displayName = 'java'\njava.aliases = []\n\n/** @type {Syntax} */\nexport default function java(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/\n\n    // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source\n\n    // based on the java naming conventions\n    var className = {\n      pattern: RegExp(\n        /(^|[^\\w.])/.source +\n          classNamePrefix +\n          /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source\n      ),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      'class-name': [\n        className,\n        {\n          // variables, parameters, and constructor references\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            /(^|[^\\w.])/.source +\n              classNamePrefix +\n              /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/\n                .source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        },\n        {\n          // class names based on keyword\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/\n              .source +\n              classNamePrefix +\n              /[A-Z]\\w*\\b/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      },\n      constant: /\\b[A-Z][A-Z_\\d]+\\b/\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      char: {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      import: [\n        {\n          pattern: RegExp(\n            /(\\bimport\\s+)/.source +\n              classNamePrefix +\n              /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source\n          ),\n          lookbehind: true,\n          inside: {\n            namespace: className.inside.namespace,\n            punctuation: /\\./,\n            operator: /\\*/,\n            'class-name': /\\w+/\n          }\n        },\n        {\n          pattern: RegExp(\n            /(\\bimport\\s+static\\s+)/.source +\n              classNamePrefix +\n              /(?:\\w+|\\*)(?=\\s*;)/.source\n          ),\n          lookbehind: true,\n          alias: 'static',\n          inside: {\n            namespace: className.inside.namespace,\n            static: /\\b\\w+$/,\n            punctuation: /\\./,\n            operator: /\\*/,\n            'class-name': /\\w+/\n          }\n        }\n      ],\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ndiff.displayName = 'diff'\ndiff.aliases = []\n\n/** @type {Syntax} */\nexport default function diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n        // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m,\n        // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ]\n\n      // deleted, inserted, unchanged, diff\n    }\n\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    }\n\n    // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    })\n\n    // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nregex.displayName = 'regex'\nregex.aliases = []\n\n/** @type {Syntax} */\nexport default function regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\n    var charSet = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charSetWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar)\n\n    // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      'char-class': {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'char-class-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'char-class-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          'char-set': charSetWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      'char-set': charSet,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\npython.displayName = 'python'\npython.aliases = ['py']\n\n/** @type {Syntax} */\nexport default function python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern:\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern:\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin:\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number:\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.python['string-interpolation'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.python\n  Prism.languages.py = Prism.languages.python\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorC from './c.js'\ncpp.displayName = 'cpp'\ncpp.aliases = []\n\n/** @type {Syntax} */\nexport default function cpp(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    var keyword =\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\n      /<keyword>/g,\n      function () {\n        return keyword.source\n      }\n    )\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\n              /<keyword>/g,\n              function () {\n                return keyword.source\n              }\n            )\n          ),\n          lookbehind: true\n        },\n        // This is intended to capture the class name of method implementations like:\n        //   void foo::bar() const {}\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n        // it starts with an uppercase letter. This approximation should give decent results.\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n        // This will capture the class name before destructors like:\n        //   Foo::~Foo() {}\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n        // This also intends to capture the class name of method implementations but here the class has template\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n      ],\n      keyword: keyword,\n      number: {\n        pattern:\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n        greedy: true\n      },\n      operator:\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n      boolean: /\\b(?:false|true)\\b/\n    })\n    Prism.languages.insertBefore('cpp', 'string', {\n      module: {\n        // https://en.cppreference.com/w/cpp/language/modules\n        pattern: RegExp(\n          /(\\b(?:import|module)\\s+)/.source +\n            '(?:' +\n            // header-name\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n            '|' +\n            // module name or partition or both\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\n              /<mod-name>/g,\n              function () {\n                return modName\n              }\n            ) +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: /^[<\"][\\s\\S]+/,\n          operator: /:/,\n          punctuation: /\\./\n        }\n      },\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'generic-function': {\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            alias: 'class-name',\n            inside: Prism.languages.cpp\n          }\n        }\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'class-name', {\n      // the base clause is an optional list of parent classes\n      // https://en.cppreference.com/w/cpp/language/class\n      'base-clause': {\n        pattern:\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: Prism.languages.extend('cpp', {})\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'double-colon',\n      {\n        // All untokenized words that are not namespaces should be class names\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n      },\n      Prism.languages.cpp['base-clause']\n    )\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\njson.displayName = 'json'\njson.aliases = ['webmanifest']\n\n/** @type {Syntax} */\nexport default function json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['cs', 'dotnet']\n\n/** @type {Syntax} */\nexport default function csharp(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    }\n\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n      // keywords which are used to declare a type\n      typeDeclaration: 'class enum interface record struct',\n      // contextual keywords\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\n      contextual:\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n      // all other keywords\n      other:\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n    }\n\n    // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var typeDeclarationKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration\n    )\n    var keywords = RegExp(\n      keywordsToPattern(\n        keywordKinds.type +\n          ' ' +\n          keywordKinds.typeDeclaration +\n          ' ' +\n          keywordKinds.contextual +\n          ' ' +\n          keywordKinds.other\n      )\n    )\n    var nonTypeKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.contextual +\n        ' ' +\n        keywordKinds.other\n    )\n    var nonContextualKeywords = keywordsToPattern(\n      keywordKinds.type +\n        ' ' +\n        keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.other\n    )\n\n    // types\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n      nonTypeKeywords,\n      genericName\n    ])\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\n    var typeExpressionWithoutTuple = replace(\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\n      [identifier, array]\n    )\n    var tupleElement = replace(\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\n      [generic, nestedRound, array]\n    )\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\n    var typeExpression = replace(\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\n      [tuple, identifier, array]\n    )\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    }\n\n    // strings & characters\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // Using static\n          // using static System.Math;\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n            identifier\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (type)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n            name,\n            typeExpression\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (alias)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Type declarations\n          // class Foo<A, B>\n          // interface Foo<out A, B>\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n            typeDeclarationKeywords,\n            genericName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Single catch exception declaration\n          // catch(Foo)\n          // (things like catch(Foo e) is covered by variable declaration)\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Name of the type parameter of generic constraints\n          // where Foo : class\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Casts and checks via as and is.\n          // as Foo<A>, is Bar<B>\n          // (things like if(a is Foo b) is covered by variable declaration)\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n            typeExpressionWithoutTuple\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Variable, field and parameter declaration\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n          pattern: re(\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\n              .source,\n            [typeExpression, nonContextualKeywords, name]\n          ),\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n      number:\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('csharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'punctuation', {\n      'named-parameter': {\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      namespace: {\n        // namespace Foo.Bar {}\n        // using Foo.Bar;\n        pattern: re(\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\n          [name]\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'type-expression': {\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\n        pattern: re(\n          /(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\n            .source,\n          [nestedRound]\n        ),\n        lookbehind: true,\n        alias: 'class-name',\n        inside: typeInside\n      },\n      'return-type': {\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n        // int Foo => 0; int Foo { get; set } = 0;\n        pattern: re(\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\n          [typeExpression, identifier]\n        ),\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      'constructor-invocation': {\n        // new List<Foo<Bar[]>> { }\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n        lookbehind: true,\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/\n      'generic-method': {\n        // foo<Bar>()\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n        inside: {\n          function: re(/^<<0>>/.source, [name]),\n          generic: {\n            pattern: RegExp(generic),\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      },\n      'type-list': {\n        // The list of types inherited or of generic constraints\n        // class Foo<F> : Bar, IList<FooBar>\n        // where F : Bar, IList<int>\n        pattern: re(\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\n            .source,\n          [\n            typeDeclarationKeywords,\n            genericName,\n            name,\n            typeExpression,\n            keywords.source,\n            nestedRound,\n            /\\bnew\\s*\\(\\s*\\)/.source\n          ]\n        ),\n        lookbehind: true,\n        inside: {\n          'record-arguments': {\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n              genericName,\n              nestedRound\n            ]),\n            lookbehind: true,\n            greedy: true,\n            inside: Prism.languages.csharp\n          },\n          keyword: keywords,\n          'class-name': {\n            pattern: RegExp(typeExpression),\n            greedy: true,\n            inside: typeInside\n          },\n          punctuation: /[,()]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^[\\t ]*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern:\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    })\n\n    // attributes\n    var regularStringOrCharacter = regularString + '|' + character\n    var regularStringCharacterOrComment = replace(\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\n      [regularStringOrCharacter]\n    )\n    var roundExpression = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n\n    // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n    var attrTarget =\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\n        .source\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n      identifier,\n      roundExpression\n    ])\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      attribute: {\n        // Attributes\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n        pattern: re(\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\n            .source,\n          [attrTarget, attr]\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          target: {\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n            alias: 'keyword'\n          },\n          'attribute-arguments': {\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n            inside: Prism.languages.csharp\n          },\n          'class-name': {\n            pattern: RegExp(identifier),\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          punctuation: /[:,]/\n        }\n      }\n    })\n\n    // string interpolation\n    var formatString = /:[^}\\r\\n]+/.source\n    // multi line\n    var mInterpolationRound = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      mInterpolationRound,\n      formatString\n    ])\n    // single line\n    var sInterpolationRound = nested(\n      replace(\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\n          .source,\n        [regularStringOrCharacter]\n      ),\n      2\n    )\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      sInterpolationRound,\n      formatString\n    ])\n    function createInterpolationInside(interpolation, interpolationRound) {\n      return {\n        interpolation: {\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n          lookbehind: true,\n          inside: {\n            'format-string': {\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                interpolationRound,\n                formatString\n              ]),\n              lookbehind: true,\n              inside: {\n                punctuation: /^:/\n              }\n            },\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: 'language-csharp',\n              inside: Prism.languages.csharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.insertBefore('csharp', 'string', {\n      'interpolation-string': [\n        {\n          pattern: re(\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\n            [mInterpolation]\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n        },\n        {\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n            sInterpolation\n          ]),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n        }\n      ],\n      char: {\n        pattern: RegExp(character),\n        greedy: true\n      }\n    })\n    Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nc.displayName = 'c'\nc.aliases = []\n\n/** @type {Syntax} */\nexport default function c(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern:\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    string: {\n      // https://en.cppreference.com/w/c/language/string_literal\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    char: {\n      // https://en.cppreference.com/w/c/language/character_constant\n      pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern:\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [\n          {\n            // highlight the path of the include statement as a string\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\n            lookbehind: true\n          },\n          Prism.languages.c['string']\n        ],\n        char: Prism.languages.c['char'],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n            lookbehind: true\n          },\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n            lookbehind: true,\n            alias: 'function'\n          }\n        ],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('c', 'function', {\n    // highlight predefined macros as constants\n    constant:\n      /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n  })\n  delete Prism.languages.c['boolean']\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorCss from './css.js'\nsass.displayName = 'sass'\nsass.aliases = []\n\n/** @type {Syntax} */\nexport default function sass(Prism) {\n  Prism.register(refractorCss)\n  ;(function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n      {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important\n\n    // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern:\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorClike from './clike.js'\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\n\n/** @type {Syntax} */\nexport default function ruby(Prism) {\n  Prism.register(refractorClike)\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;(function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      },\n      'class-name': {\n        pattern:\n          /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword:\n        /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n      operator:\n        /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n      punctuation: /[(){}[\\].,;]/\n    })\n    Prism.languages.insertBefore('ruby', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    var interpolation = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        content: {\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n    delete Prism.languages.ruby.function\n    var percentExpression =\n      '(?:' +\n      [\n        /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n        /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n        /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n        /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n      ].join('|') +\n      ')'\n    var symbolName =\n      /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/\n        .source\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      'regex-literal': [\n        {\n          pattern: RegExp(\n            /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\n          ),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: [\n        {\n          pattern: RegExp(/(^|[^:]):/.source + symbolName),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'method-definition': {\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n        lookbehind: true,\n        inside: {\n          function: /\\b\\w+$/,\n          keyword: /^self\\b/,\n          'class-name': /^\\w+/,\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'string', {\n      'string-literal': [\n        {\n          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?/\n              }\n            },\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?'|'$/\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      'command-literal': [\n        {\n          pattern: RegExp(/%x/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        },\n        {\n          pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        }\n      ]\n    })\n    delete Prism.languages.ruby.string\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin:\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n    })\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\ncss.displayName = 'css'\ncss.aliases = []\n\n/** @type {Syntax} */\nexport default function css(Prism) {\n  ;(function (Prism) {\n    var string =\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: RegExp(\n          '@[\\\\w-](?:' +\n            /[^;{\\s\"']|\\s+(?!\\s)/.source +\n            '|' +\n            string.source +\n            ')*?' +\n            /(?:;|(?=\\s*\\{))/.source\n        ),\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern:\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          }\n          // See rest below\n        }\n      },\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n            string.source +\n            ')*(?=\\\\s*\\\\{)'\n        ),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      markup.tag.addAttribute('style', 'css')\n    }\n  })(Prism)\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nswift.displayName = 'swift'\nswift.aliases = []\n\n/** @type {Syntax} */\nexport default function swift(Prism) {\n  Prism.languages.swift = {\n    comment: {\n      // Nested comments are supported up to 2 levels\n      pattern:\n        /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-literal': [\n      // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n      {\n        pattern: RegExp(\n          /(^|[^\"#])/.source +\n            '(?:' +\n            // single-line string\n            /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/\n              .source +\n            '|' +\n            // multi-line string\n            /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/\n              .source +\n            ')' +\n            /(?![\"#])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\\\($/,\n            alias: 'punctuation'\n          },\n          punctuation: /\\\\(?=[\\r\\n])/,\n          string: /[\\s\\S]+/\n        }\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\"#])(#+)/.source +\n            '(?:' +\n            // single-line string\n            /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/\n              .source +\n            '|' +\n            // multi-line string\n            /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source +\n            ')' +\n            '\\\\2'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\#+\\($/,\n            alias: 'punctuation'\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    ],\n    directive: {\n      // directives with conditions\n      pattern: RegExp(\n        /#/.source +\n          '(?:' +\n          (/(?:elseif|if)\\b/.source +\n            '(?:[ \\t]*' +\n            // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/\n              .source +\n            ')+') +\n          '|' +\n          /(?:else|endif)\\b/.source +\n          ')'\n      ),\n      alias: 'property',\n      inside: {\n        'directive-name': /^#\\w+/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        operator: /!|&&|\\|\\||[<>]=?/,\n        punctuation: /[(),]/\n      }\n    },\n    literal: {\n      pattern:\n        /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n      alias: 'constant'\n    },\n    'other-directive': {\n      pattern: /#\\w+\\b/,\n      alias: 'property'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'atrule'\n    },\n    'function-definition': {\n      pattern: /(\\bfunc\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    label: {\n      // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n      pattern:\n        /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n      lookbehind: true,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    nil: {\n      pattern: /\\bnil\\b/,\n      alias: 'constant'\n    },\n    'short-argument': /\\$\\d+\\b/,\n    omit: {\n      pattern: /\\b_\\b/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n    'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n    // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n    // This regex only supports ASCII operators.\n    operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n    punctuation: /[{}[\\]();,.:\\\\]/\n  }\n  Prism.languages.swift['string-literal'].forEach(function (rule) {\n    rule.inside['interpolation'].inside = Prism.languages.swift\n  })\n}\n","// @ts-nocheck\n/**\n * @import {Syntax} from '../core.js'\n */\nimport refractorC from './c.js'\nobjectivec.displayName = 'objectivec'\nobjectivec.aliases = ['objc']\n\n/** @type {Syntax} */\nexport default function objectivec(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    string: {\n      pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  })\n  delete Prism.languages.objectivec['class-name']\n  Prism.languages.objc = Prism.languages.objectivec\n}\n"],"names":["javascript","Prism","register","refractorClike","languages","extend","clike","pattern","lookbehind","keyword","function","number","RegExp","source","operator","insertBefore","regex","greedy","inside","alias","parameter","constant","hashbang","interpolation","rest","string","markup","tag","addInlined","addAttribute","js","displayName","aliases","vbnet","refractorBasic","comment","punctuation","kotlin","interpolationInside","expression","char","annotation","label","kt","kts","php","refractorMarkupTemplating","delimiter","variable","package","property","string_interpolation","attribute","hooks","add","env","test","code","buildPlaceholders","tokenizePlaceholders","Schema","constructor","normal","space","this","merge","definitions","index","length","Object","assign","normalize","value","toLowerCase","prototype","Info","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","types","DefinedInfo","mask","super","mark","check","values","key","own","hasOwnProperty","create","definition","prop","properties","call","info","transform","attributes","includes","xlink","_","slice","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","name","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","style","tabIndex","target","title","translate","type","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","end","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","valid","svgBase","dash","cap","kebab","$0","camelcase","charAt","toUpperCase","search","buttonTypes","Set","addProperty","schema","Type","replace","dashes","find","undefined","Number","isNaN","spaces","commas","join","parsePrimitive","Array","isArray","concat","push","String","finalResult","addChild","nodes","Error","children","h","defaultTagName","caseSensitive","adjust","createAdjustMap","selector","node","_len","arguments","_key","unshift","props","previous","tagName","lastIndex","match","exec","subvalue","parseSelector","has","isProperties","core","uniqueId","plainTextGrammar","util","o","toString","objId","obj","defineProperty","clone","deepClone","visited","forEach","v","i","plain","plaintext","txt","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","propertyType","plugins","highlight","run","tokens","tokenize","Token","stringify","encode","tokenList","LinkedList","addAfter","head","matchGrammar","array","next","tail","toArray","all","callbacks","matchedStr","matchPattern","pos","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","currentNode","reach","str","removeCount","p","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","Refractor","refractor","TypeError","syntax","map","registered","aliasOrLanguage","listLanguages","classes","record","parseEntities","basic","scss","refractorCss","atrule","rule","url","parent","statement","null","markupTemplating","refractorMarkup","getPlaceholder","defineProperties","placeholderPattern","replaceFilter","tokenStack","indexOf","walkTokens","t","s","substring","middle","replacement","apply","splice","prolog","doctype","cdata","namespace","entity","includedCdataInside","def","attrName","mathml","ssml","atom","rss","go","builtin","ellipsis","ini","section","c","cpp","arduino","bash","csharp","css","diff","java","json","less","lua","makefile","yaml","markdown","objectivec","perl","python","ruby","rust","sass","sql","swift","typescript","refractorCpp","ino","brackets","filehandle","identifier","abap","abnf","coreRules","range","terminal","repetition","actionscript","refractorJavascript","ada","agda","al","antlr4","escape","command","g4","apacheconf","apex","refractorSql","keywords","insertClassName","classNameInside","trigger","apl","assignment","dfn","applescript","aql","arff","armasm","directive","instruction","arturo","createLanguageString","embedded","character","multistring","literal","predicate","sugar","symbol","art","asciidoc","quoted","interpreted","table","specifiers","hr","admonition","callout","macro","inline","italic","bold","copyFromAsciiDoc","l","split","adoc","aspnet","refractorCsharp","asm6502","asmatmel","autohotkey","autoit","avisynth","re","replacements","m","allinternals","argument","avs","avroIdl","avdl","awk","gawk","batch","bbcode","shortcode","bbj","bicep","datatype","decorator","birb","metadata","bison","refractorC","bnf","rbnf","bqn","shebang","brainfuck","pointer","decrement","branching","brightscript","bro","bsl","oscript","cfscript","cfc","chaiscript","cil","cilkc","cilkcpp","clojure","cmake","inserted","cobol","level","coffeescript","script","coffee","concurnas","langext","conc","csp","none","hash","host","important","cooklang","single_token_suffix","multi_token_infix","multi_token","timer_units","meta","cookware","quantity","ingredient","amount","unit","timer","duration","coq","commentSource","punct","crystal","refractorRuby","args","expansion","cssExtras","selectorInside","class","combinator","hexcode","csv","cue","stringLiteral","cypher","relationship","dart","packagePrefix","generics","dataweave","date","dax","measure","dhall","django","jinja2","dnsZoneFile","docker","spaceAfterBackSlash","option","stringRule","commentRule","options","dockerfile","dot","ID","IDInside","withID","gv","ebnf","special","editorconfig","eiffel","ejs","eta","elixir","doc","module","elm","hvariable","etlua","refractorLua","erb","erlang","excelFormula","reference","sheet","file","cell","column","row","fsharp","preprocessor","factor","comment_inside","string_inside","regexp","combinators","arrToWordsRegExp","arr","builtins","$false","firestoreSecurityRules","flow","fortran","ftl","FTL_EXPR","gml","gamemakerlanguage","gap","shell","continuation","gcode","checksum","gdscript","gedcom","gettext","po","gherkin","tableRow","pystring","feature","scenario","outline","td","th","git","deleted","coord","glsl","gn","gni","linkerScript","goModule","gradle","graphql","description","scalar","fragment","validTokens","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","addAlias","mutationEnd","varToken","close","stackHeight","groovy","textile","modifierRegex","parenthesesRegex","withModifier","modifierTokens","phrase","modifier","image","footnote","acronym","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","haml","filters","all_filters","handlebars","block","hbs","mustache","haskell","hs","haxe","reification","hcl","heredoc","hlsl","hoon","hpkp","hsts","uri","query","pair","authority","port","http","headerValueOf","header","langs","httpLanguages","suffixTypes","getSuffixPattern","contentType","suffix","ichigojam","icon","icuMessageFormat","nested","stringPattern","argumentSource","nestedMessage","message","idris","refractorHaskell","idr","ignore","entry","gitignore","hgignore","npmignore","inform7","substitution","verb","position","io","adverb","conjunction","javadoclike","javaDocLike","docLanguage","tokenName","docCommentSupport","addSupport","scala","refractorJava","javadoc","refractorJavadoclike","codeLinePattern","memberReference","field","line","javastacktrace","exceptions","more","jexl","jolie","aggregates","redirects","jq","stringInterpolation","jsTemplates","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","counter","tokenizeWithHooks","tokenizeInterpolationExpression","tempGrammar","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","interpolationExpression","placeholders","afterTokens","Boolean","supportedLanguages","ts","jsx","tsx","stringContent","findTemplateStrings","jsdoc","refractorTypescript","parameterPrefix","example","n4js","n4jsd","jsExtras","withId","imports","exports","spread","arrow","dom","console","maybeClassNameTokens","json5","refractorJson","jsonp","jsstacktrace","filename","julia","keepalived","ip","email","keyman","kumir","nonId","wrapId","kum","kusto","datetime","latex","funcPattern","insideEqu","equation","headline","tex","context","latte","refractorPhp","markupLatte","trim","SortedBNF","lilypond","refractorScheme","schemeExpression","ly","liquid","empty","insideRaw","tagMatch","lisp","simple_form","primitive","marker","par","nestedPar","heading","interactive","defvar","defun","lambda","car","arg","varform","forms","arglist","sublist","elisp","emacs","livescript","llvm","log","exception","separator","domain","uuid","time","lolcode","magma","output","generator","mata","orgType","missing","matlab","maxscript","mel","flag","mermaid","metafont","mizar","mongodb","operators","operatorsSource","monkey","moonscript","moon","n1ql","nand2tetrisHdl","naniscript","expressionDef","params","getTextContent","define","nani","input","stack","bracket","bracketsIndex","pop","isBracketsBalanced","nasm","neon","nevod","fields","quantifier","colon","nginx","nim","nix","antiquotation","nsis","ocaml","variant","odin","escapes","discard","opencl","openqasm","qasm","oz","parigp","parser","pascal","asm","objectpascal","pascaligo","braces","reduce","accum","psl","pcaxis","tlist","px","peoplecode","pcode","phpdoc","typeExpression","phpExtras","plantUml","arrowAttr","arrowDirection","arrowBody","arrowRight","arrowPrefix","divider","plsql","powerquery","pq","mscript","powershell","processing","promql","vectorMatching","protobuf","builtinTypes","stylus","func","twig","pug","each","branch","mixin","filter_pattern","puppet","pure","inlineLanguageRe","purebasic","pbfasm","purescript","purs","qsharp","qualifiedName","typeInside","regularString","interpolationExpr","depthLog2","qs","q","qml","jsString","jsComment","jsExpr","qore","racket","rkt","cshtml","commentLike","stringLike","round","square","curly","angle","inlineCs","tagAttrValue","tagAttrs","tagContent","tagRegion","cs","inlineValue","razor","stringifyToken","openedTags","notTagNorBrace","openedBraces","plainText","refractorJsx","reason","rego","renpy","rpy","rescript","res","rip","roboconf","component","optional","wildcard","robotframework","createSection","extendecInside","docTag","testNameLike","testPropertyLike","settings","documentation","variables","tasks","robot","sas","numericConstant","macroVariable","macroKeyword","equals","altformat","globalStatements","submitStatement","actionSets","casActions","datalines","shellSession","refractorBash","strings","user","smali","smalltalk","smarty","smartyPattern","smartyLiteralMode","sml","word","smlnj","solidity","sol","solutionFile","guid","soy","numberPattern","soyLitteralMode","turtle","trig","sparql","refractorTurtle","rq","splunkSpl","sqf","squirrel","stan","higherOrderFunctions","constraint","stata","refractorMata","refractorPython","iecst","address","supercollider","sclang","systemd","quotesSource","t4Templating","createBlock","contentAlias","insideLang","standard","t4Cs","refractorT4Templating","t4","createT4","t4Vb","refractorVbnet","tap","refractorYaml","fail","pass","pragma","bailout","plan","subtest","yamlish","tcl","tt2","toml","insertKey","tremor","extractor","troy","trickle","typoscript","tsconfig","unrealscript","category","uc","uscript","uorazor","generic","vala","velocity","unparsed","verilog","vhdl","vim","visualBasic","vb","vba","warpscript","wasm","webIdl","wgsl","functions","wiki","emphasis","nowiki","wolfram","blank","mathematica","wl","nb","wren","xeora","xeoracube","xmlDoc","insertDocComment","docComment","slashDocComment","tickDocComment","xojo","xquery","extension","yang","zig","IDENTIFIER","ALIGN","TYPE","anchorOrAlias","plainKey","createValuePattern","yml","multilineComment","envVars","commandAfterHeredoc","insideString","environment","toBeCopied","sh","inner","createInline","tableCell","tableLine","blockquote","strike","codeLang","codeBlock","cls","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","fromCodePoint","fromCharCode","md","at","classNamePrefix","import","static","PREFIXES","unchanged","specialEscape","rangeChar","groupName","backreference","anchor","group","alternation","py","modName","webmanifest","keywordKinds","keywordsToPattern","words","typeDeclarationKeywords","nonTypeKeywords","nonContextualKeywords","nestedRound","genericName","typeExpressionWithoutTuple","tupleElement","tuple","verbatimString","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolationRound","dotnet","percentExpression","symbolName","rb","nil","omit","objc"],"sourceRoot":""}